{"file_contents":{"design_guidelines.md":{"content":"# KPI Digital Website Design Guidelines\n\n## Design Approach: Reference-Based (Premium Product Pages)\nDrawing inspiration from Apple product pages for motion and polish, combined with high-end trade service authenticity and startup energy dynamics.\n\n## Core Design Principles\n- **Bold Modern Credibility**: Balance blue-collar trust with digital innovation sophistication\n- **Intentional Motion**: Premium animations that enhance usability, never gimmicky\n- **Conversion-First**: Every design decision serves the conversion funnel\n- **Trust Through Design**: Credibility signals woven naturally into the visual flow\n\n## Color Palette & Visual Treatment\n**Primary Brand Colors** (from KPI Digital logo):\n- Deep navy/charcoal for authority and trust\n- Vibrant accent color for CTAs and highlights\n- Clean whites and light grays for contrast and breathing room\n\n**Strategic Color Usage**:\n- High contrast for conversion elements (CTAs, forms, trust badges)\n- Subtle gradients on hero backgrounds and card elements\n- Conservative color application maintaining professional credibility\n\n## Typography System\n- **Primary**: Modern sans-serif with strong character (similar to Inter or Poppins)\n- **Hierarchy**: Bold headlines, medium body text, strategic use of weight for emphasis\n- **Sizing**: Mobile-first scaling with generous line-height for readability\n\n## Layout & Spacing System\n**Tailwind Units**: Consistent use of 4, 8, 12, 16, 24 for spacing\n- Generous whitespace for premium feel\n- Grid-based sections with clear visual separation\n- Mobile-first responsive breakpoints\n\n## Interactive Design Elements\n\n### Motion & Animation Strategy\n- **Hero**: Animated headline reveals with staggered text appearance\n- **Scroll Triggers**: Progressive content reveals as users scroll\n- **Micro-interactions**: Button hover states, form field focus, loading states\n- **Parallax**: Subtle background movement for depth (respecting motion preferences)\n\n### Component Interactions\n- **Value Cards**: Flip animations on hover with smooth transitions\n- **Process Flow**: Animated progress indicators with scroll-based activation\n- **Navigation**: Sticky header with adaptive colors and smooth scrolling\n- **Testimonials**: Carousel with touch/swipe support and smooth transitions\n\n## Conversion & Trust Elements\n\n### Trust Signals Integration\n- License and certification badges prominently displayed\n- Customer testimonials with photos and company logos\n- Process transparency through animated step indicators\n- Real-time social proof elements\n\n### CTA Design Strategy\n- Primary CTAs: High contrast, generous padding, clear action words\n- Secondary CTAs: Outline variants with blurred backgrounds when over images\n- Form Design: Conditional fields, real-time validation, progress indicators\n\n## Performance & Accessibility Design Features\n\n### Core Web Vitals Optimization\n- Minimize layout shifts through proper image sizing\n- Optimize animation performance for smooth 60fps\n- Lazy-load non-critical elements below the fold\n\n### Accessibility Compliance (WCAG 2.2 AA)\n- **Motion**: Respect prefers-reduced-motion settings\n- **Navigation**: Full keyboard accessibility with visible focus states\n- **Contrast**: Minimum 4.5:1 ratio for all text elements\n- **Touch Targets**: Minimum 44px for mobile interactions\n\n## Content Structure & Flow\n\n### Section Hierarchy\n1. **Hero**: Immersive with animated elements and clear value proposition\n2. **Pain Points**: Problem identification with visual storytelling\n3. **Solution**: KPI Digital's approach with animated reveals\n4. **Value Props**: Interactive cards showcasing services\n5. **Process**: 3-step animated flow with progress tracking\n6. **Social Proof**: Testimonials and trust signals\n7. **CTA**: Final conversion push with form integration\n8. **Footer**: Secondary navigation and contact options\n\n## Images Strategy\n- **Hero Image**: Large, full-width background (1920x1080) showing professional trades workers with digital overlay elements\n- **Value Cards**: Service-specific imagery (automation dashboards, planning tools)\n- **Process Section**: Iconographic representations of each step\n- **Social Proof**: Professional headshots and company logos\n- **Background Elements**: Subtle geometric patterns and gradient overlays\n\n## Mobile-First Considerations\n- Touch-friendly interactions with generous hit areas\n- Swipe gestures for carousels and image galleries\n- Simplified navigation with hamburger menu\n- Optimized form layouts for mobile completion\n- Performance-first image delivery with responsive sizing\n\n## Brand Tone Integration\n- **Visual Confidence**: Bold typography and clear hierarchy\n- **Approachable Premium**: Modern aesthetics without alienating trade professionals\n- **Practical Innovation**: Technology that clearly serves business needs\n- **Trustworthy Authority**: Professional presentation with authentic photography\n\nThis design framework ensures the website achieves award-worthy visual appeal while maintaining laser focus on conversion optimization and user experience excellence.","size_bytes":5047},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# KPI Digital Website\n\n## Overview\n\nKPI Digital is a modern, high-converting website designed for trades businesses (electricians, plumbers, HVAC, carpentry) seeking digital transformation. The site positions KPI Digital as the go-to partner for trades businesses wanting clarity, systems, and growth. Built with React, TypeScript, and modern web technologies, it features premium animations, conversion-focused design, and comprehensive business education content.\n\n## Recent Changes\n\n### October 2025 - Comprehensive Security Hardening\n- **Content Security Policy (CSP)**: Environment-aware strict CSP implementation\n  - Production: Strict policy with script-src limited to 'self' only (no unsafe-inline/unsafe-eval)\n  - Includes base-uri, form-action, frame-src, object-src protections\n  - Development mode allows Vite dev server with appropriate exceptions\n- **Input Validation & Sanitization**: Created comprehensive security utility (server/security.ts)\n  - HTML escaping for all user inputs in emails (XSS prevention)\n  - Email validation with validator library and length constraints\n  - Text sanitization with configurable length limits (500-5000 chars)\n  - Name validation (letters, spaces, hyphens, apostrophes only)\n  - Whitelist validation for calculator types\n  - Numeric bounds checking for scores\n- **Security Headers**: Multi-layered header protection via Helmet\n  - HSTS with 1-year max-age, includeSubDomains, and preload\n  - X-Frame-Options: DENY (clickjacking prevention)\n  - X-Content-Type-Options: nosniff\n  - Referrer-Policy: strict-origin-when-cross-origin\n  - Permissions-Policy: disabled geolocation, microphone, camera, payment\n  - X-Powered-By header disabled\n- **Rate Limiting**: Dual-tier rate limiting strategy\n  - Global: 1000 requests per 15 minutes per IP\n  - Email endpoints: 10 requests per hour per IP (anti-spam)\n  - Trust proxy configured for accurate IP detection behind Replit infrastructure\n- **CORS Policy**: Environment-aware cross-origin resource sharing\n  - Production: Whitelist-only (kpidigital.com.au via ALLOWED_ORIGINS)\n  - Credentials disabled (no authentication cookies in use)\n  - Development: Permissive for dev convenience\n- **Error Handling**: Secure error management without information leakage\n  - Generic error messages to clients\n  - Detailed logging server-side only\n  - Stack traces only in development mode\n- **DoS Prevention**: Body size limits (10MB for JSON/urlencoded)\n- **NoSQL Injection Prevention**: express-mongo-sanitize middleware (defense-in-depth)\n- **Dependency Security**: Audited and addressed known vulnerabilities\n  - All production dependencies secure\n  - Remaining esbuild dev-only issues acknowledged as acceptable risk\n\n### January 2025 - Navigation & Legal Compliance Updates\n- **Navigation Enhancement**: Added unified Navigation component to all calculator pages (Clarity, Systems, Growth) and legal pages for consistent user experience\n- **Logo Functionality**: Made KPI Digital logo clickable on all pages - navigates to home with smooth scroll to top\n- **Intelligent Navigation**: Navigation handles both wouter page routing and smooth section scrolling with proper scroll positioning\n- **Legal Pages**: Added comprehensive Privacy Policy, Terms of Service, and Cookie Policy pages with 2025-compliant Australian law content\n- **Dual Email System**: Quote form sends notifications to both louis@kpidigital.com.au and client confirmation emails via Resend API\n- **Backend Security**: Added RESEND_API_KEY validation guards to all email endpoints with user-friendly error messages\n- **Copyright Updates**: Updated all copyright dates and year references to 2025 across the site\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development practices\n- **Routing**: Wouter for lightweight client-side routing with support for education pages\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent, premium design\n- **Animations**: Framer Motion for smooth transitions, scroll-triggered animations, and micro-interactions\n- **State Management**: TanStack Query for server state management and caching\n- **Form Handling**: React Hook Form with Zod validation for type-safe form processing\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Database Provider**: Neon serverless PostgreSQL for scalable cloud hosting\n- **Session Management**: Connect-pg-simple for PostgreSQL-based session storage\n- **API Design**: RESTful endpoints with JSON responses and proper error handling\n\n### Security Architecture\n- **Content Security Policy**: Helmet with environment-aware CSP (strict in production, permissive for Vite dev)\n- **Input Validation**: Comprehensive validation utility with HTML escaping, email/text sanitization, whitelist validation\n- **Security Headers**: HSTS, X-Frame-Options, X-Content-Type-Options, Referrer-Policy, Permissions-Policy\n- **Rate Limiting**: Dual-tier strategy (global + strict email endpoint limits) with trust proxy for accurate IP detection\n- **CORS**: Environment-aware with production whitelist and disabled credentials\n- **Error Handling**: Generic client messages with detailed server-side logging (dev only)\n- **Attack Prevention**: XSS prevention via HTML escaping, NoSQL injection prevention, DoS protection via body limits\n\n### Design System\n- **Component Library**: Radix UI primitives with custom styling via shadcn/ui\n- **Color System**: CSS custom properties with HSL values for consistent theming\n- **Typography**: Modern sans-serif fonts (Inter, DM Sans, Geist Mono) with responsive scaling\n- **Layout**: Mobile-first responsive design with Tailwind's breakpoint system\n- **Motion**: Intentional animations using Framer Motion with respect for motion preferences\n\n### Content Management\n- **Value Propositions**: Structured data system for educational content with slugs, descriptions, and FAQs\n- **SEO Optimization**: Dynamic meta tag management with Open Graph and Twitter Card support\n- **Educational Pages**: Dynamic routing for service explanation pages with comprehensive content\n\n### Performance & Accessibility\n- **Build System**: Vite for fast development and optimized production builds\n- **Core Web Vitals**: Optimized for LCP ≤2.5s, INP ≤200ms, CLS ≤0.1\n- **Accessibility**: WCAG 2.2 AA compliance with keyboard navigation and motion preferences\n- **Error Handling**: Runtime error overlay for development with proper error boundaries\n\n### Conversion Features\n- **Smart Forms**: Multi-step quote forms with conditional fields and file upload support\n- **Trust Signals**: Integrated testimonials, certifications, and social proof elements\n- **CTA Optimization**: Strategically placed call-to-action buttons with smooth scroll behavior\n- **Analytics Ready**: Structured data markup for LocalBusiness, Service, and Review schemas\n- **Clarity Calculator**: Interactive 12-question assessment tool that evaluates business clarity across 6 key areas:\n  - Lead Generation (tracking, sources, cost per lead)\n  - Lead Engagement (booking rates, show-up rates)\n  - Sales Conversion (close rates, repeatable processes)\n  - Offer Value & Deal Size (ticket size, lifetime value, upsells)\n  - Cash Collected (collection vs. contracted, receivables)\n  - Bottleneck Diagnosis (identifying growth constraints)\n  - Provides 4-tier results: No Clarity (0-8), Low Clarity (9-18), Moderate Clarity (19-27), High Clarity (28-36)\n  - Each tier includes business impact analysis and actionable next steps\n- **Systems Calculator**: Interactive 28-question assessment tool that evaluates systems maturity across 6 key areas:\n  - Sales & Lead Systems (AI-powered lead scoring, CRM automation, call analysis)\n  - Marketing Systems (AI content, predictive analytics, chatbots, ROI tracking)\n  - Product/Service Delivery (automated onboarding, AI quality control, client portals)\n  - Finance Systems (AI forecasting, automated invoicing, anomaly detection)\n  - People & Management (AI productivity tools, performance tracking, automated training)\n  - Data & Infrastructure (API integration, AI data cleaning, predictive dashboards)\n  - Provides 4-tier results: No Systems (0-21), Basic Systems (22-42), Intermediate Systems (43-63), Advanced Systems (64-84)\n  - Each tier includes systems maturity analysis, business impact, and implementation guidance\n- **Growth Calculator**: Interactive 25-question assessment tool that evaluates growth readiness across 5 key areas:\n  - Market Positioning & Demand (market share, competitive advantages, demand generation)\n  - Scalable Operations (process documentation, team capacity, quality consistency)\n  - Financial Health (profitability, cash reserves, funding access)\n  - Team & Leadership (hiring capacity, delegation, leadership skills)\n  - Strategic Planning (growth targets, market expansion, innovation pipeline)\n  - Provides 4-tier results: Not Ready (0-18), Foundation Stage (19-37), Growth Ready (38-56), Scale Ready (57-75)\n  - Each tier includes growth readiness analysis, critical gaps, and strategic recommendations\n- **PDF Report Generation**: All three calculators feature comprehensive professional PDF report downloads:\n  - Client-side PDF generation using @react-pdf/renderer with Helvetica font\n  - Multi-page A4 reports (8-15 pages depending on calculator) with full KPI Digital branding\n  - **Professional Grayscale Design:**\n    - Black/white/grayscale color scheme aligned with KPI Digital branding\n    - Actual company logo integration (100x100px cover, 40x40px headers)\n    - Sophisticated palette: Black (#000000), Dark Gray (#2D2D2D), Medium Gray (#666666), Light Gray (#E5E5E5), White (#FFFFFF)\n    - High-contrast design optimized for professional printing\n  - **Report Structure:**\n    - Cover page with black background, centered logo, and white text\n    - Table of contents with page numbers\n    - Executive summary with score breakdown and tier analysis\n    - Question-by-question analysis grouped by category (one category per page)\n    - Each question includes: Business Impact, DIY Approach, and Professional KPI Digital Solution\n    - Impact boxes: Light gray background with medium gray border\n    - Solution boxes: Dark gray background with white text (premium look)\n    - Next Steps & Recommendations page\n    - Work With KPI Digital services page\n  - **Comprehensive Content:** \n    - Clarity: 12 questions with detailed insights across 6 categories\n    - Systems: 28 questions with comprehensive guidance across 6 categories  \n    - Growth: 25 questions with strategic recommendations across 5 categories\n  - Email capture modal for user contact information\n  - Automatic email notification to louis@kpidigital.com.au with client details\n  - Graceful error handling that separates PDF download success from notification failures\n  - Uses Resend API for reliable email delivery\n  - Professional layout optimized for printing with proper pagination\n\n## External Dependencies\n\n### Core Technologies\n- **Database**: Neon PostgreSQL serverless database for production data storage\n- **ORM**: Drizzle with drizzle-kit for database migrations and schema management\n- **Validation**: Zod for runtime type checking and form validation\n\n### UI & Animation Libraries\n- **Component System**: Radix UI primitives for accessible, unstyled components\n- **Animation**: Framer Motion for advanced animations and gesture handling\n- **Icons**: Lucide React for consistent iconography\n- **Carousel**: Embla Carousel for smooth testimonial and content carousels\n\n### Development Tools\n- **Build Tool**: Vite with React plugin for fast development and builds\n- **Styling**: Tailwind CSS with PostCSS for utility-first styling\n- **Fonts**: Google Fonts integration for typography (Architects Daughter, DM Sans, Fira Code, Geist Mono)\n- **Development**: TSX for TypeScript execution and hot reloading\n\n### Utility Libraries\n- **Date Handling**: date-fns for date formatting and manipulation\n- **Class Management**: clsx and class-variance-authority for conditional CSS classes\n- **Command Palette**: cmdk for search and command interfaces\n- **Intersection Observer**: react-intersection-observer for scroll-triggered animations\n- **PDF Generation**: @react-pdf/renderer for client-side PDF creation\n- **Email Service**: Resend API for transactional email notifications","size_bytes":12522},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport helmet from \"helmet\";\nimport rateLimit from \"express-rate-limit\";\nimport cors from \"cors\";\nimport mongoSanitize from \"express-mongo-sanitize\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\n\n// Security: Trust proxy (required when behind a reverse proxy like Replit)\napp.set('trust proxy', 1);\n\n// Security: Disable X-Powered-By header\napp.disable('x-powered-by');\n\n// Security: Environment-aware CSP - strict in production, permissive only in dev\nconst isProduction = process.env.NODE_ENV === 'production';\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: isProduction ? [\"'self'\"] : [\"'self'\", \"'unsafe-inline'\", \"'unsafe-eval'\"], // Strict in prod, permissive for Vite dev\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\", \"blob:\"],\n      connectSrc: [\"'self'\", \"https://api.resend.com\"],\n      frameSrc: [\"'none'\"],\n      objectSrc: [\"'none'\"],\n      baseUri: [\"'self'\"],\n      formAction: [\"'self'\"],\n      upgradeInsecureRequests: isProduction ? [] : null,\n    },\n  },\n  hsts: {\n    maxAge: 31536000, // 1 year\n    includeSubDomains: true,\n    preload: true,\n  },\n  frameguard: { action: 'deny' },\n  noSniff: true,\n  xssFilter: true,\n  referrerPolicy: { policy: 'strict-origin-when-cross-origin' },\n}));\n\n// Security: Additional Permissions-Policy header\napp.use((_req, res, next) => {\n  res.setHeader(\n    'Permissions-Policy',\n    'geolocation=(), microphone=(), camera=(), payment=()'\n  );\n  next();\n});\n\n// Security: CORS policy\nconst corsOptions = {\n  origin: process.env.NODE_ENV === 'production' \n    ? process.env.ALLOWED_ORIGINS?.split(',') || ['https://kpidigital.com.au']\n    : true, // Allow all in development\n  credentials: false, // No authentication cookies used in this app\n  optionsSuccessStatus: 200,\n};\napp.use(cors(corsOptions));\n\n// Security: Body size limits to prevent DoS\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: false, limit: '10mb' }));\n\n// Security: Sanitize data to prevent NoSQL injection\napp.use(mongoSanitize({\n  replaceWith: '_',\n  onSanitize: ({ key }) => {\n    console.warn(`Sanitized potentially dangerous key: ${key}`);\n  },\n}));\n\n// Security: Global rate limiter for all requests\nconst globalLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 1000, // Limit each IP to 1000 requests per windowMs\n  message: 'Too many requests from this IP, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\napp.use(globalLimiter);\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  try {\n    const server = await registerRoutes(app);\n\n    // Security: Error handler that prevents information leakage\n    app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n      const status = err.status || err.statusCode || 500;\n      \n      // Log error details server-side only\n      console.error('Error:', {\n        message: err.message,\n        stack: process.env.NODE_ENV === 'development' ? err.stack : undefined,\n        status,\n      });\n      \n      // Send generic error message to client (no stack traces or sensitive info)\n      const message = status === 500 \n        ? \"An unexpected error occurred. Please try again later.\"\n        : err.message || \"Internal Server Error\";\n\n      res.status(status).json({ \n        error: message,\n        // Only include stack trace in development\n        ...(process.env.NODE_ENV === 'development' && { stack: err.stack }),\n      });\n    });\n\n    // importantly only setup vite in development and after\n    // setting up all the other routes so the catch-all route\n    // doesn't interfere with the other routes\n    if (app.get(\"env\") === \"development\") {\n      await setupVite(app, server);\n    } else {\n      serveStatic(app);\n    }\n\n    // ALWAYS serve the app on the port specified in the environment variable PORT\n    // Other ports are firewalled. Default to 5000 if not specified.\n    // this serves both the API and the client.\n    // It is the only port that is not firewalled.\n    const port = parseInt(process.env.PORT || '5000', 10);\n    \n    server.listen({\n      port,\n      host: \"0.0.0.0\",\n      reusePort: true,\n    }, () => {\n      log(`serving on port ${port}`);\n    });\n\n    // Handle server errors\n    server.on('error', (error: NodeJS.ErrnoException) => {\n      console.error('Server error:', error);\n      if (error.code === 'EADDRINUSE') {\n        console.error(`Port ${port} is already in use`);\n      }\n      process.exit(1);\n    });\n\n  } catch (error) {\n    console.error('Failed to start server:', error);\n    process.exit(1);\n  }\n})();\n","size_bytes":5621},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport rateLimit from \"express-rate-limit\";\nimport { storage } from \"./storage\";\nimport { \n  escapeHtml, \n  sanitizeEmail, \n  sanitizeText, \n  sanitizeName,\n  validateCalculatorType,\n  sanitizeScore,\n  validateTierName \n} from \"./security\";\n\n// Security: Strict rate limiter for email endpoints (prevent spam/abuse)\nconst emailLimiter = rateLimit({\n  windowMs: 60 * 60 * 1000, // 1 hour\n  max: 10, // Limit each IP to 10 email requests per hour\n  message: 'Too many requests. Please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // POST endpoint to handle quote form submissions\n  app.post(\"/api/submit-quote\", emailLimiter, async (req, res) => {\n    try {\n      // Validate RESEND_API_KEY is configured\n      if (!process.env.RESEND_API_KEY) {\n        console.error('RESEND_API_KEY environment variable is not set');\n        return res.status(500).json({\n          error: \"Email service is not configured. Please contact support.\"\n        });\n      }\n\n      const {\n        firstName,\n        lastName,\n        email,\n        company,\n        serviceType,\n        projectDescription,\n        timeline,\n        budget,\n        hearAboutUs\n      } = req.body;\n\n      // Security: Validate and sanitize all inputs\n      const sanitizedFirstName = sanitizeName(firstName, 50);\n      const sanitizedLastName = sanitizeName(lastName, 50);\n      const sanitizedEmail = sanitizeEmail(email);\n      const sanitizedCompany = sanitizeText(company, 200);\n      const sanitizedServiceType = sanitizeText(serviceType, 100);\n      const sanitizedProjectDescription = sanitizeText(projectDescription, 5000);\n      const sanitizedTimeline = sanitizeText(timeline, 100);\n      const sanitizedBudget = budget ? sanitizeText(budget, 100) : '';\n      const sanitizedHearAboutUs = hearAboutUs ? sanitizeText(hearAboutUs, 500) : '';\n\n      // Validate required fields after sanitization\n      if (!sanitizedFirstName || !sanitizedLastName || !sanitizedEmail || !sanitizedCompany || \n          !sanitizedServiceType || !sanitizedProjectDescription || !sanitizedTimeline) {\n        return res.status(400).json({\n          error: \"Invalid or missing required fields\"\n        });\n      }\n\n      // Security: Escape HTML in all user inputs for email\n      const escapedFirstName = escapeHtml(sanitizedFirstName);\n      const escapedLastName = escapeHtml(sanitizedLastName);\n      const escapedEmail = escapeHtml(sanitizedEmail);\n      const escapedCompany = escapeHtml(sanitizedCompany);\n      const escapedServiceType = escapeHtml(sanitizedServiceType);\n      const escapedProjectDescription = escapeHtml(sanitizedProjectDescription);\n      const escapedTimeline = escapeHtml(sanitizedTimeline);\n      const escapedBudget = sanitizedBudget ? escapeHtml(sanitizedBudget) : '';\n      const escapedHearAboutUs = sanitizedHearAboutUs ? escapeHtml(sanitizedHearAboutUs) : '';\n\n      // Send notification email to Louis\n      const notificationResponse = await fetch('https://api.resend.com/emails', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.RESEND_API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          from: 'KPI Digital <onboarding@resend.dev>',\n          to: ['louis@kpidigital.com.au'],\n          subject: `New Quote Request - ${escapedCompany}`,\n          html: `\n            <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n              <h2 style=\"color: #ea580c;\">New Quote Request</h2>\n              \n              <div style=\"background-color: #fef3f2; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n                <h3 style=\"margin-top: 0;\">Client Information</h3>\n                <p><strong>Name:</strong> ${escapedFirstName} ${escapedLastName}</p>\n                <p><strong>Email:</strong> ${escapedEmail}</p>\n                <p><strong>Company:</strong> ${escapedCompany}</p>\n              </div>\n\n              <div style=\"background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n                <h3 style=\"margin-top: 0;\">Project Details</h3>\n                <p><strong>Service Type:</strong> ${escapedServiceType}</p>\n                <p><strong>Timeline:</strong> ${escapedTimeline}</p>\n                ${escapedBudget ? `<p><strong>Budget:</strong> ${escapedBudget}</p>` : ''}\n                ${escapedHearAboutUs ? `<p><strong>How they heard about us:</strong> ${escapedHearAboutUs}</p>` : ''}\n              </div>\n\n              <div style=\"background-color: #f9fafb; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n                <h3 style=\"margin-top: 0;\">Project Description</h3>\n                <p style=\"white-space: pre-wrap;\">${escapedProjectDescription}</p>\n              </div>\n\n              <p style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e5e5; color: #666; font-size: 14px;\">\n                This quote request was submitted through the KPI Digital website on ${new Date().toLocaleString('en-AU', { timeZone: 'Australia/Sydney' })}.\n              </p>\n            </div>\n          `,\n        }),\n      });\n\n      if (!notificationResponse.ok) {\n        const errorData = await notificationResponse.text();\n        console.error('Resend API error (notification):', errorData);\n        return res.status(500).json({\n          error: \"Failed to send notification email\"\n        });\n      }\n\n      // Send confirmation email to client\n      const confirmationResponse = await fetch('https://api.resend.com/emails', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.RESEND_API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          from: 'KPI Digital <onboarding@resend.dev>',\n          to: [sanitizedEmail],\n          subject: 'Quote Request Received - KPI Digital',\n          html: `\n            <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n              <h2 style=\"color: #ea580c;\">Thank You for Your Quote Request!</h2>\n              \n              <p>Hi ${escapedFirstName},</p>\n              \n              <p>We've received your quote request and our team will review it shortly. We'll get back to you within 24 hours with a custom proposal tailored to your needs.</p>\n\n              <div style=\"background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n                <h3 style=\"margin-top: 0;\">Your Request Summary</h3>\n                <p><strong>Service Type:</strong> ${escapedServiceType}</p>\n                <p><strong>Company:</strong> ${escapedCompany}</p>\n                <p><strong>Timeline:</strong> ${escapedTimeline}</p>\n                ${escapedBudget ? `<p><strong>Budget:</strong> ${escapedBudget}</p>` : ''}\n              </div>\n\n              <div style=\"background-color: #fef3f2; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n                <h3 style=\"margin-top: 0;\">What Happens Next?</h3>\n                <ol style=\"margin: 0; padding-left: 20px;\">\n                  <li style=\"margin-bottom: 10px;\">Our team will review your requirements in detail</li>\n                  <li style=\"margin-bottom: 10px;\">We'll prepare a custom proposal with pricing and timeline</li>\n                  <li style=\"margin-bottom: 10px;\">You'll receive a comprehensive proposal within 24 hours</li>\n                  <li style=\"margin-bottom: 10px;\">We'll schedule a call to discuss the proposal and answer any questions</li>\n                </ol>\n              </div>\n\n              <p>In the meantime, if you have any urgent questions, feel free to reply to this email or contact Louis directly at louis@kpidigital.com.au.</p>\n\n              <p style=\"margin-top: 30px;\">\n                Best regards,<br/>\n                <strong>The KPI Digital Team</strong>\n              </p>\n\n              <p style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e5e5; color: #666; font-size: 14px;\">\n                This is an automated confirmation email. Please do not reply to this email directly.\n              </p>\n            </div>\n          `,\n        }),\n      });\n\n      if (!confirmationResponse.ok) {\n        const errorData = await confirmationResponse.text();\n        console.error('Resend API error (confirmation):', errorData);\n        // Don't fail the request if confirmation email fails\n      }\n\n      const notificationData = await notificationResponse.json();\n\n      res.json({\n        success: true,\n        message: \"Quote request submitted successfully\",\n        emailId: notificationData.id\n      });\n    } catch (error) {\n      console.error('Error submitting quote:', error);\n      res.status(500).json({\n        error: \"Internal server error\"\n      });\n    }\n  });\n\n  // POST endpoint to notify about PDF report download\n  app.post(\"/api/notify-report\", emailLimiter, async (req, res) => {\n    try {\n      // Validate RESEND_API_KEY is configured\n      if (!process.env.RESEND_API_KEY) {\n        console.error('RESEND_API_KEY environment variable is not set');\n        return res.status(500).json({ \n          error: \"Email service is not configured. Please contact support.\" \n        });\n      }\n\n      const { \n        calculatorType, \n        userEmail, \n        score, \n        maxScore, \n        tierName,\n        categories \n      } = req.body;\n\n      // Security: Validate and sanitize all inputs\n      const sanitizedCalculatorType = validateCalculatorType(calculatorType);\n      const sanitizedUserEmail = sanitizeEmail(userEmail);\n      const sanitizedScore = sanitizeScore(score);\n      const sanitizedMaxScore = sanitizeScore(maxScore);\n      const sanitizedTierName = validateTierName(tierName);\n\n      // Validate required fields after sanitization\n      if (!sanitizedCalculatorType || !sanitizedUserEmail || sanitizedScore === null || \n          sanitizedMaxScore === null || !sanitizedTierName) {\n        return res.status(400).json({ \n          error: \"Invalid or missing required fields\" \n        });\n      }\n\n      // Security: Sanitize categories array if present\n      const sanitizedCategories = categories && Array.isArray(categories) \n        ? categories.slice(0, 20).map((cat: any) => ({\n            name: sanitizeText(cat?.name || '', 200),\n            score: sanitizeScore(cat?.score),\n            maxScore: sanitizeScore(cat?.maxScore)\n          })).filter(cat => cat.name && cat.score !== null && cat.maxScore !== null)\n        : [];\n\n      // Security: Escape HTML in all user inputs for email\n      const escapedCalculatorType = escapeHtml(sanitizedCalculatorType);\n      const escapedUserEmail = escapeHtml(sanitizedUserEmail);\n      const escapedTierName = escapeHtml(sanitizedTierName);\n\n      // Send notification email to louis@kpidigital.com.au\n      const response = await fetch('https://api.resend.com/emails', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.RESEND_API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          from: 'KPI Digital <onboarding@resend.dev>',\n          to: ['louis@kpidigital.com.au'],\n          subject: `New ${escapedCalculatorType} Assessment - ${escapedUserEmail}`,\n          html: `\n            <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n              <h2 style=\"color: #ea580c;\">New ${escapedCalculatorType} Assessment Completed</h2>\n              \n              <div style=\"background-color: #fef3f2; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n                <h3 style=\"margin-top: 0;\">Client Information</h3>\n                <p><strong>Email:</strong> ${escapedUserEmail}</p>\n                <p><strong>Assessment Type:</strong> ${escapedCalculatorType}</p>\n                <p><strong>Score:</strong> ${sanitizedScore}/${sanitizedMaxScore}</p>\n                <p><strong>Tier:</strong> ${escapedTierName}</p>\n              </div>\n\n              ${sanitizedCategories.length > 0 ? `\n                <h3>Category Breakdown</h3>\n                <ul>\n                  ${sanitizedCategories.map((cat: any) => \n                    `<li><strong>${escapeHtml(cat.name)}:</strong> ${cat.score}/${cat.maxScore} points</li>`\n                  ).join('')}\n                </ul>\n              ` : ''}\n\n              <p style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e5e5; color: #666; font-size: 14px;\">\n                This notification was sent automatically when a client downloaded their assessment report.\n              </p>\n            </div>\n          `,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Resend API error:', errorData);\n        return res.status(500).json({ \n          error: \"Failed to send notification email\" \n        });\n      }\n\n      const data = await response.json();\n      \n      res.json({ \n        success: true,\n        message: \"Notification sent successfully\",\n        emailId: data.id\n      });\n    } catch (error) {\n      console.error('Error sending notification:', error);\n      res.status(500).json({ \n        error: \"Internal server error\" \n      });\n    }\n  });\n\n  // Health check endpoint for deployment verification\n  app.get(\"/health\", (_req, res) => {\n    res.status(200).json({ \n      status: \"ok\",\n      environment: process.env.NODE_ENV || 'development',\n      timestamp: new Date().toISOString()\n    });\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":13718},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"shared/valueProps.ts":{"content":"export interface ValueProp {\n  id: string;\n  slug: string;\n  icon: any; // Lucide icon component\n  title: string;\n  shortDesc: string;\n  fullDesc: string;\n  benefits: string[];\n  // Extended content for education pages\n  detailedDescription: string;\n  whoItsFor: string[];\n  outcomes: string[];\n  processSteps: { title: string; description: string }[];\n  faqs: { question: string; answer: string }[];\n}\n\nimport { Users, Calculator, Phone, BarChart, Share2 } from \"lucide-react\";\n\nexport const valuePropsData: ValueProp[] = [\n  {\n    id: \"ideal-client-blueprint\",\n    slug: \"ideal-client-blueprint\",\n    icon: Users,\n    title: \"Ideal Client Blueprint\",\n    shortDesc: \"Target the right customers\",\n    fullDesc: \"Identify and attract your most profitable customers with our proven targeting system. Stop chasing every lead and focus on clients who value quality work and pay premium rates.\",\n    benefits: [\"Higher profit margins\", \"Better client relationships\", \"Reduced marketing waste\"],\n    detailedDescription: \"Our Ideal Client Blueprint is a comprehensive framework that helps trades businesses identify, target, and attract their most profitable customers. Through detailed analysis of your current client base and market research, we create a detailed profile of your ideal customer - including demographics, psychographics, pain points, and buying behaviors. This systematic approach eliminates the guesswork from your marketing efforts and ensures every dollar spent on customer acquisition delivers maximum return.\",\n    whoItsFor: [\n      \"Trades business owners struggling with low-quality leads\",\n      \"Companies competing solely on price instead of value\",\n      \"Businesses wanting to increase profit margins per job\",\n      \"Contractors looking to build long-term client relationships\"\n    ],\n    outcomes: [\n      \"25-40% increase in average project value\",\n      \"50% reduction in time wasted on unqualified leads\", \n      \"Higher customer lifetime value and repeat business\",\n      \"Improved cash flow from premium-paying clients\"\n    ],\n    processSteps: [\n      {\n        title: \"Current Client Analysis\",\n        description: \"We analyze your existing customer base to identify patterns among your most profitable clients\"\n      },\n      {\n        title: \"Market Research\",\n        description: \"Comprehensive research into your local market to identify untapped opportunities\"\n      },\n      {\n        title: \"Ideal Client Profile Creation\",\n        description: \"Develop detailed buyer personas with specific demographics, behaviors, and characteristics\"\n      },\n      {\n        title: \"Targeting Strategy\",\n        description: \"Create specific marketing and outreach strategies to attract your ideal clients\"\n      }\n    ],\n    faqs: [\n      {\n        question: \"How long does it take to see results?\",\n        answer: \"Most clients start seeing higher-quality leads within 2-4 weeks of implementing their Ideal Client Blueprint. Full results typically manifest within 60-90 days.\"\n      },\n      {\n        question: \"Will this work for my specific trade?\",\n        answer: \"Yes, our blueprint methodology works across all trades - electrical, plumbing, HVAC, carpentry, solar, and more. We customize the approach based on your specific industry dynamics.\"\n      },\n      {\n        question: \"What if I'm already getting plenty of leads?\",\n        answer: \"If you're getting leads but struggling with low margins or difficult clients, the blueprint will help you attract better quality prospects who value your work and pay premium rates.\"\n      }\n    ]\n  },\n  {\n    id: \"pricing-profit-audit\",\n    slug: \"pricing-profit-audit\", \n    icon: Calculator,\n    title: \"Pricing & Profit Audit\",\n    shortDesc: \"Price confidently and profitably\",\n    fullDesc: \"Discover your true costs and set prices that guarantee profit on every job. Our comprehensive audit reveals hidden expenses and optimizes your pricing strategy.\",\n    benefits: [\"Accurate job costing\", \"Guaranteed profitability\", \"Competitive positioning\"],\n    detailedDescription: \"Our Pricing & Profit Audit is a deep-dive analysis that uncovers the true cost of doing business and ensures every job you take is profitable. We examine your direct costs, overhead expenses, labor rates, and hidden costs that most contractors miss. The result is a bulletproof pricing strategy that guarantees profit while keeping you competitive in your market.\",\n    whoItsFor: [\n      \"Contractors unsure about their true costs per job\",\n      \"Businesses struggling with thin profit margins\",\n      \"Companies that often go over budget on projects\",\n      \"Trades professionals who want to price confidently\"\n    ],\n    outcomes: [\n      \"15-30% increase in profit margins\",\n      \"100% accuracy in job costing and bidding\",\n      \"Elimination of jobs that lose money\",\n      \"Confidence to quote higher prices based on real data\"\n    ],\n    processSteps: [\n      {\n        title: \"Cost Analysis\",\n        description: \"Comprehensive review of all direct and indirect costs including hidden expenses\"\n      },\n      {\n        title: \"Profit Margin Assessment\",\n        description: \"Analysis of current profit margins and identification of improvement opportunities\"\n      },\n      {\n        title: \"Pricing Strategy Development\",\n        description: \"Creation of a pricing framework that ensures profitability on every job\"\n      },\n      {\n        title: \"Implementation & Training\",\n        description: \"Training your team on the new pricing system and monitoring tools\"\n      }\n    ],\n    faqs: [\n      {\n        question: \"What costs do most contractors miss?\",\n        answer: \"Common missed costs include vehicle depreciation, insurance allocations, permit fees, waste disposal, callbacks, and the true cost of your time for estimating and project management.\"\n      },\n      {\n        question: \"Will higher prices cost me jobs?\",\n        answer: \"Initially, you may lose some price-sensitive prospects, but you'll attract quality clients who value professional service. The increased margins more than compensate for any volume reduction.\"\n      },\n      {\n        question: \"How often should I update my pricing?\",\n        answer: \"We recommend quarterly reviews with annual comprehensive audits. We provide tools to easily adjust pricing as costs change.\"\n      }\n    ]\n  },\n  {\n    id: \"sales-system-setup\",\n    slug: \"sales-system-setup\",\n    icon: Phone,\n    title: \"Sales System Setup\",\n    shortDesc: \"Convert more leads consistently\",\n    fullDesc: \"Transform your sales process with proven scripts, follow-up sequences, and conversion strategies that turn prospects into paying customers.\",\n    benefits: [\"Higher conversion rates\", \"Shorter sales cycles\", \"Predictable revenue\"],\n    detailedDescription: \"Our Sales System Setup provides you with a complete, systematic approach to converting leads into customers. We develop custom scripts, objection handling techniques, follow-up sequences, and closing strategies specific to your trade and market. This system ensures consistent results regardless of who's handling the sales conversation and dramatically improves your conversion rates.\",\n    whoItsFor: [\n      \"Contractors with inconsistent sales results\",\n      \"Businesses struggling to convert estimates to jobs\",\n      \"Companies with long sales cycles\",\n      \"Trades professionals who hate selling\"\n    ],\n    outcomes: [\n      \"40-60% improvement in conversion rates\",\n      \"25% reduction in sales cycle length\",\n      \"Predictable monthly revenue streams\",\n      \"Increased confidence in sales conversations\"\n    ],\n    processSteps: [\n      {\n        title: \"Sales Process Audit\",\n        description: \"Review current sales approach and identify gaps and opportunities\"\n      },\n      {\n        title: \"Custom Script Development\",\n        description: \"Create proven scripts tailored to your trade and customer types\"\n      },\n      {\n        title: \"Follow-up System Creation\",\n        description: \"Develop automated sequences to nurture leads through to conversion\"\n      },\n      {\n        title: \"Training & Implementation\",\n        description: \"Train your team on the new system and provide ongoing support\"\n      }\n    ],\n    faqs: [\n      {\n        question: \"Do scripts sound too salesy?\",\n        answer: \"Our scripts are conversation frameworks that sound natural and professional. They guide the conversation while allowing for your personality to shine through.\"\n      },\n      {\n        question: \"What if I'm not a natural salesperson?\",\n        answer: \"That's exactly why you need a system. Our proven scripts and processes work even if you're uncomfortable with selling. Many of our most successful clients started as reluctant salespeople.\"\n      },\n      {\n        question: \"How long before I see results?\",\n        answer: \"Most contractors see immediate improvement in their next sales conversation. Full system integration typically shows results within 2-3 weeks.\"\n      }\n    ]\n  },\n  {\n    id: \"control-dashboard\",\n    slug: \"control-dashboard\",\n    icon: BarChart,\n    title: \"Control Dashboard\",\n    shortDesc: \"Real-time business insights\",\n    fullDesc: \"Get instant visibility into your business performance with custom dashboards that track what matters most - profitability, efficiency, and growth metrics.\",\n    benefits: [\"Data-driven decisions\", \"Early problem detection\", \"Performance tracking\"],\n    detailedDescription: \"Our Control Dashboard gives you complete visibility into your business performance with real-time tracking of key metrics that matter most to trades businesses. Monitor job profitability, cash flow, team productivity, customer satisfaction, and growth indicators all in one place. Make informed decisions based on data, not guesswork, and spot problems before they become costly mistakes.\",\n    whoItsFor: [\n      \"Business owners flying blind without key metrics\",\n      \"Contractors wanting to make data-driven decisions\",\n      \"Companies needing better financial visibility\",\n      \"Businesses ready to scale systematically\"\n    ],\n    outcomes: [\n      \"Real-time visibility into business performance\",\n      \"15-25% improvement in operational efficiency\",\n      \"Faster identification and resolution of problems\",\n      \"Confident decision-making based on accurate data\"\n    ],\n    processSteps: [\n      {\n        title: \"Metrics Identification\",\n        description: \"Identify the key performance indicators most critical to your business success\"\n      },\n      {\n        title: \"Data Integration\",\n        description: \"Connect your existing systems and processes to create a unified data view\"\n      },\n      {\n        title: \"Dashboard Creation\",\n        description: \"Build custom dashboards that display your metrics in an easy-to-understand format\"\n      },\n      {\n        title: \"Training & Optimization\",\n        description: \"Train your team to use the dashboard and continuously optimize based on insights\"\n      }\n    ],\n    faqs: [\n      {\n        question: \"What metrics should I track?\",\n        answer: \"Key metrics include job profitability, cash flow, lead conversion rates, customer acquisition costs, team productivity, and customer satisfaction scores. We customize based on your specific business.\"\n      },\n      {\n        question: \"Is this too complex for a small business?\",\n        answer: \"Not at all. We design dashboards to be simple and intuitive. You'll see the most important information at a glance without information overload.\"\n      },\n      {\n        question: \"How current is the data?\",\n        answer: \"Most data updates in real-time or daily, depending on the metric. Financial data typically updates daily, while operational metrics can be real-time.\"\n      }\n    ]\n  },\n  {\n    id: \"referral-maximizer-toolkit\",\n    slug: \"referral-maximizer-toolkit\",\n    icon: Share2,\n    title: \"Referral Maximizer Toolkit\",\n    shortDesc: \"Turn clients into advocates\",\n    fullDesc: \"Systematically generate referrals with our proven toolkit that makes it easy for satisfied customers to recommend your services to others.\",\n    benefits: [\"Consistent referral flow\", \"Lower acquisition costs\", \"Trusted recommendations\"],\n    detailedDescription: \"Our Referral Maximizer Toolkit transforms your satisfied customers into active advocates for your business. Through systematic follow-up processes, incentive programs, and easy referral mechanisms, we make it simple for happy clients to recommend your services. This creates a consistent stream of high-quality, pre-qualified leads that convert at much higher rates than cold prospects.\",\n    whoItsFor: [\n      \"Businesses relying solely on paid advertising\",\n      \"Contractors with satisfied clients but few referrals\",\n      \"Companies wanting to reduce customer acquisition costs\",\n      \"Businesses looking for sustainable growth strategies\"\n    ],\n    outcomes: [\n      \"3-5 quality referrals per month minimum\",\n      \"60-80% reduction in customer acquisition costs\",\n      \"Higher conversion rates from referred prospects\", \n      \"Sustainable growth through word-of-mouth marketing\"\n    ],\n    processSteps: [\n      {\n        title: \"Referral System Design\",\n        description: \"Create a systematic approach to requesting and managing referrals\"\n      },\n      {\n        title: \"Incentive Program Setup\",\n        description: \"Develop compelling incentives that motivate customers to make referrals\"\n      },\n      {\n        title: \"Follow-up Automation\",\n        description: \"Implement automated sequences to stay top-of-mind with past clients\"\n      },\n      {\n        title: \"Tracking & Optimization\",\n        description: \"Monitor referral performance and continuously improve the system\"\n      }\n    ],\n    faqs: [\n      {\n        question: \"What kind of incentives work best?\",\n        answer: \"The most effective incentives vary by trade and customer base. Options include cash rewards, service discounts, charity donations, or reciprocal referrals. We help you choose what resonates with your clients.\"\n      },\n      {\n        question: \"When should I ask for referrals?\",\n        answer: \"The best time is when customer satisfaction is highest - typically right after successful project completion. We create multiple touchpoints to maximize opportunities.\"\n      },\n      {\n        question: \"What if customers don't want to give referrals?\",\n        answer: \"Most customers are happy to refer when asked properly and given easy ways to do so. Our system makes the process comfortable and beneficial for everyone involved.\"\n      }\n    ]\n  }\n];\n\nexport const getValuePropBySlug = (slug: string): ValueProp | undefined => {\n  return valuePropsData.find(prop => prop.slug === slug);\n};\n\nexport const getAllValueProps = (): ValueProp[] => {\n  return valuePropsData;\n};","size_bytes":14852},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/Home\";\nimport EducationPage from \"@/pages/EducationPage\";\nimport DigitalFoundations from \"@/pages/DigitalFoundations\";\nimport ClarityCalculator from \"@/pages/ClarityCalculator\";\nimport SystemsCalculator from \"@/pages/SystemsCalculator\";\nimport GrowthCalculator from \"@/pages/GrowthCalculator\";\nimport PrivacyPolicy from \"@/pages/PrivacyPolicy\";\nimport TermsOfService from \"@/pages/TermsOfService\";\nimport CookiePolicy from \"@/pages/CookiePolicy\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/education/:slug\" component={EducationPage} />\n      <Route path=\"/digital-foundations\" component={DigitalFoundations} />\n      <Route path=\"/clarity-calculator\" component={ClarityCalculator} />\n      <Route path=\"/systems-calculator\" component={SystemsCalculator} />\n      <Route path=\"/growth-calculator\" component={GrowthCalculator} />\n      <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n      <Route path=\"/terms-of-service\" component={TermsOfService} />\n      <Route path=\"/cookie-policy\" component={CookiePolicy} />\n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1723},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n\n  --foreground: 0 0% 5%;\n\n  --border: 0 0% 90%;\n\n  --card: 0 0% 98%;\n\n  --card-foreground: 0 0% 5%;\n\n  --card-border: 0 0% 85%;\n\n  --sidebar: 0 0% 96%;\n\n  --sidebar-foreground: 0 0% 5%;\n\n  --sidebar-border: 0 0% 88%;\n\n  --sidebar-primary: 0 0% 10%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 0 0% 92%;\n\n  --sidebar-accent-foreground: 0 0% 15%;\n\n  --sidebar-ring: 0 0% 10%;\n\n  --popover: 0 0% 98%;\n\n  --popover-foreground: 0 0% 5%;\n\n  --popover-border: 0 0% 85%;\n\n  --primary: 0 0% 10%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 0 0% 92%;\n\n  --secondary-foreground: 0 0% 10%;\n\n  --muted: 0 0% 94%;\n\n  --muted-foreground: 0 0% 40%;\n\n  --accent: 0 0% 88%;\n\n  --accent-foreground: 0 0% 15%;\n\n  --destructive: 0 85% 60%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 15% 70%;\n  --ring: 218 95% 54%;\n  --chart-1: 218 95% 54%;\n  --chart-2: 32 95% 55%;\n  --chart-3: 271 91% 65%;\n  --chart-4: 349 89% 60%;\n  --chart-5: 142 76% 36%;\n\n  --font-sans: Inter, -apple-system, BlinkMacSystemFont, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 2px 0px 0px hsl(220 8% 12% / 0.02);\n  --shadow-xs: 0px 2px 0px 0px hsl(220 8% 12% / 0.02);\n  --shadow-sm: 0px 2px 0px 0px hsl(220 8% 12% / 0.02), 0px 1px 2px -1px hsl(220 8% 12% / 0.05);\n  --shadow: 0px 2px 0px 0px hsl(220 8% 12% / 0.02), 0px 1px 2px -1px hsl(220 8% 12% / 0.05);\n  --shadow-md: 0px 2px 0px 0px hsl(220 8% 12% / 0.02), 0px 2px 4px -1px hsl(220 8% 12% / 0.08);\n  --shadow-lg: 0px 2px 0px 0px hsl(220 8% 12% / 0.02), 0px 4px 6px -1px hsl(220 8% 12% / 0.10);\n  --shadow-xl: 0px 2px 0px 0px hsl(220 8% 12% / 0.02), 0px 8px 10px -1px hsl(220 8% 12% / 0.12);\n  --shadow-2xl: 0px 2px 0px 0px hsl(220 8% 12% / 0.02);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 222 4% 8%;\n\n  --foreground: 220 3% 92%;\n\n  --border: 222 4% 18%;\n\n  --card: 222 4% 12%;\n\n  --card-foreground: 220 3% 92%;\n\n  --card-border: 222 4% 22%;\n\n  --sidebar: 222 4% 10%;\n\n  --sidebar-foreground: 220 3% 92%;\n\n  --sidebar-border: 222 4% 20%;\n\n  --sidebar-primary: 218 95% 54%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 222 4% 15%;\n\n  --sidebar-accent-foreground: 220 3% 85%;\n\n  --sidebar-ring: 218 95% 54%;\n\n  --popover: 222 4% 14%;\n\n  --popover-foreground: 220 3% 92%;\n\n  --popover-border: 222 4% 24%;\n\n  --primary: 218 95% 54%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 222 4% 18%;\n\n  --secondary-foreground: 220 3% 92%;\n\n  --muted: 218 8% 16%;\n\n  --muted-foreground: 220 15% 65%;\n\n  --accent: 218 8% 14%;\n\n  --accent-foreground: 220 3% 85%;\n\n  --destructive: 0 85% 60%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */\n  --input: 220 15% 35%;\n  --ring: 218 95% 54%;\n  --chart-1: 218 95% 65%;\n  --chart-2: 32 95% 70%;\n  --chart-3: 271 91% 75%;\n  --chart-4: 349 89% 70%;\n  --chart-5: 142 76% 55%;\n\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.15);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.15);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.15), 0px 1px 2px -1px hsl(0 0% 0% / 0.20);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.15), 0px 1px 2px -1px hsl(0 0% 0% / 0.20);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.15), 0px 2px 4px -1px hsl(0 0% 0% / 0.25);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.15), 0px 4px 6px -1px hsl(0 0% 0% / 0.30);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.15), 0px 8px 10px -1px hsl(0 0% 0% / 0.35);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.15);\n\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}\n\n/* Custom animations for KPI Digital */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInScale {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s ease-out;\n}\n\n.animate-fade-in-scale {\n  animation: fadeInScale 0.4s ease-out;\n}\n\n.animate-slide-in-left {\n  animation: slideInLeft 0.6s ease-out;\n}\n\n.animate-pulse-slow {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n/* Smooth scrolling behavior */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Custom focus styles for accessibility */\n@layer utilities {\n  .focus-ring {\n    @apply focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2;\n  }\n}\n\n/* Reduced motion preferences */\n@media (prefers-reduced-motion: reduce) {\n  .animate-fade-in-up,\n  .animate-fade-in-scale,\n  .animate-slide-in-left,\n  .animate-pulse-slow {\n    animation: none;\n  }\n  \n  html {\n    scroll-behavior: auto;\n  }\n}\n\n/* 3D Card Flip Utilities */\n.perspective-1000 {\n  perspective: 1000px;\n}\n\n.backface-hidden {\n  backface-visibility: hidden;\n}\n\n.transform-style-preserve-3d {\n  transform-style: preserve-3d;\n}\n\n.rotate-y-180 {\n  transform: rotateY(180deg);\n}","size_bytes":11487},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/Footer.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  MapPin, \n  Mail, \n  Clock,\n  Facebook,\n  Twitter,\n  Linkedin,\n  Instagram,\n  ArrowRight\n} from \"lucide-react\";\n\ninterface FooterProps {\n  onCTAClick?: () => void;\n}\n\nconst quickLinks = [\n  { label: \"Services\", href: \"#services\" },\n  { label: \"Process\", href: \"#process\" },\n  { label: \"Results\", href: \"#results\" },\n  { label: \"About\", href: \"#about\" },\n  { label: \"Contact\", href: \"#contact\" },\n];\n\nconst services = [\n  \"Digital Foundations\",\n  \"Pricing Audit\",\n  \"Sales System Setup\",\n  \"Control Dashboard\",\n  \"Referral Toolkit\",\n];\n\nconst socialLinks = [\n  { icon: Facebook, href: \"#\", label: \"Facebook\" },\n  { icon: Twitter, href: \"#\", label: \"Twitter\" },\n  { icon: Linkedin, href: \"#\", label: \"LinkedIn\" },\n  { icon: Instagram, href: \"#\", label: \"Instagram\" },\n];\n\n\nexport default function Footer({ onCTAClick }: FooterProps) {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 30, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  const scrollToSection = (href: string) => {\n    const element = document.querySelector(href);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const handleCTAClick = () => {\n    console.log(\"Footer CTA clicked\");\n    onCTAClick?.();\n  };\n\n  return (\n    <footer className=\"bg-primary text-primary-foreground\" ref={ref}>\n      {/* Main CTA Section */}\n      <motion.section\n        className=\"py-16 border-b border-primary-foreground/10\"\n        initial={{ opacity: 0, y: 50 }}\n        animate={inView ? { opacity: 1, y: 0 } : {}}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n            Take Control of Your Business. Plan for Growth.\n          </h2>\n          <p className=\"text-xl text-primary-foreground/80 mb-8 max-w-2xl mx-auto\">\n            Stop reacting to chaos. Start building the profitable, systematic business you deserve.\n          </p>\n          <Button\n            size=\"lg\"\n            variant=\"outline\"\n            className=\"px-8 py-6 text-lg font-semibold bg-primary-foreground text-primary hover:bg-primary-foreground/90 border-primary-foreground hover-elevate active-elevate-2 group\"\n            onClick={handleCTAClick}\n            data-testid=\"button-footer-cta\"\n          >\n            Get Started Today\n            <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n          </Button>\n        </div>\n      </motion.section>\n\n      {/* Main Footer Content */}\n      <motion.div\n        className=\"py-16\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate={inView ? \"visible\" : \"hidden\"}\n      >\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {/* Company Info */}\n            <motion.div variants={itemVariants}>\n              <div className=\"mb-6\">\n                <img \n                  src={new URL(\"@assets/kpi_digital_logo_ready_1759274509680.png\", import.meta.url).href}\n                  alt=\"KPI Digital\"\n                  className=\"h-24 sm:h-28 md:h-32 w-auto mb-4 invert\"\n                />\n                <p className=\"text-primary-foreground/80 mb-6\">\n                  Helping trades businesses move from reactive chaos to predictable, profitable growth.\n                </p>\n              </div>\n\n              {/* Contact Info */}\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-3 text-sm\">\n                  <MapPin className=\"h-4 w-4\" />\n                  <span>123 Business Ave, Suite 100<br />Digital City, DC 12345</span>\n                </div>\n                <div className=\"flex items-center gap-3 text-sm\">\n                  <Mail className=\"h-4 w-4\" />\n                  <span>louis@kpidigital.com.au</span>\n                </div>\n                <div className=\"flex items-center gap-3 text-sm\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span>Mon-Fri: 8AM-6PM PST</span>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Quick Links */}\n            <motion.div variants={itemVariants}>\n              <h3 className=\"text-lg font-bold mb-6\">Quick Links</h3>\n              <ul className=\"space-y-3\">\n                {quickLinks.map((link, index) => (\n                  <li key={index}>\n                    <button\n                      className=\"text-primary-foreground/80 hover:text-primary-foreground transition-colors duration-300 text-sm hover-elevate\"\n                      onClick={() => scrollToSection(link.href)}\n                      data-testid={`footer-link-${link.label.toLowerCase()}`}\n                    >\n                      {link.label}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </motion.div>\n\n            {/* Services */}\n            <motion.div variants={itemVariants}>\n              <h3 className=\"text-lg font-bold mb-6\">Services</h3>\n              <ul className=\"space-y-3\">\n                {services.map((service, index) => (\n                  <li key={index} className=\"text-primary-foreground/80 text-sm\">\n                    {service}\n                  </li>\n                ))}\n              </ul>\n            </motion.div>\n\n            {/* Trust & Social */}\n            <motion.div variants={itemVariants}>\n              <h3 className=\"text-lg font-bold mb-6\">Connect With Us</h3>\n              \n              {/* Social Links */}\n              <div className=\"flex gap-3 mb-8\">\n                {socialLinks.map((social, index) => (\n                  <motion.button\n                    key={index}\n                    className=\"w-10 h-10 bg-primary-foreground/10 rounded-full flex items-center justify-center hover:bg-primary-foreground/20 transition-colors duration-300 hover-elevate\"\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => console.log(`${social.label} clicked`)}\n                    data-testid={`social-link-${social.label.toLowerCase()}`}\n                  >\n                    <social.icon className=\"h-5 w-5\" />\n                  </motion.button>\n                ))}\n              </div>\n\n            </motion.div>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Bottom Bar */}\n      <motion.div\n        className=\"border-t border-primary-foreground/10 py-8\"\n        initial={{ opacity: 0 }}\n        animate={inView ? { opacity: 1 } : {}}\n        transition={{ duration: 0.6, delay: 0.4 }}\n      >\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4 text-sm text-primary-foreground/60\">\n            <div>\n              © 2025 KPI Digital. All rights reserved.\n            </div>\n            <div className=\"flex gap-6\">\n              <button \n                onClick={() => window.location.href = '/privacy-policy'}\n                className=\"hover:text-primary-foreground transition-colors duration-300\"\n                data-testid=\"footer-link-privacy\"\n              >\n                Privacy Policy\n              </button>\n              <button \n                onClick={() => window.location.href = '/terms-of-service'}\n                className=\"hover:text-primary-foreground transition-colors duration-300\"\n                data-testid=\"footer-link-terms\"\n              >\n                Terms of Service\n              </button>\n              <button \n                onClick={() => window.location.href = '/cookie-policy'}\n                className=\"hover:text-primary-foreground transition-colors duration-300\"\n                data-testid=\"footer-link-cookie\"\n              >\n                Cookie Policy\n              </button>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    </footer>\n  );\n}","size_bytes":8483},"client/src/components/HeroSection.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface HeroSectionProps {\n  onCTAClick?: () => void;\n}\n\nexport default function HeroSection({ onCTAClick }: HeroSectionProps) {\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2,\n        delayChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 30, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  const handleCTAClick = () => {\n    console.log(\"Book Strategy Call clicked\");\n    onCTAClick?.();\n  };\n\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br from-background via-background to-muted/20 overflow-hidden\">\n      {/* Animated background elements */}\n      <motion.div\n        className=\"absolute inset-0 opacity-5\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 0.05 }}\n        transition={{ duration: 2 }}\n      >\n        <div className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-primary rounded-full blur-3xl animate-pulse-slow\" />\n        <div className=\"absolute bottom-1/4 right-1/4 w-64 h-64 bg-primary rounded-full blur-2xl animate-pulse-slow\" style={{ animationDelay: '1s' }} />\n      </motion.div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        <motion.div\n          className=\"max-w-5xl mx-auto text-center\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {/* Logo/Brand */}\n          <motion.div\n            variants={itemVariants}\n            className=\"mb-8\"\n          >\n            <img \n              src={new URL(\"@assets/kpi_digital_logo_ready_1759274509680.png\", import.meta.url).href}\n              alt=\"KPI Digital\"\n              className=\"h-32 sm:h-40 md:h-56 lg:h-64 w-auto mx-auto\"\n            />\n          </motion.div>\n\n          {/* Main headline with staggered animation */}\n          <motion.h1\n            variants={itemVariants}\n            className=\"text-5xl md:text-7xl lg:text-8xl font-bold text-foreground mb-6 tracking-tight\"\n          >\n            <motion.span\n              className=\"block\"\n              initial={{ x: -50, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              transition={{ duration: 0.8, delay: 0.3 }}\n            >\n              Clarity.\n            </motion.span>\n            <motion.span\n              className=\"block\"\n              initial={{ x: 50, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              transition={{ duration: 0.8, delay: 0.5 }}\n            >\n              Systems.\n            </motion.span>\n            <motion.span\n              className=\"block text-primary\"\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              transition={{ duration: 0.8, delay: 0.7 }}\n            >\n              Growth.\n            </motion.span>\n          </motion.h1>\n\n          {/* Subtitle */}\n          <motion.p\n            variants={itemVariants}\n            className=\"text-xl md:text-2xl text-muted-foreground mb-12 max-w-3xl mx-auto leading-relaxed\"\n          >\n            Helping trades businesses move from reactive chaos to predictable, profitable growth.\n          </motion.p>\n\n          {/* CTA Buttons */}\n          <motion.div\n            variants={itemVariants}\n            className=\"flex flex-col sm:flex-row items-center justify-center gap-4 mb-16\"\n          >\n            <Button\n              size=\"lg\"\n              className=\"px-8 py-6 text-lg font-semibold hover-elevate active-elevate-2 group transition-all duration-300\"\n              onClick={handleCTAClick}\n              data-testid=\"button-book-strategy-call\"\n            >\n              Book a Strategy Call\n              <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n            </Button>\n\n          </motion.div>\n\n          {/* Trust indicators */}\n          <motion.div\n            variants={itemVariants}\n            className=\"text-sm text-muted-foreground\"\n          >\n            <p className=\"mb-4\">Trusted by trades businesses Australia-wide</p>\n            <div className=\"flex justify-center items-center gap-8 opacity-60\">\n              <div className=\"text-xs font-medium\">Money-Back Guarantee</div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n\n      {/* Scroll indicator */}\n      <motion.div\n        className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 1.5, duration: 0.6 }}\n      >\n        <motion.div\n          className=\"w-6 h-10 border-2 border-muted-foreground rounded-full flex justify-center\"\n          whileHover={{ scale: 1.1 }}\n        >\n          <motion.div\n            className=\"w-1 h-3 bg-muted-foreground rounded-full mt-2\"\n            animate={{ y: [0, 8, 0] }}\n            transition={{ duration: 2, repeat: Infinity }}\n          />\n        </motion.div>\n      </motion.div>\n    </section>\n  );\n}","size_bytes":5333},"client/src/components/Navigation.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\ninterface NavigationProps {\n  onCTAClick?: () => void;\n}\n\nexport default function Navigation({ onCTAClick }: NavigationProps) {\n  const [, setLocation] = useLocation();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navItems = [\n    { label: \"Services\", href: \"/digital-foundations\", isPage: true },\n    { label: \"Process\", href: \"#process\", isPage: false },\n    { label: \"Results\", href: \"#results\", isPage: false },\n    { label: \"About\", href: \"#about\", isPage: false },\n  ];\n\n  const handleNavClick = (item: typeof navItems[0]) => {\n    if (item.isPage) {\n      setLocation(item.href);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else {\n      // Check if we're on the home page\n      const currentPath = window.location.pathname;\n      if (currentPath !== '/') {\n        // Navigate to home first, then scroll to section\n        setLocation('/');\n        setTimeout(() => {\n          const element = document.querySelector(item.href);\n          if (element) {\n            element.scrollIntoView({ behavior: 'smooth' });\n          }\n        }, 100);\n      } else {\n        // Already on home, just scroll to section\n        const element = document.querySelector(item.href);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth' });\n        }\n      }\n    }\n    setIsMobileMenuOpen(false);\n  };\n\n  const handleCTAClick = () => {\n    console.log(\"Navigation CTA clicked\");\n    onCTAClick?.();\n  };\n\n  return (\n    <>\n      <motion.nav\n        className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n          isScrolled \n            ? 'bg-background/95 backdrop-blur-md border-b border-border shadow-sm' \n            : 'bg-transparent'\n        }`}\n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-between h-28 md:h-36\">\n            {/* Logo */}\n            <motion.button\n              className=\"flex items-center cursor-pointer\"\n              whileHover={{ scale: 1.05 }}\n              transition={{ duration: 0.2 }}\n              onClick={() => {\n                setLocation('/');\n                window.scrollTo({ top: 0, behavior: 'smooth' });\n              }}\n              data-testid=\"button-logo-home\"\n            >\n              <img \n                src={new URL(\"@assets/kpi_digital_logo_circle_1759274509679.png\", import.meta.url).href}\n                alt=\"KPI Digital\"\n                className=\"h-24 md:h-32 w-auto\"\n              />\n            </motion.button>\n\n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center space-x-8\">\n              {navItems.map((item, index) => (\n                <motion.button\n                  key={item.label}\n                  className=\"text-foreground hover:text-primary transition-colors duration-300 font-medium focus-ring\"\n                  onClick={() => handleNavClick(item)}\n                  whileHover={{ y: -2 }}\n                  transition={{ duration: 0.2 }}\n                  data-testid={`nav-link-${item.label.toLowerCase()}`}\n                >\n                  {item.label}\n                </motion.button>\n              ))}\n            </div>\n\n            {/* Desktop CTA */}\n            <div className=\"hidden md:flex items-center space-x-4\">\n              \n              <Button\n                size=\"sm\"\n                className=\"hover-elevate active-elevate-2\"\n                onClick={handleCTAClick}\n                data-testid=\"button-nav-cta\"\n              >\n                Get Started\n              </Button>\n            </div>\n\n            {/* Mobile Menu Button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"md:hidden hover-elevate\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              data-testid=\"button-mobile-menu\"\n            >\n              {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </Button>\n          </div>\n        </div>\n      </motion.nav>\n\n      {/* Mobile Menu Overlay */}\n      <motion.div\n        className={`fixed inset-0 z-40 md:hidden ${\n          isMobileMenuOpen ? 'pointer-events-auto' : 'pointer-events-none'\n        }`}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: isMobileMenuOpen ? 1 : 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        {/* Backdrop */}\n        <div \n          className=\"absolute inset-0 bg-background/80 backdrop-blur-sm\"\n          onClick={() => setIsMobileMenuOpen(false)}\n        />\n        \n        {/* Menu Content */}\n        <motion.div\n          className=\"absolute top-28 left-0 right-0 bg-background border-b border-border shadow-lg\"\n          initial={{ y: -20, opacity: 0 }}\n          animate={{ \n            y: isMobileMenuOpen ? 0 : -20, \n            opacity: isMobileMenuOpen ? 1 : 0 \n          }}\n          transition={{ duration: 0.3 }}\n        >\n          <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"flex flex-col space-y-6\">\n              {navItems.map((item, index) => (\n                <motion.button\n                  key={item.label}\n                  className=\"text-left text-lg text-foreground hover:text-primary transition-colors duration-300 font-medium focus-ring\"\n                  onClick={() => handleNavClick(item)}\n                  initial={{ x: -20, opacity: 0 }}\n                  animate={{ \n                    x: isMobileMenuOpen ? 0 : -20,\n                    opacity: isMobileMenuOpen ? 1 : 0\n                  }}\n                  transition={{ duration: 0.3, delay: index * 0.1 }}\n                  data-testid={`mobile-nav-link-${item.label.toLowerCase()}`}\n                >\n                  {item.label}\n                </motion.button>\n              ))}\n              \n              <div className=\"flex flex-col space-y-4 pt-4 border-t border-border\">\n                \n                <Button\n                  className=\"w-full hover-elevate active-elevate-2\"\n                  onClick={() => {\n                    handleCTAClick();\n                    setIsMobileMenuOpen(false);\n                  }}\n                  data-testid=\"button-mobile-cta\"\n                >\n                  Get Started\n                </Button>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    </>\n  );\n}","size_bytes":6997},"client/src/components/PainPointsSection.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { AlertTriangle, Clock, DollarSign, BarChart3, Target } from \"lucide-react\";\nimport { Card } from \"@/components/ui/card\";\n\nconst painPoints = [\n  {\n    icon: AlertTriangle,\n    title: \"No Systems or Automation\",\n    description: \"Everything is manual, reactive, and overwhelming. You're constantly putting out fires instead of building your business.\",\n  },\n  {\n    icon: Clock,\n    title: \"Reacting Instead of Planning\",\n    description: \"Your days are chaotic with no clear direction. You're always behind and struggling to keep up with demand.\",\n  },\n  {\n    icon: DollarSign,\n    title: \"Undercharging for Jobs\",\n    description: \"You're not sure what to charge and often underestimate costs, leaving money on the table with every project.\",\n  },\n  {\n    icon: BarChart3,\n    title: \"No Clarity on Numbers\",\n    description: \"You don't know which jobs are profitable, where your money goes, or how to make data-driven decisions.\",\n  },\n  {\n    icon: Target,\n    title: \"No Sales Process\",\n    description: \"Lead generation is inconsistent and you don't have a systematic way to convert prospects into paying customers.\",\n  },\n];\n\nexport default function PainPointsSection() {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.15,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 50, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  return (\n    <section className=\"py-24 bg-muted/30\" ref={ref}>\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Sound Familiar?\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            You got into trades to build something meaningful, but these challenges keep holding you back from the growth you deserve.\n          </p>\n        </motion.div>\n\n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={inView ? \"visible\" : \"hidden\"}\n        >\n          {painPoints.map((point, index) => (\n            <motion.div\n              key={index}\n              variants={itemVariants}\n              className=\"group\"\n            >\n              <Card className=\"p-8 h-full hover-elevate transition-all duration-300 border-2 hover:border-destructive/20 bg-card\">\n                <div className=\"flex flex-col items-center text-center\">\n                  <motion.div\n                    className=\"mb-6 p-4 bg-destructive/10 rounded-full\"\n                    whileHover={{ scale: 1.1, rotate: 5 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <point.icon className=\"h-8 w-8 text-destructive\" />\n                  </motion.div>\n                  \n                  <h3 className=\"text-xl font-bold text-foreground mb-4 group-hover:text-destructive transition-colors duration-300\">\n                    {point.title}\n                  </h3>\n                  \n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {point.description}\n                  </p>\n                </div>\n              </Card>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div\n          className=\"text-center mt-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.8 }}\n        >\n          <div className=\"inline-block bg-destructive/10 text-destructive px-6 py-3 rounded-full text-lg font-semibold\">\n            It doesn't have to be this way.\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":4337},"client/src/components/ProcessSection.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Search, Bolt, TrendingUp, CheckCircle, ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst processSteps = [\n  {\n    step: 1,\n    icon: Search,\n    title: \"Clarity\",\n    subtitle: \"Understand Your Business\",\n    description: \"We bring complete clarity to your operations, finances, and growth opportunities. Know exactly where you stand and where you're headed.\",\n    details: [\n      \"Comprehensive business analysis\",\n      \"Financial clarity and insights\",\n      \"Opportunity identification\",\n      \"Strategic roadmap development\"\n    ],\n  },\n  {\n    step: 2,\n    icon: Bolt,\n    title: \"Systems\",\n    subtitle: \"Build Your Foundation\",\n    description: \"We implement proven systems that streamline your operations, automate workflows, and create the foundation for sustainable growth.\",\n    details: [\n      \"Workflow automation\",\n      \"Process standardization\",\n      \"Team training and adoption\",\n      \"Performance tracking setup\"\n    ],\n  },\n  {\n    step: 3,\n    icon: TrendingUp,\n    title: \"Growth\",\n    subtitle: \"Scale With Confidence\",\n    description: \"With clarity and systems in place, you'll have the capacity and confidence to pursue larger projects and scale your business sustainably.\",\n    details: [\n      \"Revenue optimization\",\n      \"Capacity expansion\",\n      \"Market positioning\",\n      \"Continuous improvement\"\n    ],\n  },\n];\n\ninterface ProcessStepProps {\n  step: typeof processSteps[0];\n  index: number;\n  isActive: boolean;\n  inView: boolean;\n}\n\nfunction ProcessStep({ step, index, isActive, inView }: ProcessStepProps) {\n  const isLast = index === processSteps.length - 1;\n\n  return (\n    <div className=\"relative\">\n      {/* Connection line */}\n      {!isLast && (\n        <motion.div\n          className=\"absolute top-16 left-1/2 transform -translate-x-1/2 w-1 h-32 bg-gradient-to-b from-primary to-muted -z-10\"\n          initial={{ scaleY: 0 }}\n          animate={inView ? { scaleY: 1 } : {}}\n          transition={{ duration: 0.8, delay: 0.5 + index * 0.2 }}\n          style={{ transformOrigin: \"top\" }}\n        />\n      )}\n\n      <motion.div\n        className=\"relative z-10\"\n        initial={{ opacity: 0, y: 50 }}\n        animate={inView ? { opacity: 1, y: 0 } : {}}\n        transition={{ duration: 0.6, delay: index * 0.2 }}\n      >\n        {/* Step number and icon */}\n        <motion.div\n          className=\"flex flex-col items-center mb-8\"\n          whileHover={{ scale: 1.05 }}\n          transition={{ duration: 0.3 }}\n        >\n          <motion.div\n            className={`relative w-16 h-16 rounded-full flex items-center justify-center mb-4 ${\n              isActive ? 'bg-primary text-primary-foreground' : 'bg-muted text-muted-foreground'\n            }`}\n            animate={isActive ? { scale: [1, 1.1, 1] } : {}}\n            transition={{ duration: 0.6 }}\n          >\n            <step.icon className=\"h-8 w-8\" />\n            <motion.div\n              className=\"absolute -top-2 -right-2 w-6 h-6 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold\"\n              initial={{ scale: 0 }}\n              animate={inView ? { scale: 1 } : {}}\n              transition={{ duration: 0.4, delay: 0.3 + index * 0.2 }}\n            >\n              {step.step}\n            </motion.div>\n          </motion.div>\n        </motion.div>\n\n        {/* Card content */}\n        <Card className={`p-8 hover-elevate transition-all duration-300 ${\n          isActive ? 'border-primary border-2 bg-primary/5' : 'bg-card'\n        }`}>\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-2xl font-bold text-foreground mb-2\">\n              {step.title}\n            </h3>\n            <p className=\"text-lg text-primary font-semibold mb-3\">\n              {step.subtitle}\n            </p>\n            <p className=\"text-muted-foreground leading-relaxed\">\n              {step.description}\n            </p>\n          </div>\n\n          {/* Details list */}\n          <div className=\"mb-6\">\n            <h4 className=\"font-semibold text-foreground mb-4 text-center\">What's Included:</h4>\n            <ul className=\"space-y-3\">\n              {step.details.map((detail, idx) => (\n                <motion.li\n                  key={idx}\n                  className=\"flex items-center gap-3 text-sm text-muted-foreground\"\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={inView ? { opacity: 1, x: 0 } : {}}\n                  transition={{ duration: 0.4, delay: 0.6 + index * 0.2 + idx * 0.1 }}\n                >\n                  <CheckCircle className=\"h-4 w-4 text-primary flex-shrink-0\" />\n                  {detail}\n                </motion.li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Clarity button - only show for Clarity step */}\n          {step.step === 1 && (\n            <motion.div\n              className=\"mt-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={inView ? { opacity: 1, y: 0 } : {}}\n              transition={{ duration: 0.4, delay: 0.8 + index * 0.2 }}\n            >\n              <Link href=\"/clarity-calculator\" asChild>\n                <Button \n                  className=\"w-full hover-elevate active-elevate-2 group\"\n                  variant=\"default\"\n                  data-testid=\"button-check-clarity\"\n                >\n                  Check Your Clarity\n                  <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300\" />\n                </Button>\n              </Link>\n            </motion.div>\n          )}\n\n          {/* Systems button - only show for Systems step */}\n          {step.step === 2 && (\n            <motion.div\n              className=\"mt-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={inView ? { opacity: 1, y: 0 } : {}}\n              transition={{ duration: 0.4, delay: 0.8 + index * 0.2 }}\n            >\n              <Link href=\"/systems-calculator\" asChild>\n                <Button \n                  className=\"w-full hover-elevate active-elevate-2 group\"\n                  variant=\"default\"\n                  data-testid=\"button-check-systems\"\n                >\n                  Check Your Systems\n                  <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300\" />\n                </Button>\n              </Link>\n            </motion.div>\n          )}\n\n          {/* Growth button - only show for Growth step */}\n          {step.step === 3 && (\n            <motion.div\n              className=\"mt-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={inView ? { opacity: 1, y: 0 } : {}}\n              transition={{ duration: 0.4, delay: 0.8 + index * 0.2 }}\n            >\n              <Link href=\"/growth-calculator\" asChild>\n                <Button \n                  className=\"w-full hover-elevate active-elevate-2 group\"\n                  variant=\"default\"\n                  data-testid=\"button-check-growth\"\n                >\n                  Check Your Growth\n                  <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300\" />\n                </Button>\n              </Link>\n            </motion.div>\n          )}\n\n        </Card>\n      </motion.div>\n    </div>\n  );\n}\n\nexport default function ProcessSection() {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  // Simulate active step (in real app, this would be based on user progress)\n  const activeStep = 1;\n\n  return (\n    <section className=\"py-24 bg-background\" ref={ref}>\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Our Proven 3-Step Process\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Our systematic approach transforms your business through clarity, proven systems, and sustainable growth.\n          </p>\n        </motion.div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {processSteps.map((step, index) => (\n              <ProcessStep\n                key={index}\n                step={step}\n                index={index}\n                isActive={index === activeStep}\n                inView={inView}\n              />\n            ))}\n          </div>\n        </div>\n\n        <motion.div\n          className=\"text-center mt-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.8 }}\n        >\n          <div className=\"bg-primary/10 rounded-2xl p-8 mb-8 max-w-2xl mx-auto\">\n            <h3 className=\"text-2xl font-bold text-foreground mb-4\">\n              Ready to Transform Your Business?\n            </h3>\n            <p className=\"text-muted-foreground mb-6\">\n              Join trades businesses who've already made the leap from chaos to clarity.\n            </p>\n            <Button\n              size=\"lg\"\n              className=\"px-8 py-6 text-lg font-semibold hover-elevate active-elevate-2 group\"\n              onClick={() => console.log(\"Start your transformation\")}\n              data-testid=\"button-start-transformation\"\n            >\n              Start Your Transformation\n              <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n            </Button>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":9981},"client/src/components/QuoteForm.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Upload, CheckCircle, Mail, Calendar } from \"lucide-react\";\n\ninterface QuoteFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  company: string;\n  serviceType: string;\n  projectDescription: string;\n  timeline: string;\n  budget: string;\n  hearAboutUs: string;\n  agreeToTerms: boolean;\n}\n\nconst serviceTypes = [\n  \"Digital Foundations Setup\",\n  \"Pricing & Profit Audit\", \n  \"Sales System Implementation\",\n  \"Control Dashboard Creation\",\n  \"Referral System Setup\",\n  \"Complete Business Transformation\",\n];\n\nconst timelines = [\n  \"ASAP - I need help now\",\n  \"1-2 weeks\",\n  \"1 month\",\n  \"2-3 months\",\n  \"Just exploring options\",\n];\n\nconst budgetRanges = [\n  \"Under $5,000\",\n  \"$5,000 - $10,000\",\n  \"$10,000 - $25,000\",\n  \"$25,000 - $50,000\",\n  \"$50,000+\",\n  \"Let's discuss\",\n];\n\nexport default function QuoteForm() {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formData, setFormData] = useState<QuoteFormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    company: '',\n    serviceType: '',\n    projectDescription: '',\n    timeline: '',\n    budget: '',\n    hearAboutUs: '',\n    agreeToTerms: false,\n  });\n\n  const [errors, setErrors] = useState<Partial<QuoteFormData>>({});\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<QuoteFormData> = {};\n\n    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\n    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) newErrors.email = 'Please enter a valid email';\n    if (!formData.company.trim()) newErrors.company = 'Company name is required';\n    if (!formData.serviceType) newErrors.serviceType = 'Please select a service';\n    if (!formData.projectDescription.trim()) newErrors.projectDescription = 'Project description is required';\n    if (!formData.timeline) newErrors.timeline = 'Please select a timeline';\n    if (!formData.agreeToTerms) newErrors.agreeToTerms = true;\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      toast({\n        title: \"Please fix the errors below\",\n        description: \"All required fields must be completed\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch('/api/submit-quote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to submit quote request');\n      }\n      \n      toast({\n        title: \"Quote request submitted!\",\n        description: \"We'll get back to you within 24 hours with a custom proposal. Check your email for confirmation.\",\n      });\n\n      // Reset form\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        company: '',\n        serviceType: '',\n        projectDescription: '',\n        timeline: '',\n        budget: '',\n        hearAboutUs: '',\n        agreeToTerms: false,\n      });\n      setErrors({});\n\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        description: \"Please try again or contact us directly at louis@kpidigital.com.au\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof QuoteFormData, value: string | boolean) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 30, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  return (\n    <section className=\"py-24 bg-muted/20\" ref={ref}>\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Get Your Custom Quote\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto mb-8\">\n            Tell us about your business and we'll create a tailored plan to transform your operations and drive growth.\n          </p>\n          \n          {/* Contact options */}\n          <div className=\"flex items-center justify-center text-sm text-muted-foreground\">\n            <div className=\"flex items-center gap-2\">\n              <Mail className=\"h-4 w-4\" />\n              <span>Email: louis@kpidigital.com.au</span>\n            </div>\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"max-w-4xl mx-auto\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={inView ? \"visible\" : \"hidden\"}\n        >\n          <Card className=\"p-8 md:p-12 bg-card hover-elevate\">\n            <form onSubmit={handleSubmit} className=\"space-y-8\">\n              {/* Personal Information */}\n              <motion.div variants={itemVariants}>\n                <h3 className=\"text-2xl font-bold text-foreground mb-6 flex items-center gap-2\">\n                  <div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold\">\n                    1\n                  </div>\n                  Personal Information\n                </h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <Label htmlFor=\"firstName\" className=\"text-foreground font-medium\">\n                      First Name *\n                    </Label>\n                    <Input\n                      id=\"firstName\"\n                      value={formData.firstName}\n                      onChange={(e) => handleInputChange('firstName', e.target.value)}\n                      className={`mt-2 focus-ring ${errors.firstName ? 'border-destructive' : ''}`}\n                      placeholder=\"John\"\n                      data-testid=\"input-first-name\"\n                    />\n                    {errors.firstName && (\n                      <p className=\"text-destructive text-sm mt-1\">{errors.firstName}</p>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"lastName\" className=\"text-foreground font-medium\">\n                      Last Name *\n                    </Label>\n                    <Input\n                      id=\"lastName\"\n                      value={formData.lastName}\n                      onChange={(e) => handleInputChange('lastName', e.target.value)}\n                      className={`mt-2 focus-ring ${errors.lastName ? 'border-destructive' : ''}`}\n                      placeholder=\"Smith\"\n                      data-testid=\"input-last-name\"\n                    />\n                    {errors.lastName && (\n                      <p className=\"text-destructive text-sm mt-1\">{errors.lastName}</p>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"email\" className=\"text-foreground font-medium\">\n                      Email Address *\n                    </Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      className={`mt-2 focus-ring ${errors.email ? 'border-destructive' : ''}`}\n                      placeholder=\"john@company.com\"\n                      data-testid=\"input-email\"\n                    />\n                    {errors.email && (\n                      <p className=\"text-destructive text-sm mt-1\">{errors.email}</p>\n                    )}\n                  </div>\n                  \n                  \n                  <div className=\"md:col-span-2\">\n                    <Label htmlFor=\"company\" className=\"text-foreground font-medium\">\n                      Company Name *\n                    </Label>\n                    <Input\n                      id=\"company\"\n                      value={formData.company}\n                      onChange={(e) => handleInputChange('company', e.target.value)}\n                      className={`mt-2 focus-ring ${errors.company ? 'border-destructive' : ''}`}\n                      placeholder=\"Smith Electrical Solutions\"\n                      data-testid=\"input-company\"\n                    />\n                    {errors.company && (\n                      <p className=\"text-destructive text-sm mt-1\">{errors.company}</p>\n                    )}\n                  </div>\n                </div>\n              </motion.div>\n\n              {/* Project Details */}\n              <motion.div variants={itemVariants}>\n                <h3 className=\"text-2xl font-bold text-foreground mb-6 flex items-center gap-2\">\n                  <div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold\">\n                    2\n                  </div>\n                  Project Details\n                </h3>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <Label htmlFor=\"serviceType\" className=\"text-foreground font-medium\">\n                      What service are you interested in? *\n                    </Label>\n                    <Select \n                      value={formData.serviceType} \n                      onValueChange={(value) => handleInputChange('serviceType', value)}\n                    >\n                      <SelectTrigger className={`mt-2 focus-ring ${errors.serviceType ? 'border-destructive' : ''}`} data-testid=\"select-service-type\">\n                        <SelectValue placeholder=\"Select a service...\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {serviceTypes.map((service) => (\n                          <SelectItem key={service} value={service}>\n                            {service}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"projectDescription\" className=\"text-foreground font-medium\">\n                      Tell us about your current challenges and goals *\n                    </Label>\n                    <Textarea\n                      id=\"projectDescription\"\n                      value={formData.projectDescription}\n                      onChange={(e) => handleInputChange('projectDescription', e.target.value)}\n                      className={`mt-2 min-h-32 focus-ring ${errors.projectDescription ? 'border-destructive' : ''}`}\n                      placeholder=\"Describe your current business challenges, what you're hoping to achieve, and any specific requirements...\"\n                      data-testid=\"textarea-project-description\"\n                    />\n                    {errors.projectDescription && (\n                      <p className=\"text-destructive text-sm mt-1\">{errors.projectDescription}</p>\n                    )}\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <Label htmlFor=\"timeline\" className=\"text-foreground font-medium\">\n                        What's your timeline? *\n                      </Label>\n                      <Select \n                        value={formData.timeline} \n                        onValueChange={(value) => handleInputChange('timeline', value)}\n                      >\n                        <SelectTrigger className={`mt-2 focus-ring ${errors.timeline ? 'border-destructive' : ''}`} data-testid=\"select-timeline\">\n                          <SelectValue placeholder=\"Select timeline...\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {timelines.map((timeline) => (\n                            <SelectItem key={timeline} value={timeline}>\n                              {timeline}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      {errors.timeline && (\n                        <p className=\"text-destructive text-sm mt-1\">{errors.timeline}</p>\n                      )}\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"budget\" className=\"text-foreground font-medium\">\n                        Budget Range (Optional)\n                      </Label>\n                      <Select \n                        value={formData.budget} \n                        onValueChange={(value) => handleInputChange('budget', value)}\n                      >\n                        <SelectTrigger className=\"mt-2 focus-ring\" data-testid=\"select-budget\">\n                          <SelectValue placeholder=\"Select budget range...\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {budgetRanges.map((budget) => (\n                            <SelectItem key={budget} value={budget}>\n                              {budget}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"hearAboutUs\" className=\"text-foreground font-medium\">\n                      How did you hear about us? (Optional)\n                    </Label>\n                    <Input\n                      id=\"hearAboutUs\"\n                      value={formData.hearAboutUs}\n                      onChange={(e) => handleInputChange('hearAboutUs', e.target.value)}\n                      className=\"mt-2 focus-ring\"\n                      placeholder=\"Google search, referral, social media, etc.\"\n                      data-testid=\"input-hear-about-us\"\n                    />\n                  </div>\n                </div>\n              </motion.div>\n\n              {/* Terms and Submit */}\n              <motion.div variants={itemVariants}>\n                <div className=\"border-t border-border pt-8\">\n                  <div className=\"flex items-start gap-3 mb-6\">\n                    <Checkbox\n                      id=\"agreeToTerms\"\n                      checked={formData.agreeToTerms}\n                      onCheckedChange={(checked) => handleInputChange('agreeToTerms', checked as boolean)}\n                      className=\"mt-1\"\n                      data-testid=\"checkbox-terms\"\n                    />\n                    <Label htmlFor=\"agreeToTerms\" className=\"text-sm text-muted-foreground leading-relaxed\">\n                      I agree to the{' '}\n                      <button type=\"button\" className=\"text-primary hover:underline\">\n                        Terms of Service\n                      </button>{' '}\n                      and{' '}\n                      <button type=\"button\" className=\"text-primary hover:underline\">\n                        Privacy Policy\n                      </button>\n                      . I understand that KPI Digital will contact me to discuss my project. *\n                    </Label>\n                  </div>\n                  {errors.agreeToTerms && (\n                    <p className=\"text-destructive text-sm mb-6\">You must agree to the terms</p>\n                  )}\n                  \n                  <div className=\"flex flex-col sm:flex-row gap-4\">\n                    <Button\n                      type=\"submit\"\n                      size=\"lg\"\n                      disabled={isSubmitting}\n                      className=\"flex-1 px-8 py-6 text-lg font-semibold hover-elevate active-elevate-2 group\"\n                      data-testid=\"button-submit-quote\"\n                    >\n                      {isSubmitting ? (\n                        <>\n                          <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-primary-foreground mr-2\" />\n                          Submitting...\n                        </>\n                      ) : (\n                        <>\n                          Get My Custom Quote\n                          <CheckCircle className=\"ml-2 h-5 w-5 group-hover:scale-110 transition-transform duration-300\" />\n                        </>\n                      )}\n                    </Button>\n                    \n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"lg\"\n                      className=\"px-8 py-6 text-lg font-semibold hover-elevate\"\n                      onClick={() => console.log(\"Schedule call clicked\")}\n                      data-testid=\"button-schedule-call\"\n                    >\n                      <Calendar className=\"mr-2 h-5 w-5\" />\n                      Schedule Call Instead\n                    </Button>\n                  </div>\n                </div>\n              </motion.div>\n            </form>\n          </Card>\n        </motion.div>\n\n        {/* Additional trust signals */}\n        <motion.div\n          className=\"text-center mt-12\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.4 }}\n        >\n          <div className=\"flex flex-col md:flex-row items-center justify-center gap-8 text-sm text-muted-foreground\">\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-primary\" />\n              <span>Free consultation & quote</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-primary\" />\n              <span>No obligation or pressure</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-primary\" />\n              <span>Response within 24 hours</span>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":19599},"client/src/components/SolutionSection.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { TrendingUp, Shield, Zap } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nconst features = [\n  {\n    icon: Zap,\n    title: \"Done-for-You Systems\",\n    description: \"Automation & monitoring systems that work while you sleep\",\n  },\n  {\n    icon: TrendingUp,\n    title: \"Growth Planning\",\n    description: \"Strategic roadmaps for high-value projects and expansion\",\n  },\n  {\n    icon: Shield,\n    title: \"Real-Time Clarity\",\n    description: \"Live dashboards showing exactly where your business stands\",\n  },\n];\n\nexport default function SolutionSection() {\n  const [, setLocation] = useLocation();\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2,\n        delayChildren: 0.3,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 50, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  return (\n    <section className=\"py-24 bg-background\" ref={ref}>\n      <div className=\"container mx-auto px-4\">\n        {/* Header */}\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Introducing Digital Foundations\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Our comprehensive system transforms chaos into clarity, giving you the tools and insights to scale with confidence.\n          </p>\n        </motion.div>\n\n        {/* Features Grid */}\n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-20\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={inView ? \"visible\" : \"hidden\"}\n        >\n          {features.map((feature, index) => (\n            <motion.div key={index} variants={itemVariants}>\n              <Card className=\"p-8 text-center hover-elevate group transition-all duration-300 h-full bg-card\">\n                <motion.div\n                  className=\"inline-flex items-center justify-center w-16 h-16 bg-primary/10 rounded-full mb-6 group-hover:bg-primary/20 transition-colors duration-300\"\n                  whileHover={{ scale: 1.1, rotate: 360 }}\n                  transition={{ duration: 0.6 }}\n                >\n                  <feature.icon className=\"h-8 w-8 text-primary\" />\n                </motion.div>\n                <h3 className=\"text-xl font-bold text-foreground mb-4\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-muted-foreground\">\n                  {feature.description}\n                </p>\n              </Card>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* CTA */}\n        <motion.div\n          className=\"text-center\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.8 }}\n        >\n          <Button\n            size=\"lg\"\n            className=\"px-8 py-6 text-lg font-semibold hover-elevate active-elevate-2\"\n            onClick={() => setLocation(\"/digital-foundations\")}\n            data-testid=\"button-learn-more-foundations\"\n          >\n            Learn More About Digital Foundations\n          </Button>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":3831},"client/src/components/TestimonialsSection.tsx":{"content":"import { motion, AnimatePresence } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Star, Quote, ChevronLeft, ChevronRight } from \"lucide-react\";\n\n//todo: remove mock functionality - replace with real testimonials\nconst testimonials = [\n  {\n    id: 1,\n    name: \"Mike Rodriguez\",\n    company: \"Rodriguez Electrical\",\n    role: \"Owner & Master Electrician\",\n    avatar: \"/api/placeholder/80/80\",\n    rating: 5,\n    quote: \"KPI Digital transformed our business from reactive chaos to predictable growth. We've increased our revenue by 140% and finally have systems that work.\",\n    results: \"140% revenue increase\",\n    location: \"Phoenix, AZ\",\n  },\n  {\n    id: 2,\n    name: \"Sarah Chen\",\n    company: \"Chen HVAC Solutions\",\n    role: \"CEO\",\n    avatar: \"/api/placeholder/80/80\",\n    rating: 5,\n    quote: \"The clarity dashboards gave us real-time visibility into our business. We now know exactly which jobs are profitable and where to focus our energy.\",\n    results: \"3x profit visibility\",\n    location: \"Austin, TX\",\n  },\n  {\n    id: 3,\n    name: \"Tony Martinez\",\n    company: \"Martinez Plumbing Co\",\n    role: \"Founder\",\n    avatar: \"/api/placeholder/80/80\",\n    rating: 5,\n    quote: \"Their sales system setup doubled our conversion rate. We're closing more deals with less effort and attracting higher-quality customers.\",\n    results: \"2x conversion rate\",\n    location: \"Denver, CO\",\n  },\n  {\n    id: 4,\n    name: \"Lisa Thompson\",\n    company: \"Thompson Solar\",\n    role: \"Owner\",\n    avatar: \"/api/placeholder/80/80\",\n    rating: 5,\n    quote: \"The pricing audit revealed we were leaving $80k on the table annually. Now every quote is profitable and we're confident in our pricing.\",\n    results: \"$80k recovered annually\",\n    location: \"San Diego, CA\",\n  },\n  {\n    id: 5,\n    name: \"James Wilson\",\n    company: \"Wilson Carpentry\",\n    role: \"Master Carpenter\",\n    avatar: \"/api/placeholder/80/80\",\n    rating: 5,\n    quote: \"The referral system is incredible. We get 3-4 quality referrals every week without having to ask. Our calendar is booked solid for months.\",\n    results: \"3-4 weekly referrals\",\n    location: \"Seattle, WA\",\n  },\n];\n\ninterface TestimonialCardProps {\n  testimonial: typeof testimonials[0];\n  isActive: boolean;\n}\n\nfunction TestimonialCard({ testimonial, isActive }: TestimonialCardProps) {\n  return (\n    <motion.div\n      className=\"w-full\"\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.9 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Card className=\"p-8 max-w-4xl mx-auto hover-elevate bg-card relative\">\n        <Quote className=\"absolute top-6 right-6 h-8 w-8 text-primary/20\" />\n        \n        <div className=\"flex flex-col md:flex-row gap-8\">\n          {/* Avatar and info */}\n          <div className=\"flex-shrink-0 text-center md:text-left\">\n            <Avatar className=\"w-20 h-20 mx-auto md:mx-0 mb-4\">\n              <AvatarImage src={testimonial.avatar} />\n              <AvatarFallback className=\"text-lg font-bold\">\n                {testimonial.name.split(' ').map(n => n[0]).join('')}\n              </AvatarFallback>\n            </Avatar>\n            \n            <h4 className=\"font-bold text-foreground text-lg mb-1\">\n              {testimonial.name}\n            </h4>\n            <p className=\"text-sm text-muted-foreground mb-1\">\n              {testimonial.role}\n            </p>\n            <p className=\"text-sm font-semibold text-primary mb-2\">\n              {testimonial.company}\n            </p>\n            <p className=\"text-xs text-muted-foreground mb-4\">\n              {testimonial.location}\n            </p>\n            \n            {/* Rating */}\n            <div className=\"flex justify-center md:justify-start gap-1 mb-4\">\n              {[...Array(testimonial.rating)].map((_, i) => (\n                <Star key={i} className=\"h-4 w-4 fill-primary text-primary\" />\n              ))}\n            </div>\n            \n            {/* Results badge */}\n            <div className=\"inline-block bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-semibold\">\n              {testimonial.results}\n            </div>\n          </div>\n          \n          {/* Quote */}\n          <div className=\"flex-1\">\n            <blockquote className=\"text-lg md:text-xl text-foreground leading-relaxed italic\">\n              \"{testimonial.quote}\"\n            </blockquote>\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n\nexport default function TestimonialsSection() {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n  \n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\n\n  // Auto-advance testimonials\n  useEffect(() => {\n    if (!isAutoPlaying) return;\n    \n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n    \n    return () => clearInterval(interval);\n  }, [isAutoPlaying]);\n\n  const goToPrevious = () => {\n    setIsAutoPlaying(false);\n    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length);\n  };\n\n  const goToNext = () => {\n    setIsAutoPlaying(false);\n    setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n  };\n\n  const goToSlide = (index: number) => {\n    setIsAutoPlaying(false);\n    setCurrentIndex(index);\n  };\n\n  return (\n    <section className=\"py-24 bg-muted/20\" ref={ref}>\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Real Results from Real Businesses\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            See how trades businesses just like yours have transformed chaos into clarity and achieved sustainable growth.\n          </p>\n        </motion.div>\n\n        <motion.div\n          className=\"relative\"\n          initial={{ opacity: 0 }}\n          animate={inView ? { opacity: 1 } : {}}\n          transition={{ duration: 0.6, delay: 0.3 }}\n        >\n          {/* Navigation buttons */}\n          <div className=\"absolute left-4 md:left-8 top-1/2 transform -translate-y-1/2 z-10\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={goToPrevious}\n              className=\"w-12 h-12 rounded-full bg-background/80 backdrop-blur-sm hover-elevate\"\n              data-testid=\"button-testimonial-previous\"\n            >\n              <ChevronLeft className=\"h-6 w-6\" />\n            </Button>\n          </div>\n          \n          <div className=\"absolute right-4 md:right-8 top-1/2 transform -translate-y-1/2 z-10\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={goToNext}\n              className=\"w-12 h-12 rounded-full bg-background/80 backdrop-blur-sm hover-elevate\"\n              data-testid=\"button-testimonial-next\"\n            >\n              <ChevronRight className=\"h-6 w-6\" />\n            </Button>\n          </div>\n\n          {/* Testimonial content */}\n          <div className=\"px-16 md:px-24\">\n            <AnimatePresence mode=\"wait\">\n              <TestimonialCard\n                key={currentIndex}\n                testimonial={testimonials[currentIndex]}\n                isActive={true}\n              />\n            </AnimatePresence>\n          </div>\n\n          {/* Dots indicator */}\n          <div className=\"flex justify-center gap-2 mt-8\">\n            {testimonials.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => goToSlide(index)}\n                className={`w-3 h-3 rounded-full transition-all duration-300 hover-elevate ${\n                  index === currentIndex\n                    ? 'bg-primary scale-125'\n                    : 'bg-muted-foreground/30 hover:bg-muted-foreground/50'\n                }`}\n                data-testid={`button-testimonial-dot-${index}`}\n              />\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Trust indicators */}\n        <motion.div\n          className=\"text-center mt-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.6 }}\n        >\n          <div className=\"flex justify-center items-center text-sm text-muted-foreground\">\n            <div>\n              <span className=\"font-semibold\">Trusted by Trades Businesses</span>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":9055},"client/src/components/ValueCardsSection.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\nimport { getAllValueProps } from \"@shared/valueProps\";\n\nconst valueProps = getAllValueProps();\n\ninterface ValueCardProps {\n  value: typeof valueProps[0];\n  index: number;\n  isFlipped: boolean;\n  onFlip: (index: number) => void;\n}\n\nfunction ValueCard({ value, index, isFlipped, onFlip }: ValueCardProps) {\n  return (\n    <motion.div\n      className=\"relative h-96 group perspective-1000\"\n      whileHover={{ scale: 1.02 }}\n      transition={{ duration: 0.3 }}\n    >\n      <motion.div\n        className=\"relative w-full h-full transition-transform duration-700 transform-style-preserve-3d\"\n        animate={{ rotateY: isFlipped ? 180 : 0 }}\n      >\n        {/* Front of card */}\n        <Card \n          className={`absolute inset-0 w-full h-full backface-hidden bg-card hover-elevate p-8 flex flex-col items-center justify-center text-center cursor-pointer ${\n            isFlipped ? 'pointer-events-none' : 'pointer-events-auto'\n          }`}\n          onClick={() => onFlip(index)}\n          role=\"button\"\n          tabIndex={0}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              e.preventDefault();\n              onFlip(index);\n            }\n          }}\n          aria-label={`Learn more about ${value.title}`}\n        >\n          <motion.div\n            className=\"mb-6 p-4 bg-primary/10 rounded-full\"\n            whileHover={{ scale: 1.1 }}\n            transition={{ duration: 0.3 }}\n          >\n            <value.icon className=\"h-12 w-12 text-primary\" />\n          </motion.div>\n          \n          <h3 className=\"text-2xl font-bold text-foreground mb-4\">\n            {value.title}\n          </h3>\n          \n          <p className=\"text-muted-foreground text-lg mb-6\">\n            {value.shortDesc}\n          </p>\n          \n          <div className=\"mt-auto text-sm text-muted-foreground flex items-center gap-2\">\n            Click to learn more\n            <ArrowRight className=\"h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n          </div>\n        </Card>\n\n        {/* Back of card */}\n        <Card className={`absolute inset-0 w-full h-full backface-hidden rotate-y-180 bg-gradient-to-br from-primary to-primary/90 text-primary-foreground p-6 flex flex-col ${\n          isFlipped ? 'pointer-events-auto' : 'pointer-events-none'\n        }`}>\n          <div className=\"mb-3\">\n            <value.icon className=\"h-7 w-7 mb-3 text-primary-foreground/90\" />\n            <h3 className=\"text-lg font-bold mb-3 leading-tight\">{value.title}</h3>\n          </div>\n          \n          <p className=\"text-primary-foreground/95 mb-4 text-sm leading-relaxed\">\n            {value.fullDesc}\n          </p>\n          \n          <div className=\"mb-4 flex-1\">\n            <h4 className=\"font-semibold mb-2 text-sm text-primary-foreground/90\">Key Benefits:</h4>\n            <ul className=\"space-y-1.5\">\n              {value.benefits.map((benefit, idx) => (\n                <li key={idx} className=\"text-sm text-primary-foreground/85 flex items-start gap-2\">\n                  <div className=\"w-1.5 h-1.5 bg-primary-foreground/70 rounded-full mt-1.5 flex-shrink-0\" />\n                  <span className=\"leading-tight\">{benefit}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"mt-auto pt-2\">\n            <Link href={`/education/${value.slug}`}>\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                className=\"w-full bg-primary-foreground/95 text-primary hover:bg-primary-foreground border-primary-foreground/20 font-medium group shadow-sm\"\n                onClick={(e) => e.stopPropagation()}\n                data-testid={`button-learn-${value.slug}`}\n              >\n                Learn More\n                <ArrowRight className=\"ml-2 h-3.5 w-3.5 group-hover:translate-x-1 transition-transform duration-300\" />\n              </Button>\n            </Link>\n          </div>\n        </Card>\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport default function ValueCardsSection() {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n  \n  const [flippedCards, setFlippedCards] = useState<Set<number>>(new Set());\n\n  const handleCardFlip = (index: number) => {\n    setFlippedCards(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(index)) {\n        newSet.delete(index);\n      } else {\n        newSet.add(index);\n      }\n      return newSet;\n    });\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.15,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 50, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  return (\n    <section className=\"py-24 bg-muted/20\" ref={ref}>\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Everything You Need to Scale\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto mb-8\">\n            Our comprehensive toolkit covers every aspect of business growth. Click each card to explore the details.\n          </p>\n        </motion.div>\n\n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto mb-16\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={inView ? \"visible\" : \"hidden\"}\n        >\n          {valueProps.map((value, index) => (\n            <motion.div key={index} variants={itemVariants}>\n              <ValueCard\n                value={value}\n                index={index}\n                isFlipped={flippedCards.has(index)}\n                onFlip={handleCardFlip}\n              />\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div\n          className=\"text-center\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.8 }}\n        >\n          <Link href=\"/#quote-form\">\n            <Button\n              size=\"lg\"\n              className=\"px-8 py-6 text-lg font-semibold\"\n              data-testid=\"button-get-started-value\"\n            >\n              Get Started Today\n            </Button>\n          </Link>\n        </motion.div>\n      </div>\n\n    </section>\n  );\n}","size_bytes":7016},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/EducationPage.tsx":{"content":"import { useParams, useLocation } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useEffect } from \"react\";\nimport { getValuePropBySlug } from \"@shared/valueProps\";\nimport { updateSEO, resetSEO } from \"@/utils/seo\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { ArrowLeft, CheckCircle, ArrowRight, Target, Users, TrendingUp, Quote } from \"lucide-react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport NotFound from \"./not-found\";\n\nexport default function EducationPage() {\n  const { slug } = useParams<{ slug: string }>();\n  const [, navigate] = useLocation();\n  \n  const valueProp = slug ? getValuePropBySlug(slug) : undefined;\n\n  const [heroRef, heroInView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  const [contentRef, contentInView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  useEffect(() => {\n    if (valueProp) {\n      updateSEO({\n        title: `${valueProp.title} - KPI Digital`,\n        description: valueProp.fullDesc,\n        ogTitle: `${valueProp.title} | Transform Your Trades Business`,\n        ogDescription: `${valueProp.shortDesc}. ${valueProp.fullDesc}`,\n        ogUrl: window.location.href,\n      });\n    }\n\n    // Cleanup function to reset SEO when leaving the page\n    return () => {\n      resetSEO();\n    };\n  }, [valueProp]);\n\n  if (!valueProp) {\n    return <NotFound />;\n  }\n\n  const scrollToQuoteForm = () => {\n    navigate('/#quote-form');\n  };\n\n  const goBack = () => {\n    navigate('/');\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 30, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation onCTAClick={scrollToQuoteForm} />\n      \n      <main className=\"pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-gradient-to-br from-background via-background to-muted/20\" ref={heroRef}>\n          <div className=\"container mx-auto px-4\">\n            <motion.div\n              className=\"max-w-4xl mx-auto text-center\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : {}}\n              transition={{ duration: 0.6 }}\n            >\n              {/* Back button */}\n              <Button\n                variant=\"ghost\"\n                className=\"mb-8 focus-ring\"\n                onClick={goBack}\n                data-testid=\"button-back-home\"\n                aria-label=\"Go back to home page\"\n              >\n                <ArrowLeft className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n                Back to Home\n              </Button>\n\n              {/* Icon and title */}\n              <motion.div\n                className=\"mb-8\"\n                initial={{ scale: 0.8, opacity: 0 }}\n                animate={heroInView ? { scale: 1, opacity: 1 } : {}}\n                transition={{ duration: 0.6, delay: 0.2 }}\n              >\n                <div className=\"inline-flex items-center justify-center w-20 h-20 bg-primary/10 rounded-full mb-6\" aria-hidden=\"true\">\n                  <valueProp.icon className=\"h-10 w-10 text-primary\" />\n                </div>\n                <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n                  {valueProp.title}\n                </h1>\n                <p className=\"text-xl text-muted-foreground mb-6\">\n                  {valueProp.shortDesc}\n                </p>\n              </motion.div>\n\n              {/* Benefits badges */}\n              <motion.div\n                className=\"flex flex-wrap justify-center gap-3 mb-8\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={heroInView ? { opacity: 1, y: 0 } : {}}\n                transition={{ duration: 0.6, delay: 0.4 }}\n              >\n                {valueProp.benefits.map((benefit, index) => (\n                  <Badge key={index} variant=\"outline\" className=\"px-4 py-2\">\n                    {benefit}\n                  </Badge>\n                ))}\n              </motion.div>\n\n              {/* CTA */}\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={heroInView ? { opacity: 1, y: 0 } : {}}\n                transition={{ duration: 0.6, delay: 0.6 }}\n              >\n                <Button\n                  size=\"lg\"\n                  className=\"px-8 py-6 text-lg font-semibold group focus-ring\"\n                  onClick={scrollToQuoteForm}\n                  data-testid=\"button-get-started-hero\"\n                  aria-label={`Get started with ${valueProp.title}`}\n                >\n                  Get Started Today\n                  <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" aria-hidden=\"true\" />\n                </Button>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Main Content */}\n        <motion.section\n          className=\"py-16\"\n          ref={contentRef}\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={contentInView ? \"visible\" : \"hidden\"}\n        >\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto space-y-16\">\n              \n              {/* Overview */}\n              <motion.div variants={itemVariants}>\n                <Card className=\"p-8 bg-card\">\n                  <h2 className=\"text-3xl font-bold text-foreground mb-6 flex items-center gap-3\">\n                    <Target className=\"h-8 w-8 text-primary\" aria-hidden=\"true\" />\n                    What You'll Get\n                  </h2>\n                  <p className=\"text-lg text-muted-foreground leading-relaxed mb-6\">\n                    {valueProp.detailedDescription}\n                  </p>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {valueProp.benefits.map((benefit, index) => (\n                      <div key={index} className=\"flex items-center gap-3\">\n                        <CheckCircle className=\"h-5 w-5 text-primary flex-shrink-0\" aria-hidden=\"true\" />\n                        <span className=\"text-foreground font-medium\">{benefit}</span>\n                      </div>\n                    ))}\n                  </div>\n                </Card>\n              </motion.div>\n\n              {/* Who It's For */}\n              <motion.div variants={itemVariants}>\n                <Card className=\"p-8 bg-card\">\n                  <h2 className=\"text-3xl font-bold text-foreground mb-6 flex items-center gap-3\">\n                    <Users className=\"h-8 w-8 text-primary\" />\n                    Who This Is For\n                  </h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {valueProp.whoItsFor.map((item, index) => (\n                      <div key={index} className=\"flex items-start gap-3\">\n                        <CheckCircle className=\"h-5 w-5 text-primary flex-shrink-0 mt-0.5\" />\n                        <span className=\"text-muted-foreground\">{item}</span>\n                      </div>\n                    ))}\n                  </div>\n                </Card>\n              </motion.div>\n\n              {/* Expected Outcomes */}\n              <motion.div variants={itemVariants}>\n                <Card className=\"p-8 bg-primary text-primary-foreground\">\n                  <h2 className=\"text-3xl font-bold mb-6 flex items-center gap-3\">\n                    <TrendingUp className=\"h-8 w-8\" />\n                    Expected Outcomes\n                  </h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {valueProp.outcomes.map((outcome, index) => (\n                      <div key={index} className=\"flex items-start gap-3\">\n                        <div className=\"w-2 h-2 bg-primary-foreground rounded-full mt-2 flex-shrink-0\" />\n                        <span className=\"text-primary-foreground font-medium\">{outcome}</span>\n                      </div>\n                    ))}\n                  </div>\n                </Card>\n              </motion.div>\n\n              {/* Process Steps */}\n              <motion.div variants={itemVariants}>\n                <Card className=\"p-8 bg-card\">\n                  <h2 className=\"text-3xl font-bold text-foreground mb-8\">Our Proven Process</h2>\n                  <div className=\"space-y-6\">\n                    {valueProp.processSteps.map((step, index) => (\n                      <div key={index} className=\"flex gap-4\">\n                        <div className=\"flex-shrink-0 w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold\">\n                          {index + 1}\n                        </div>\n                        <div>\n                          <h3 className=\"text-xl font-bold text-foreground mb-2\">{step.title}</h3>\n                          <p className=\"text-muted-foreground\">{step.description}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </Card>\n              </motion.div>\n\n              {/* FAQs */}\n              <motion.div variants={itemVariants}>\n                <Card className=\"p-8 bg-card\">\n                  <h2 className=\"text-3xl font-bold text-foreground mb-8\">Frequently Asked Questions</h2>\n                  <Accordion type=\"single\" collapsible className=\"w-full\">\n                    {valueProp.faqs.map((faq, index) => (\n                      <AccordionItem key={index} value={`item-${index}`}>\n                        <AccordionTrigger className=\"text-left hover:text-primary transition-colors\">\n                          {faq.question}\n                        </AccordionTrigger>\n                        <AccordionContent className=\"text-muted-foreground\">\n                          {faq.answer}\n                        </AccordionContent>\n                      </AccordionItem>\n                    ))}\n                  </Accordion>\n                </Card>\n              </motion.div>\n\n\n              {/* Final CTA */}\n              <motion.div variants={itemVariants}>\n                <Card className=\"p-12 text-center bg-gradient-to-br from-primary/5 to-primary/10 border-primary/20\">\n                  <h2 className=\"text-3xl font-bold text-foreground mb-4\">\n                    Ready to Transform Your Business?\n                  </h2>\n                  <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n                    Join hundreds of trades businesses who've already implemented {valueProp.title} and seen incredible results.\n                  </p>\n                  <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                    <Button\n                      size=\"lg\"\n                      className=\"px-8 py-6 text-lg font-semibold group\"\n                      onClick={scrollToQuoteForm}\n                      data-testid=\"button-get-quote-final\"\n                    >\n                      Get Your Custom Quote\n                      <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"lg\"\n                      className=\"px-8 py-6 text-lg font-semibold\"\n                      onClick={goBack}\n                      data-testid=\"button-back-home-final\"\n                    >\n                      Learn About Other Services\n                    </Button>\n                  </div>\n                </Card>\n              </motion.div>\n\n            </div>\n          </div>\n        </motion.section>\n      </main>\n\n      <Footer onCTAClick={scrollToQuoteForm} />\n    </div>\n  );\n}","size_bytes":12313},"client/src/pages/Home.tsx":{"content":"import { useEffect } from \"react\";\nimport HeroSection from \"@/components/HeroSection\";\nimport PainPointsSection from \"@/components/PainPointsSection\";\nimport SolutionSection from \"@/components/SolutionSection\";\nimport ValueCardsSection from \"@/components/ValueCardsSection\";\nimport ProcessSection from \"@/components/ProcessSection\";\nimport QuoteForm from \"@/components/QuoteForm\";\nimport Footer from \"@/components/Footer\";\nimport Navigation from \"@/components/Navigation\";\nimport { updateSEO } from \"@/utils/seo\";\n\nexport default function Home() {\n  useEffect(() => {\n    updateSEO({\n      title: \"KPI Digital - Digital Transformation for Trades Businesses | Clarity. Systems. Growth.\",\n      description: \"Helping Australian trades businesses move from reactive chaos to predictable, profitable growth. Get the clarity, systems, and growth strategy you need to scale your business.\",\n      ogTitle: \"KPI Digital - Transform Your Trades Business\",\n      ogDescription: \"From reactive chaos to predictable growth. Get clarity on your numbers, systems that scale, and a growth strategy that works for your trades business.\",\n    });\n  }, []);\n  const scrollToQuoteForm = () => {\n    const element = document.querySelector('#quote-form');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation onCTAClick={scrollToQuoteForm} />\n      \n      <main>\n        <HeroSection onCTAClick={scrollToQuoteForm} />\n        <PainPointsSection />\n        <SolutionSection />\n        <ValueCardsSection />\n        <ProcessSection />\n        <div id=\"quote-form\">\n          <QuoteForm />\n        </div>\n      </main>\n      \n      <Footer onCTAClick={scrollToQuoteForm} />\n    </div>\n  );\n}","size_bytes":1778},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/utils/seo.ts":{"content":"export interface SEOData {\n  title: string;\n  description: string;\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: string;\n  ogUrl?: string;\n}\n\n// Default OG image for social sharing (square KPI Digital logo)\nconst DEFAULT_OG_IMAGE = `${window.location.origin}/og-image.png`;\nconst OG_IMAGE_WIDTH = \"512\";\nconst OG_IMAGE_HEIGHT = \"512\";\n\nexport const updateSEO = (data: SEOData) => {\n  // Update document title\n  document.title = data.title;\n\n  // Update or create meta description\n  let metaDescription = document.querySelector('meta[name=\"description\"]');\n  if (!metaDescription) {\n    metaDescription = document.createElement('meta');\n    metaDescription.setAttribute('name', 'description');\n    document.head.appendChild(metaDescription);\n  }\n  metaDescription.setAttribute('content', data.description);\n\n  // Update or create Open Graph meta tags\n  const ogTags = [\n    { property: 'og:title', content: data.ogTitle || data.title },\n    { property: 'og:description', content: data.ogDescription || data.description },\n    { property: 'og:type', content: 'website' },\n    { property: 'og:site_name', content: 'KPI Digital' },\n  ];\n\n  // Always include og:url (use provided or current page URL)\n  const ogUrl = data.ogUrl || window.location.href;\n  ogTags.push({ property: 'og:url', content: ogUrl });\n\n  // Always include OG image (use provided or default)\n  const ogImage = data.ogImage || DEFAULT_OG_IMAGE;\n  ogTags.push({ property: 'og:image', content: ogImage });\n  ogTags.push({ property: 'og:image:width', content: OG_IMAGE_WIDTH });\n  ogTags.push({ property: 'og:image:height', content: OG_IMAGE_HEIGHT });\n\n  ogTags.forEach(({ property, content }) => {\n    let metaTag = document.querySelector(`meta[property=\"${property}\"]`);\n    if (!metaTag) {\n      metaTag = document.createElement('meta');\n      metaTag.setAttribute('property', property);\n      document.head.appendChild(metaTag);\n    }\n    metaTag.setAttribute('content', content);\n  });\n\n  // Add Twitter Card meta tags\n  const twitterTags = [\n    { name: 'twitter:card', content: 'summary_large_image' },\n    { name: 'twitter:title', content: data.ogTitle || data.title },\n    { name: 'twitter:description', content: data.ogDescription || data.description },\n  ];\n\n  // Always include Twitter image (use provided or default)\n  const twitterImage = data.ogImage || DEFAULT_OG_IMAGE;\n  twitterTags.push({ name: 'twitter:image', content: twitterImage });\n\n  twitterTags.forEach(({ name, content }) => {\n    let metaTag = document.querySelector(`meta[name=\"${name}\"]`);\n    if (!metaTag) {\n      metaTag = document.createElement('meta');\n      metaTag.setAttribute('name', name);\n      document.head.appendChild(metaTag);\n    }\n    metaTag.setAttribute('content', content);\n  });\n};\n\nexport const resetSEO = () => {\n  document.title = 'KPI Digital - Clarity. Systems. Growth.';\n  \n  const metaDescription = document.querySelector('meta[name=\"description\"]');\n  if (metaDescription) {\n    metaDescription.setAttribute('content', 'Helping trades businesses move from reactive chaos to predictable, profitable growth. Get the clarity, systems, and growth you need.');\n  }\n\n  // Reset Open Graph tags to default\n  const ogTitle = document.querySelector('meta[property=\"og:title\"]');\n  if (ogTitle) {\n    ogTitle.setAttribute('content', 'KPI Digital - Clarity. Systems. Growth.');\n  }\n\n  const ogDescription = document.querySelector('meta[property=\"og:description\"]');\n  if (ogDescription) {\n    ogDescription.setAttribute('content', 'Helping trades businesses move from reactive chaos to predictable, profitable growth.');\n  }\n\n  const ogUrl = document.querySelector('meta[property=\"og:url\"]');\n  if (ogUrl) {\n    ogUrl.setAttribute('content', window.location.origin);\n  }\n\n  // Reset Twitter Card tags\n  const twitterTitle = document.querySelector('meta[name=\"twitter:title\"]');\n  if (twitterTitle) {\n    twitterTitle.setAttribute('content', 'KPI Digital - Clarity. Systems. Growth.');\n  }\n\n  const twitterDescription = document.querySelector('meta[name=\"twitter:description\"]');\n  if (twitterDescription) {\n    twitterDescription.setAttribute('content', 'Helping trades businesses move from reactive chaos to predictable, profitable growth.');\n  }\n};","size_bytes":4225},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Demo content above footer */}\n      <div className=\"h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">Scroll down to see the footer</h1>\n          <p className=\"text-muted-foreground\">The footer contains animated elements and interactive components</p>\n        </div>\n      </div>\n      \n      <Footer onCTAClick={() => console.log('Footer CTA clicked')} />\n    </div>\n  );\n}","size_bytes":602},"client/src/components/examples/HeroSection.tsx":{"content":"import HeroSection from '../HeroSection';\n\nexport default function HeroSectionExample() {\n  return (\n    <HeroSection \n      onCTAClick={() => console.log('Strategy call booking initiated')}\n    />\n  );\n}","size_bytes":204},"client/src/components/examples/Navigation.tsx":{"content":"import Navigation from '../Navigation';\n\nexport default function NavigationExample() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation onCTAClick={() => console.log('Navigation CTA clicked')} />\n      \n      {/* Demo content to show navigation behavior */}\n      <div className=\"pt-20\">\n        <div className=\"h-screen flex items-center justify-center bg-muted/20\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold mb-4\">Scroll down to see navigation changes</h1>\n            <p className=\"text-muted-foreground\">The navigation bar adapts as you scroll</p>\n          </div>\n        </div>\n        \n        <div id=\"services\" className=\"h-screen flex items-center justify-center bg-background\">\n          <h2 className=\"text-3xl font-bold\">Services Section</h2>\n        </div>\n        \n        <div id=\"process\" className=\"h-screen flex items-center justify-center bg-muted/20\">\n          <h2 className=\"text-3xl font-bold\">Process Section</h2>\n        </div>\n        \n        <div id=\"results\" className=\"h-screen flex items-center justify-center bg-background\">\n          <h2 className=\"text-3xl font-bold\">Results Section</h2>\n        </div>\n        \n        <div id=\"about\" className=\"h-screen flex items-center justify-center bg-muted/20\">\n          <h2 className=\"text-3xl font-bold\">About Section</h2>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":1421},"client/src/components/examples/PainPointsSection.tsx":{"content":"import PainPointsSection from '../PainPointsSection';\n\nexport default function PainPointsSectionExample() {\n  return <PainPointsSection />;\n}","size_bytes":141},"client/src/components/examples/ProcessSection.tsx":{"content":"import ProcessSection from '../ProcessSection';\n\nexport default function ProcessSectionExample() {\n  return <ProcessSection />;\n}","size_bytes":129},"client/src/components/examples/QuoteForm.tsx":{"content":"import QuoteForm from '../QuoteForm';\n\nexport default function QuoteFormExample() {\n  return <QuoteForm />;\n}","size_bytes":109},"client/src/components/examples/SolutionSection.tsx":{"content":"import SolutionSection from '../SolutionSection';\n\nexport default function SolutionSectionExample() {\n  return <SolutionSection />;\n}","size_bytes":133},"client/src/components/examples/TestimonialsSection.tsx":{"content":"import TestimonialsSection from '../TestimonialsSection';\n\nexport default function TestimonialsSectionExample() {\n  return <TestimonialsSection />;\n}","size_bytes":149},"client/src/components/examples/ValueCardsSection.tsx":{"content":"import ValueCardsSection from '../ValueCardsSection';\n\nexport default function ValueCardsSectionExample() {\n  return <ValueCardsSection />;\n}","size_bytes":141},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-11 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":845},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-11 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-3 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 min-h-[44px]\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5753},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/EmailCaptureModal.tsx":{"content":"import { useState } from \"react\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Download, Loader2 } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface EmailCaptureModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSubmit: (email: string) => Promise<void>;\n  calculatorType: string;\n}\n\nexport function EmailCaptureModal({ \n  open, \n  onOpenChange, \n  onSubmit,\n  calculatorType\n}: EmailCaptureModalProps) {\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      await onSubmit(email);\n      setEmail(\"\");\n      onOpenChange(false);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to generate report. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"text-2xl\">Download Your Report</DialogTitle>\n          <DialogDescription className=\"text-base\">\n            Enter your email to receive your detailed {calculatorType} assessment report. \n            We'll also send a copy to our team to help us better understand your needs.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit} className=\"space-y-4 mt-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\" className=\"text-base\">\n              Email Address\n            </Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"your@email.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              disabled={isSubmitting}\n              className=\"h-11\"\n              data-testid=\"input-email-capture\"\n              required\n            />\n          </div>\n          <div className=\"flex gap-3 pt-2\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={isSubmitting}\n              className=\"flex-1\"\n              data-testid=\"button-cancel\"\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"flex-1\"\n              data-testid=\"button-download-report\"\n            >\n              {isSubmitting ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Generating...\n                </>\n              ) : (\n                <>\n                  <Download className=\"mr-2 h-4 w-4\" />\n                  Download Report\n                </>\n              )}\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":3509},"client/src/components/PDFReport.tsx":{"content":"import { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\nimport logoPath from '@assets/kpi_digital_logo_circle_1759287571808.png';\n\nconst BLACK = '#000000';\nconst DARK_GRAY = '#2D2D2D';\nconst MEDIUM_GRAY = '#666666';\nconst LIGHT_GRAY = '#E5E5E5';\nconst WHITE = '#FFFFFF';\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: 40,\n    fontFamily: 'Helvetica',\n    fontSize: 10,\n    color: DARK_GRAY,\n    backgroundColor: '#ffffff',\n  },\n  coverPage: {\n    padding: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: BLACK,\n  },\n  coverLogo: {\n    width: 100,\n    height: 100,\n    marginBottom: 30,\n  },\n  coverTitle: {\n    fontSize: 28,\n    fontFamily: 'Helvetica-Bold',\n    color: WHITE,\n    marginBottom: 20,\n    textAlign: 'center',\n    letterSpacing: 2,\n  },\n  coverSubtitle: {\n    fontSize: 20,\n    fontFamily: 'Helvetica-Bold',\n    color: WHITE,\n    marginBottom: 40,\n    textAlign: 'center',\n  },\n  coverInfo: {\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    padding: 20,\n    borderRadius: 8,\n    width: '80%',\n    marginTop: 30,\n  },\n  coverInfoText: {\n    fontSize: 12,\n    color: '#ffffff',\n    textAlign: 'center',\n    marginBottom: 5,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginBottom: 25,\n    paddingBottom: 15,\n    borderBottomWidth: 2,\n    borderBottomColor: DARK_GRAY,\n    borderBottomStyle: 'solid',\n  },\n  headerLogo: {\n    width: 40,\n    height: 40,\n  },\n  headerText: {\n    fontSize: 20,\n    fontFamily: 'Helvetica-Bold',\n    color: DARK_GRAY,\n  },\n  pageNumber: {\n    position: 'absolute',\n    bottom: 30,\n    right: 40,\n    fontSize: 9,\n    color: MEDIUM_GRAY,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontFamily: 'Helvetica-Bold',\n    color: BLACK,\n    marginBottom: 15,\n    marginTop: 10,\n  },\n  subSectionTitle: {\n    fontSize: 14,\n    fontFamily: 'Helvetica-Bold',\n    color: DARK_GRAY,\n    marginBottom: 10,\n    marginTop: 15,\n  },\n  text: {\n    fontSize: 10,\n    lineHeight: 1.6,\n    marginBottom: 8,\n    color: DARK_GRAY,\n  },\n  boldText: {\n    fontFamily: 'Helvetica-Bold',\n  },\n  scoreCard: {\n    backgroundColor: LIGHT_GRAY,\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: BLACK,\n    borderStyle: 'solid',\n  },\n  scoreRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  scoreLabel: {\n    fontSize: 11,\n    color: MEDIUM_GRAY,\n  },\n  scoreValue: {\n    fontSize: 11,\n    fontFamily: 'Helvetica-Bold',\n    color: BLACK,\n  },\n  tierBadge: {\n    backgroundColor: BLACK,\n    color: '#ffffff',\n    padding: '8 16',\n    borderRadius: 4,\n    fontSize: 12,\n    fontFamily: 'Helvetica-Bold',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  tocItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: LIGHT_GRAY,\n    borderBottomStyle: 'solid',\n  },\n  tocTitle: {\n    fontSize: 11,\n    color: DARK_GRAY,\n    flex: 1,\n  },\n  tocPage: {\n    fontSize: 11,\n    color: BLACK,\n    fontFamily: 'Helvetica-Bold',\n    marginLeft: 10,\n  },\n  questionCard: {\n    backgroundColor: '#ffffff',\n    padding: 12,\n    borderRadius: 6,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: LIGHT_GRAY,\n    borderStyle: 'solid',\n  },\n  questionNumber: {\n    fontSize: 9,\n    color: BLACK,\n    fontFamily: 'Helvetica-Bold',\n    marginBottom: 4,\n  },\n  questionText: {\n    fontSize: 11,\n    fontFamily: 'Helvetica-Bold',\n    color: DARK_GRAY,\n    marginBottom: 6,\n  },\n  answerText: {\n    fontSize: 10,\n    color: MEDIUM_GRAY,\n    marginBottom: 8,\n    fontStyle: 'italic',\n  },\n  impactBox: {\n    backgroundColor: LIGHT_GRAY,\n    padding: 10,\n    borderRadius: 4,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: MEDIUM_GRAY,\n    borderStyle: 'solid',\n  },\n  impactTitle: {\n    fontSize: 10,\n    fontFamily: 'Helvetica-Bold',\n    color: BLACK,\n    marginBottom: 4,\n  },\n  impactText: {\n    fontSize: 9,\n    color: DARK_GRAY,\n    lineHeight: 1.5,\n  },\n  solutionBox: {\n    backgroundColor: DARK_GRAY,\n    padding: 10,\n    borderRadius: 4,\n  },\n  solutionTitle: {\n    fontSize: 10,\n    fontFamily: 'Helvetica-Bold',\n    color: WHITE,\n    marginBottom: 4,\n  },\n  solutionText: {\n    fontSize: 9,\n    color: WHITE,\n    lineHeight: 1.5,\n  },\n  categoryHeader: {\n    backgroundColor: BLACK,\n    padding: 12,\n    marginBottom: 15,\n    marginTop: 10,\n  },\n  categoryTitle: {\n    fontSize: 14,\n    fontFamily: 'Helvetica-Bold',\n    color: '#ffffff',\n  },\n  categoryScore: {\n    fontSize: 11,\n    color: '#ffffff',\n    marginTop: 4,\n  },\n  ctaBox: {\n    backgroundColor: BLACK,\n    padding: 20,\n    borderRadius: 8,\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  ctaTitle: {\n    fontSize: 14,\n    fontFamily: 'Helvetica-Bold',\n    color: '#ffffff',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  ctaText: {\n    fontSize: 10,\n    color: '#ffffff',\n    lineHeight: 1.6,\n    textAlign: 'center',\n  },\n  bulletPoint: {\n    flexDirection: 'row',\n    marginBottom: 6,\n  },\n  bullet: {\n    width: 4,\n    height: 4,\n    backgroundColor: BLACK,\n    borderRadius: 2,\n    marginRight: 8,\n    marginTop: 6,\n  },\n  bulletText: {\n    fontSize: 10,\n    color: DARK_GRAY,\n    flex: 1,\n    lineHeight: 1.5,\n  },\n});\n\ninterface PDFReportProps {\n  calculatorType: 'clarity' | 'systems' | 'growth';\n  score: number;\n  maxScore: number;\n  tier: {\n    name: string;\n    description: string;\n    impact: string;\n    actions: string[];\n    nextSteps: string;\n  };\n  categories: { name: string; score: number; maxScore: number }[];\n  userEmail: string;\n  date: string;\n  questions: {\n    id: string;\n    category: string;\n    question: string;\n    selectedAnswer: string;\n    score: number;\n  }[];\n}\n\nconst getCalculatorTitle = (type: string) => {\n  switch (type) {\n    case 'clarity': return 'Business Clarity Assessment';\n    case 'systems': return 'Systems Maturity Assessment';\n    case 'growth': return 'Growth Readiness Assessment';\n    default: return 'Business Assessment';\n  }\n};\n\nconst getQuestionInsights = (calculatorType: string, questionId: string) => {\n  const insights: Record<string, Record<string, { impact: string; diy: string; professional: string }>> = {\n    clarity: {\n      'lead-gen-1': {\n        impact: 'Without knowing your lead volume, you can\\'t forecast growth, allocate marketing budget effectively, or identify trends. This creates reactive decision-making instead of strategic planning.',\n        diy: 'Start a simple spreadsheet tracking leads by source each week. Use Google Sheets or Excel with columns for: Date, Source, Lead Count, Notes.',\n        professional: 'KPI Digital implements automated lead tracking dashboards that capture every lead source in real-time, with predictive analytics for forecasting and budget optimization.',\n      },\n      'lead-gen-2': {\n        impact: 'Not knowing your cost per lead means you\\'re gambling with your marketing budget. You might be overspending on poor channels while underinvesting in winners.',\n        diy: 'Calculate monthly marketing spend divided by total leads. Track this by channel (Google Ads, Facebook, referrals) to identify your best performers.',\n        professional: 'KPI Digital builds multi-channel attribution systems that track every dollar spent and lead generated, automatically optimizing budget allocation across channels.',\n      },\n      'lead-engage-1': {\n        impact: 'Your booking rate reveals how well leads convert to opportunities. Low rates mean wasted lead gen spend, while high rates validate your messaging and process.',\n        diy: 'Track total leads vs. booked appointments weekly. Add notes on what\\'s working. Aim for improvement patterns over time.',\n        professional: 'KPI Digital creates automated booking funnels with AI-powered lead qualification, follow-up sequences, and conversion optimization that typically improves booking rates 40-60%.',\n      },\n      'lead-engage-2': {\n        impact: 'No-shows directly impact revenue and waste your team\\'s time. Without tracking, you can\\'t implement prevention strategies or recover lost opportunities.',\n        diy: 'Record show-up rates and implement reminder systems (email/SMS 24hrs before). Follow up with no-shows within 1 hour to reschedule.',\n        professional: 'KPI Digital deploys automated reminder sequences, AI-powered reschedule systems, and no-show recovery campaigns that reduce no-shows by 50-70%.',\n      },\n      'sales-conv-1': {\n        impact: 'Your close rate is your business\\'s most powerful lever. A 10% improvement can double revenue without any additional marketing spend.',\n        diy: 'Track calls/demos vs. closed deals. Record common objections and successful responses. Refine your pitch based on patterns.',\n        professional: 'KPI Digital implements AI call analysis, automated CRM tracking, and data-driven sales process optimization that typically improves close rates 30-50%.',\n      },\n      'sales-conv-2': {\n        impact: 'Without a repeatable sales process, your results depend on mood, energy, and luck. Systematization creates predictable revenue and easier team scaling.',\n        diy: 'Document your best sales calls. Create a simple script or checklist. Train your team on the proven process.',\n        professional: 'KPI Digital builds complete sales playbooks with CRM automation, call scripts, objection handling frameworks, and continuous optimization based on conversion data.',\n      },\n      'offer-value-1': {\n        impact: 'Not knowing these numbers prevents strategic pricing, upsell opportunities, and accurate forecasting. You\\'re leaving money on the table with every sale.',\n        diy: 'Calculate average transaction value and customer lifetime value manually. Track repeat business rates and upsell percentages.',\n        professional: 'KPI Digital creates automated revenue analytics with customer segmentation, lifetime value tracking, and predictive modeling to maximize per-customer revenue.',\n      },\n      'offer-value-2': {\n        impact: 'Systematic upsells can increase revenue 30-50% without acquiring new customers. Missing this means you\\'re doing the hard work (customer acquisition) without maximizing the return.',\n        diy: 'List complementary services/products. Create simple upsell scripts. Train team to mention relevant add-ons during sales process.',\n        professional: 'KPI Digital designs AI-powered upsell engines that recommend perfect timing and products based on customer data, purchase history, and behavioral patterns.',\n      },\n      'cash-collected-1': {\n        impact: 'Cash flow kills more businesses than profitability issues. Not tracking collection vs. contract means you might be profitable on paper but broke in reality.',\n        diy: 'Track invoiced amount vs. collected amount monthly. Identify patterns in payment delays. Negotiate better payment terms with high-risk clients.',\n        professional: 'KPI Digital implements automated invoicing systems with payment reminders, multiple payment options, and cash flow forecasting that improves collection rates 25-40%.',\n      },\n      'cash-collected-2': {\n        impact: 'Outstanding receivables are dead money. Without tracking and follow-up systems, you\\'re essentially giving interest-free loans to clients while struggling with cash flow.',\n        diy: 'Create an aging receivables report. Implement systematic follow-up (7 days, 14 days, 30 days overdue). Consider payment plans for large amounts.',\n        professional: 'KPI Digital deploys automated collections workflows with AI-powered payment prediction, smart follow-up sequences, and integrated payment solutions.',\n      },\n      'bottleneck-1': {\n        impact: 'Your bottleneck determines your growth ceiling. Until you identify and fix it, all other efforts are limited by this constraint. You\\'re working hard but not seeing proportional results.',\n        diy: 'Map your business process from lead to cash. Time each step. The longest/most problematic step is usually your bottleneck.',\n        professional: 'KPI Digital conducts comprehensive business analysis with process mapping, data analytics, and constraint identification to pinpoint exact bottlenecks and growth opportunities.',\n      },\n      'bottleneck-2': {\n        impact: 'This question determines your growth strategy. Wrong focus (getting more leads when conversion is the issue) wastes time and money. Data-driven focus multiplies results.',\n        diy: 'Calculate: Lead volume × Conversion rate × Average price. Determine which lever (more leads, better conversion, or higher prices) has the most improvement potential.',\n        professional: 'KPI Digital provides complete business intelligence dashboards that automatically identify your highest-leverage opportunities and guide strategic decision-making.',\n      },\n    },\n    systems: {\n      'sales-leads-1': {\n        impact: 'Manual lead management means inconsistent follow-up, lost opportunities, and sales team burnout. Every manual process is a point of failure and limits your scale.',\n        diy: 'Implement a basic CRM (HubSpot free tier or similar). Create simple lead scoring rules based on engagement level.',\n        professional: 'KPI Digital builds AI-powered lead scoring systems that automatically prioritize leads, trigger follow-up sequences, and optimize team focus on highest-probability opportunities.',\n      },\n      'sales-leads-2': {\n        impact: 'Without CRM automation, your team wastes 30-40% of their time on admin work instead of selling. Data entry errors lead to lost follow-ups and missed revenue.',\n        diy: 'Use CRM automation features: auto-logging emails, task creation, basic workflows. Start with one process (like new lead assignment).',\n        professional: 'KPI Digital creates complete sales automation systems: lead capture, enrichment, routing, follow-up sequences, and pipeline management with AI-powered insights.',\n      },\n      'sales-leads-3': {\n        impact: 'Call recording provides training gold, protects against disputes, and identifies winning sales patterns. Without it, you\\'re flying blind on your most important revenue activity.',\n        diy: 'Use tools like Zoom recording or basic call recording apps. Review calls weekly to identify patterns and improve scripts.',\n        professional: 'KPI Digital implements AI call analysis that automatically identifies successful patterns, objection handling, sentiment analysis, and provides real-time coaching.',\n      },\n      'sales-leads-4': {\n        impact: 'Manual proposal generation costs hours per proposal and creates inconsistency. Slow proposals lose deals to faster competitors. Each delay is lost revenue.',\n        diy: 'Create proposal templates in Google Docs or Canva. Build a library of reusable sections. Use merge fields for personalization.',\n        professional: 'KPI Digital builds automated proposal systems that generate customized proposals in minutes, track engagement, and integrate with e-signature and payment systems.',\n      },\n      'sales-leads-5': {\n        impact: 'Without pipeline tracking, you can\\'t forecast revenue, identify stuck deals, or optimize your sales process. You\\'re reactive instead of proactive.',\n        diy: 'Use a simple CRM or spreadsheet to track deal stages, values, and close dates. Review pipeline weekly to identify patterns.',\n        professional: 'KPI Digital implements AI-powered pipeline management with predictive forecasting, deal health scoring, and automated next-step recommendations.',\n      },\n      'marketing-1': {\n        impact: 'Manual content creation limits your marketing reach and consistency. Without AI assistance, you\\'re competing with one hand tied behind your back.',\n        diy: 'Use ChatGPT or similar tools to draft content. Create templates and style guides for consistency.',\n        professional: 'KPI Digital builds custom AI content engines trained on your brand voice, automating social media, email campaigns, and website content at scale.',\n      },\n      'marketing-2': {\n        impact: 'Without predictive analytics, you\\'re always looking backward. You miss opportunities to capitalize on trends or prevent problems before they impact revenue.',\n        diy: 'Track historical patterns in spreadsheets. Look for seasonal trends and leading indicators of performance.',\n        professional: 'KPI Digital deploys AI-powered analytics that predict campaign performance, identify growth opportunities, and automatically optimize marketing spend.',\n      },\n      'marketing-3': {\n        impact: 'Without 24/7 lead response, you lose deals to faster competitors. Every hour delay in response reduces conversion rates by 30-50%.',\n        diy: 'Set up basic chatbot using tools like ManyChat or Chatfuel. Create FAQ responses and simple qualification flows.',\n        professional: 'KPI Digital creates intelligent AI chatbots that qualify leads, book appointments, answer complex questions, and seamlessly hand off to your team.',\n      },\n      'marketing-4': {\n        impact: 'Not tracking ROI means you\\'re gambling with marketing budget. You might be overspending on poor channels while starving winners.',\n        diy: 'Track spend vs revenue by channel in spreadsheets. Calculate cost per acquisition and customer lifetime value manually.',\n        professional: 'KPI Digital implements advanced attribution systems with multi-touch tracking, real-time ROI dashboards, and automatic budget optimization.',\n      },\n      'marketing-5': {\n        impact: 'Email marketing automation is 50x more cost-effective than manual outreach. Without it, you\\'re leaving massive revenue on the table.',\n        diy: 'Use Mailchimp or similar tools. Create basic welcome sequences and monthly newsletters. Segment by customer behavior.',\n        professional: 'KPI Digital builds sophisticated email automation with AI-powered segmentation, personalization, and send-time optimization that typically 3-5x email revenue.',\n      },\n      'delivery-1': {\n        impact: 'Manual onboarding creates inconsistent client experiences and eats team time. Each new client becomes a project instead of a process.',\n        diy: 'Create onboarding checklists and templates. Use tools like Trello or Asana to track client setup progress.',\n        professional: 'KPI Digital builds automated onboarding workflows with client portals, progress tracking, and AI-powered personalization for exceptional experiences at scale.',\n      },\n      'delivery-2': {\n        impact: 'Without AI quality control, you rely on human oversight which is inconsistent and doesn\\'t scale. Quality issues damage reputation and increase costs.',\n        diy: 'Create detailed checklists and SOPs. Implement peer review processes. Track common errors and create prevention strategies.',\n        professional: 'KPI Digital implements AI-powered quality systems that automatically check work, identify issues before delivery, and provide real-time coaching.',\n      },\n      'delivery-3': {\n        impact: 'Client portals reduce support requests by 60-80% and improve satisfaction. Without them, clients feel in the dark and bombard you with questions.',\n        diy: 'Use tools like Google Drive with organized folder structures. Create weekly update emails with project status.',\n        professional: 'KPI Digital builds custom client portals with real-time updates, document sharing, messaging, and self-service capabilities.',\n      },\n      'delivery-4': {\n        impact: 'Manual scheduling wastes 5-10 hours per week and creates conflicts. Every scheduling error damages client relationships.',\n        diy: 'Use Calendly or similar tools. Set up team scheduling policies. Block focus time to prevent over-booking.',\n        professional: 'KPI Digital creates intelligent scheduling systems with AI optimization, conflict prevention, travel time calculation, and automatic rescheduling.',\n      },\n      'delivery-5': {\n        impact: 'Feedback collection is the fastest path to improvement. Without systematic collection and analysis, you\\'re guessing at what clients want.',\n        diy: 'Send post-project surveys via Google Forms. Track NPS scores. Review feedback monthly and identify patterns.',\n        professional: 'KPI Digital implements automated feedback systems with AI sentiment analysis, trend identification, and action item generation.',\n      },\n      'finance-1': {\n        impact: 'AI forecasting can predict cash flow 90+ days out with 85-95% accuracy. Without it, you\\'re constantly surprised by cash shortages.',\n        diy: 'Build cash flow projections in Excel based on historical patterns. Update weekly with actual vs projected.',\n        professional: 'KPI Digital deploys AI forecasting engines that predict revenue, expenses, and cash flow with scenario planning and early warning systems.',\n      },\n      'finance-2': {\n        impact: 'Manual invoicing delays cash collection and creates errors. Each manual invoice costs 15-30 minutes of admin time.',\n        diy: 'Use QuickBooks or Xero with automatic recurring invoices. Set up payment reminders and online payment options.',\n        professional: 'KPI Digital builds complete invoicing automation with smart payment terms, automated follow-up, and integration with project delivery systems.',\n      },\n      'finance-3': {\n        impact: 'Fraud and errors cost businesses 5% of revenue on average. AI detection catches issues human eyes miss, protecting your bottom line.',\n        diy: 'Create expense approval workflows. Regularly review reports for unusual patterns. Use segregation of duties.',\n        professional: 'KPI Digital implements AI-powered anomaly detection that identifies fraud, errors, and inefficiencies automatically with real-time alerts.',\n      },\n      'finance-4': {\n        impact: 'Manual expense tracking wastes time and creates poor data for decision-making. Real-time tracking reveals spending patterns and savings opportunities.',\n        diy: 'Use expense tracking apps like Expensify. Categorize all expenses. Review spending weekly by category.',\n        professional: 'KPI Digital creates automated expense management with receipt scanning, categorization, budget alerts, and spending optimization recommendations.',\n      },\n      'people-1': {\n        impact: 'Team productivity tools can increase output 30-50% while reducing burnout. Without them, you\\'re asking people to compete with inadequate tools.',\n        diy: 'Implement project management tools (Asana, Monday). Use time tracking. Create productivity dashboards.',\n        professional: 'KPI Digital deploys AI productivity suites with smart task prioritization, workload balancing, and burnout prevention algorithms.',\n      },\n      'people-2': {\n        impact: 'Data-driven performance tracking removes bias and creates fairness. It also identifies top performers and improvement opportunities others miss.',\n        diy: 'Track key metrics per person. Create monthly scorecards. Hold regular one-on-ones to discuss performance data.',\n        professional: 'KPI Digital builds performance analytics systems with AI-powered insights, peer benchmarking, and automated coaching recommendations.',\n      },\n      'people-3': {\n        impact: 'Automated training scales your expertise without your time. Each manual training session costs hours you could spend on revenue activities.',\n        diy: 'Record training videos. Create SOPs and checklists. Use tools like Loom for screen recordings.',\n        professional: 'KPI Digital creates AI-powered training platforms with personalized learning paths, skill assessments, and just-in-time training delivery.',\n      },\n      'people-4': {\n        impact: 'Automated workflows eliminate 60-80% of repetitive tasks. Your team can focus on high-value work instead of admin.',\n        diy: 'Document repetitive processes. Use Zapier or Make.com for simple automations. Start with email and data entry tasks.',\n        professional: 'KPI Digital builds comprehensive workflow automation with AI-powered decision making, exception handling, and continuous optimization.',\n      },\n      'people-5': {\n        impact: 'Skills gap analysis reveals training needs before performance suffers. Without it, you discover gaps when mistakes happen.',\n        diy: 'Create skills matrices. Have team members self-assess. Identify training priorities based on business needs.',\n        professional: 'KPI Digital implements AI skills analysis that identifies gaps, recommends training, tracks skill development, and predicts future needs.',\n      },\n      'tech-1': {\n        impact: 'API integration eliminates manual data transfer and reduces errors by 95%. Each manual transfer is a potential mistake and wasted time.',\n        diy: 'Use Zapier or Make.com for no-code integrations. Connect your most-used tools first (CRM to email, accounting to banking).',\n        professional: 'KPI Digital builds custom API integrations with error handling, data validation, and real-time synchronization across all your systems.',\n      },\n      'tech-2': {\n        impact: 'Dirty data costs businesses 15-25% of revenue through bad decisions and inefficiency. AI cleaning ensures reliable insights.',\n        diy: 'Create data entry standards. Regularly audit for duplicates and errors. Use Excel functions to standardize formats.',\n        professional: 'KPI Digital deploys AI data cleaning systems that automatically identify, correct, and prevent data quality issues in real-time.',\n      },\n      'tech-3': {\n        impact: 'Predictive dashboards turn data into foresight. You can prevent problems and seize opportunities instead of reacting to events.',\n        diy: 'Build dashboards in Google Sheets or Tableau. Track leading indicators. Create if-then alerts for key thresholds.',\n        professional: 'KPI Digital creates AI-powered predictive dashboards with machine learning forecasts, anomaly detection, and automated action recommendations.',\n      },\n      'tech-4': {\n        impact: 'Without disaster recovery, a system failure could destroy your business. Each hour of downtime costs revenue and damages reputation.',\n        diy: 'Implement cloud backups (Google Drive, Dropbox). Document system dependencies. Create manual recovery procedures.',\n        professional: 'KPI Digital builds comprehensive disaster recovery systems with automated backups, failover systems, and guaranteed recovery time objectives.',\n      },\n    },\n    growth: {\n      'market-pos-1': {\n        impact: 'Without knowing your market position, you can\\'t develop effective growth strategies. You might be fighting for scraps in a saturated market when blue ocean opportunities exist.',\n        diy: 'Research competitors, estimate market size, calculate your share. Identify underserved niches or geographic areas.',\n        professional: 'KPI Digital conducts comprehensive market analysis with competitive intelligence, market sizing, positioning strategy, and growth opportunity identification.',\n      },\n      'market-pos-2': {\n        impact: 'Generic positioning means competing on price. Clear differentiation commands premium pricing and attracts ideal clients who value your unique strengths.',\n        diy: 'List your unique strengths. Survey customers on why they chose you. Create a simple unique value proposition statement.',\n        professional: 'KPI Digital develops complete positioning strategy with brand differentiation, messaging frameworks, and go-to-market plans that establish market leadership.',\n      },\n      'market-pos-3': {\n        impact: 'Consistent demand generation is the foundation of predictable growth. Without systematic lead generation, revenue is unpredictable and stressful.',\n        diy: 'Create content marketing plan. Implement basic SEO. Run consistent social media and paid advertising campaigns.',\n        professional: 'KPI Digital builds multi-channel demand generation engines with AI optimization, automated nurturing, and predictable pipeline creation.',\n      },\n      'market-pos-4': {\n        impact: 'Your unique value proposition determines premium pricing power. Generic offerings compete on price, unique solutions command premium.',\n        diy: 'Identify what makes you different. Interview your best clients. Develop clear messaging around your unique strengths.',\n        professional: 'KPI Digital creates compelling UVPs through market research, competitive analysis, and customer insight that positions you as the obvious choice.',\n      },\n      'market-pos-5': {\n        impact: 'Strategic partnerships can 10x your reach overnight. Without them, you\\'re limited to organic growth which is slow and expensive.',\n        diy: 'Identify complementary businesses. Reach out with partnership proposals. Start with simple referral agreements.',\n        professional: 'KPI Digital develops strategic partnership strategies with joint ventures, co-marketing, and revenue-sharing models that accelerate growth.',\n      },\n      'ops-scale-1': {\n        impact: 'Undocumented processes can\\'t be improved or delegated. They live in people\\'s heads, creating single points of failure.',\n        diy: 'Document your core processes using simple flowcharts. Create step-by-step SOPs. Store in accessible shared drive.',\n        professional: 'KPI Digital creates comprehensive process documentation with video tutorials, decision trees, and automated workflow systems.',\n      },\n      'ops-scale-2': {\n        impact: 'Team capacity determines growth ceiling. Without scalable team structure, you hit a growth wall when you run out of people.',\n        diy: 'Forecast team needs based on revenue targets. Create hiring plans. Implement cross-training to increase flexibility.',\n        professional: 'KPI Digital designs scalable organizational structures with capacity planning, hiring strategies, and succession planning.',\n      },\n      'ops-scale-3': {\n        impact: 'Inconsistent quality damages reputation and limits growth. Each quality issue costs 10x to fix than preventing upfront.',\n        diy: 'Create quality checklists. Implement peer review. Track defects and implement corrective actions.',\n        professional: 'KPI Digital builds quality management systems with AI monitoring, continuous improvement processes, and certification-ready documentation.',\n      },\n      'ops-scale-4': {\n        impact: 'Supply chain or vendor issues can halt operations overnight. Optimization and backup suppliers protect against disruption.',\n        diy: 'Map your critical suppliers. Identify backup options. Negotiate better terms based on volume forecasts.',\n        professional: 'KPI Digital optimizes supply chain with vendor management systems, risk mitigation, and strategic sourcing strategies.',\n      },\n      'ops-scale-5': {\n        impact: 'Technology infrastructure determines your growth ceiling. Outdated systems limit speed, create errors, and frustrate teams.',\n        diy: 'Audit current systems. Identify bottlenecks. Upgrade most critical systems first based on ROI.',\n        professional: 'KPI Digital designs future-ready technology stacks with scalability, integration, and automation at the core.',\n      },\n      'finance-health-1': {\n        impact: 'Profitability is the difference between sustainable growth and eventual failure. Without strong margins, growth actually increases risk.',\n        diy: 'Calculate gross and net profit margins. Identify most profitable services. Focus on improving margins before scaling.',\n        professional: 'KPI Digital implements profitability analytics with service-level analysis, pricing optimization, and cost reduction strategies.',\n      },\n      'finance-health-2': {\n        impact: 'Cash reserves are your growth fuel and safety net. Without them, one bad month can destroy years of work.',\n        diy: 'Build 3-6 months operating expenses in reserve. Automate savings from each payment. Track cash runway monthly.',\n        professional: 'KPI Digital creates cash management strategies with automated reserves, investment optimization, and capital efficiency planning.',\n      },\n      'finance-health-3': {\n        impact: 'Access to capital determines growth speed. Without funding options, you\\'re limited to organic growth which may be too slow.',\n        diy: 'Build relationships with lenders. Maintain strong personal credit. Document financials to become \"bankable\".',\n        professional: 'KPI Digital connects you with capital sources, prepares funding materials, and negotiates optimal terms for growth capital.',\n      },\n      'finance-health-4': {\n        impact: 'Financial metrics visibility enables informed decisions. Flying blind leads to cash crunches, missed opportunities, and poor strategic choices.',\n        diy: 'Create monthly financial dashboard. Track key metrics: gross margin, net profit, cash flow, DSO, inventory turns.',\n        professional: 'KPI Digital builds comprehensive financial analytics with real-time dashboards, variance analysis, and predictive modeling.',\n      },\n      'finance-health-5': {\n        impact: 'Pricing strategy determines profitability and positioning. Underpricing leaves money on the table, overpricing loses deals.',\n        diy: 'Research competitor pricing. Calculate true costs including overhead. Test price increases with new customers.',\n        professional: 'KPI Digital develops data-driven pricing strategies with value-based pricing, dynamic pricing, and continuous optimization.',\n      },\n      'team-lead-1': {\n        impact: 'Hiring capability determines growth speed. Can\\'t grow faster than you can hire and train quality team members.',\n        diy: 'Create hiring pipeline. Develop interview process. Build employer brand through content and culture.',\n        professional: 'KPI Digital creates recruitment systems with talent pipelines, assessment frameworks, and employer branding strategies.',\n      },\n      'team-lead-2': {\n        impact: 'Effective delegation multiplies your impact. Without it, you\\'re the bottleneck limiting business growth.',\n        diy: 'Identify tasks only you can do. Train team on everything else. Implement approval workflows with clear authority levels.',\n        professional: 'KPI Digital develops delegation frameworks with decision-making authority matrices, training systems, and accountability structures.',\n      },\n      'team-lead-3': {\n        impact: 'Leadership skills determine how well your team performs. Poor leadership creates turnover, low morale, and mediocre results.',\n        diy: 'Invest in leadership training. Read management books. Get coaching or join peer groups for accountability.',\n        professional: 'KPI Digital provides executive coaching, leadership development programs, and peer advisory groups for continuous growth.',\n      },\n      'team-lead-4': {\n        impact: 'Team alignment determines execution speed. Misaligned teams work hard but pull in different directions, wasting effort.',\n        diy: 'Set clear goals and metrics. Hold regular team meetings. Use project management tools for transparency.',\n        professional: 'KPI Digital implements alignment systems with OKRs, communication frameworks, and performance management that drive execution.',\n      },\n      'team-lead-5': {\n        impact: 'Culture and retention directly impact profitability. Replacing team members costs 6-9 months salary plus lost productivity.',\n        diy: 'Conduct stay interviews. Address pain points. Create career paths. Celebrate wins and recognize contributions.',\n        professional: 'KPI Digital builds high-performance cultures with engagement systems, retention strategies, and leadership development.',\n      },\n      'strategic-plan-1': {\n        impact: 'Without growth targets, you drift instead of drive. Specific targets focus effort and enable measurement.',\n        diy: 'Set 1-year and 3-year revenue targets. Break down into quarterly milestones. Track progress monthly.',\n        professional: 'KPI Digital creates comprehensive growth strategies with market analysis, competitive positioning, and detailed execution roadmaps.',\n      },\n      'strategic-plan-2': {\n        impact: 'Market expansion opportunities may offer faster growth than current markets. Without analysis, you miss these opportunities.',\n        diy: 'Research adjacent markets. Talk to clients about their other needs. Test new offerings with existing clients.',\n        professional: 'KPI Digital conducts market expansion analysis with sizing, entry strategies, and risk mitigation for new market success.',\n      },\n      'strategic-plan-3': {\n        impact: 'Innovation pipeline ensures future revenue streams. Without it, competitors will eventually make your offerings obsolete.',\n        diy: 'Schedule quarterly innovation sessions. Track industry trends. Test new ideas with small pilot programs.',\n        professional: 'KPI Digital builds innovation frameworks with idea generation, validation processes, and systematic new product development.',\n      },\n      'strategic-plan-4': {\n        impact: 'Competitive strategy determines market share gains. Without strategy, you react to competitors instead of out-maneuvering them.',\n        diy: 'Monitor competitor moves. Identify their weaknesses. Double down on your strengths where they\\'re weak.',\n        professional: 'KPI Digital develops competitive strategies with market intelligence, positioning tactics, and systematic competitive advantage building.',\n      },\n      'strategic-plan-5': {\n        impact: 'Strategic review ensures you\\'re on track and adapting to change. Without it, you execute outdated strategies in changed markets.',\n        diy: 'Conduct quarterly strategy reviews. Assess what\\'s working. Adjust tactics based on results and market changes.',\n        professional: 'KPI Digital facilitates strategic planning sessions with market analysis, scenario planning, and agile strategy development.',\n      },\n    },\n  };\n\n  return insights[calculatorType]?.[questionId] || {\n    impact: 'This capability directly impacts your business performance and competitive position. Understanding and improving this area creates measurable advantages in efficiency, profitability, or growth potential.',\n    diy: 'Begin by assessing your current state in this area. Document what\\'s working and what isn\\'t. Research best practices and implement improvements incrementally while measuring results.',\n    professional: 'KPI Digital can conduct a comprehensive analysis of this area, benchmark against industry leaders, and implement proven systems with ongoing optimization to maximize impact.',\n  };\n};\n\nexport function PDFReport({\n  calculatorType,\n  score,\n  maxScore,\n  tier,\n  categories,\n  userEmail,\n  date,\n  questions,\n}: PDFReportProps) {\n  const calculatorTitle = getCalculatorTitle(calculatorType);\n  const percentage = Math.round((score / maxScore) * 100);\n\n  const groupedQuestions = questions.reduce((acc, q) => {\n    if (!acc[q.category]) {\n      acc[q.category] = [];\n    }\n    acc[q.category].push(q);\n    return acc;\n  }, {} as Record<string, typeof questions>);\n\n  return (\n    <Document>\n      {/* Cover Page */}\n      <Page size=\"A4\" style={styles.coverPage}>\n        <View style={{ alignItems: 'center' }}>\n          <Image src={logoPath} style={{ width: 100, height: 100, marginBottom: 30 }} />\n          <Text style={styles.coverSubtitle}>{calculatorTitle}</Text>\n          \n          <View style={styles.coverInfo}>\n            <Text style={styles.coverInfoText}>Report Generated: {date}</Text>\n            <Text style={styles.coverInfoText}>Your Score: {score}/{maxScore} ({percentage}%)</Text>\n            <Text style={styles.coverInfoText}>Assessment Tier: {tier.name}</Text>\n          </View>\n        </View>\n      </Page>\n\n      {/* Table of Contents */}\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.header}>\n          <Image src={logoPath} style={{ width: 40, height: 40 }} />\n        </View>\n\n        <Text style={styles.sectionTitle}>Table of Contents</Text>\n        \n        <View style={{ marginTop: 20 }}>\n          <View style={styles.tocItem}>\n            <Text style={styles.tocTitle}>Executive Summary</Text>\n            <Text style={styles.tocPage}>3</Text>\n          </View>\n          \n          <View style={styles.tocItem}>\n            <Text style={styles.tocTitle}>Your Assessment Results</Text>\n            <Text style={styles.tocPage}>3</Text>\n          </View>\n\n          <View style={styles.tocItem}>\n            <Text style={styles.tocTitle}>Question-by-Question Analysis</Text>\n            <Text style={styles.tocPage}>4</Text>\n          </View>\n\n          {Object.keys(groupedQuestions).map((category, idx) => (\n            <View key={category} style={[styles.tocItem, { marginLeft: 15 }]}>\n              <Text style={styles.tocTitle}>{category}</Text>\n              <Text style={styles.tocPage}>{4 + idx}</Text>\n            </View>\n          ))}\n\n          <View style={styles.tocItem}>\n            <Text style={styles.tocTitle}>Next Steps & Recommendations</Text>\n            <Text style={styles.tocPage}>{4 + Object.keys(groupedQuestions).length}</Text>\n          </View>\n\n          <View style={styles.tocItem}>\n            <Text style={styles.tocTitle}>Work With KPI Digital</Text>\n            <Text style={styles.tocPage}>{5 + Object.keys(groupedQuestions).length}</Text>\n          </View>\n        </View>\n\n        <Text style={styles.pageNumber}>Page 2</Text>\n      </Page>\n\n      {/* Executive Summary */}\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.header}>\n          <Image src={logoPath} style={{ width: 40, height: 40 }} />\n        </View>\n\n        <Text style={styles.sectionTitle}>Executive Summary</Text>\n        \n        <View style={styles.scoreCard}>\n          <View style={styles.scoreRow}>\n            <Text style={styles.scoreLabel}>Your Score:</Text>\n            <Text style={styles.scoreValue}>{score} / {maxScore} ({percentage}%)</Text>\n          </View>\n          <View style={styles.scoreRow}>\n            <Text style={styles.scoreLabel}>Assessment Tier:</Text>\n            <Text style={styles.scoreValue}>{tier.name}</Text>\n          </View>\n          <View style={styles.scoreRow}>\n            <Text style={styles.scoreLabel}>Report Date:</Text>\n            <Text style={styles.scoreValue}>{date}</Text>\n          </View>\n        </View>\n\n        <Text style={styles.subSectionTitle}>{tier.name}: {tier.description}</Text>\n        <Text style={styles.text}>{tier.impact}</Text>\n\n        <Text style={styles.subSectionTitle}>How This Affects Your Business:</Text>\n        {tier.actions.map((action, idx) => (\n          <View key={idx} style={styles.bulletPoint}>\n            <View style={styles.bullet} />\n            <Text style={styles.bulletText}>{action}</Text>\n          </View>\n        ))}\n\n        <Text style={styles.subSectionTitle}>Category Breakdown:</Text>\n        {categories.map((cat, idx) => {\n          const catPercentage = Math.round((cat.score / cat.maxScore) * 100);\n          return (\n            <View key={idx} style={styles.scoreRow}>\n              <Text style={styles.scoreLabel}>{cat.name}:</Text>\n              <Text style={styles.scoreValue}>{cat.score}/{cat.maxScore} ({catPercentage}%)</Text>\n            </View>\n          );\n        })}\n\n        <Text style={styles.pageNumber}>Page 3</Text>\n      </Page>\n\n      {/* Question Analysis by Category */}\n      {Object.entries(groupedQuestions).map(([category, categoryQuestions], categoryIdx) => (\n        <Page key={category} size=\"A4\" style={styles.page}>\n          <View style={styles.header}>\n            <Text style={styles.headerText}>KPI DIGITAL</Text>\n          </View>\n\n          <View style={styles.categoryHeader}>\n            <Text style={styles.categoryTitle}>{category}</Text>\n            <Text style={styles.categoryScore}>\n              Category Score: {categories.find(c => c.name === category)?.score || 0} / {categories.find(c => c.name === category)?.maxScore || 0}\n            </Text>\n          </View>\n\n          {categoryQuestions.map((q, qIdx) => {\n            const insights = getQuestionInsights(calculatorType, q.id);\n            \n            return (\n              <View key={q.id} style={styles.questionCard}>\n                <Text style={styles.questionNumber}>Question {categoryQuestions.indexOf(q) + 1}</Text>\n                <Text style={styles.questionText}>{q.question}</Text>\n                <Text style={styles.answerText}>Your Answer: {q.selectedAnswer} (Score: {q.score})</Text>\n                \n                <View style={styles.impactBox}>\n                  <Text style={styles.impactTitle}>Business Impact:</Text>\n                  <Text style={styles.impactText}>{insights.impact}</Text>\n                </View>\n\n                <View style={styles.solutionBox}>\n                  <Text style={styles.solutionTitle}>DIY Approach:</Text>\n                  <Text style={styles.solutionText}>{insights.diy}</Text>\n                </View>\n\n                <View style={[styles.solutionBox, { backgroundColor: '#E0F2FE', marginTop: 6 }]}>\n                  <Text style={[styles.solutionTitle, { color: '#0C4A6E' }]}>Professional Solution (KPI Digital):</Text>\n                  <Text style={[styles.solutionText, { color: '#0C4A6E' }]}>{insights.professional}</Text>\n                </View>\n              </View>\n            );\n          })}\n\n          <Text style={styles.pageNumber}>Page {4 + categoryIdx}</Text>\n        </Page>\n      ))}\n\n      {/* Next Steps & Recommendations */}\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.header}>\n          <Image src={logoPath} style={{ width: 40, height: 40 }} />\n        </View>\n\n        <Text style={styles.sectionTitle}>Your Next Steps</Text>\n        <Text style={styles.text}><Text style={styles.boldText}>Immediate Action: </Text>{tier.nextSteps}</Text>\n\n        <Text style={styles.subSectionTitle}>Recommended Implementation Path:</Text>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}>Start with your lowest-scoring categories - these represent your biggest opportunities</Text>\n        </View>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}>Implement DIY solutions for quick wins while planning professional systems</Text>\n        </View>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}>Focus on one category at a time to avoid overwhelm and ensure proper implementation</Text>\n        </View>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}>Track your progress monthly and reassess quarterly</Text>\n        </View>\n\n        <View style={styles.ctaBox}>\n          <Text style={styles.ctaTitle}>Ready to Transform Your Business?</Text>\n          <Text style={styles.ctaText}>\n            KPI Digital specializes in helping trades businesses implement the exact systems and strategies outlined in this report.\n          </Text>\n          <Text style={[styles.ctaText, { marginTop: 15 }]}>\n            We've helped hundreds of trades businesses achieve clarity, build systems, and unlock sustainable growth.\n          </Text>\n          <Text style={[styles.ctaText, { marginTop: 15, fontFamily: 'Helvetica-Bold', fontSize: 12 }]}>\n            Contact Louis at louis@kpidigital.com.au\n          </Text>\n          <Text style={[styles.ctaText, { marginTop: 5 }]}>\n            Let's discuss how we can accelerate your business transformation.\n          </Text>\n        </View>\n\n        <Text style={styles.pageNumber}>Page {4 + Object.keys(groupedQuestions).length}</Text>\n      </Page>\n\n      {/* Final Page - Work With Us */}\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.header}>\n          <Image src={logoPath} style={{ width: 40, height: 40 }} />\n        </View>\n\n        <Text style={styles.sectionTitle}>Work With KPI Digital</Text>\n        \n        <Text style={styles.subSectionTitle}>Why Choose KPI Digital?</Text>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}><Text style={styles.boldText}>Trades-Specific Expertise:</Text> We understand your industry's unique challenges and opportunities</Text>\n        </View>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}><Text style={styles.boldText}>Proven Systems:</Text> Our solutions are battle-tested across hundreds of trades businesses</Text>\n        </View>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}><Text style={styles.boldText}>Data-Driven Results:</Text> We focus on metrics that matter - revenue, profit, and cash flow</Text>\n        </View>\n        <View style={styles.bulletPoint}>\n          <View style={styles.bullet} />\n          <Text style={styles.bulletText}><Text style={styles.boldText}>End-to-End Support:</Text> From strategy to implementation to ongoing optimization</Text>\n        </View>\n\n        <Text style={styles.subSectionTitle}>Our Services Include:</Text>\n        <Text style={styles.text}><Text style={styles.boldText}>• Business Clarity Programs:</Text> Get complete visibility into your numbers and identify your biggest opportunities</Text>\n        <Text style={styles.text}><Text style={styles.boldText}>• Systems Implementation:</Text> Build automated workflows that run your business while you focus on growth</Text>\n        <Text style={styles.text}><Text style={styles.boldText}>• Growth Acceleration:</Text> Scale profitably with proven strategies and systems</Text>\n        <Text style={styles.text}><Text style={styles.boldText}>• Technology Integration:</Text> Implement AI-powered tools that give you competitive advantage</Text>\n\n        <Text style={styles.subSectionTitle}>What to Expect:</Text>\n        <Text style={styles.text}>\n          Our engagement starts with a deep-dive analysis of your business, followed by a custom implementation roadmap. \n          We work alongside you to build and optimize systems, ensuring sustainable results long after our engagement.\n        </Text>\n\n        <Text style={styles.subSectionTitle}>Next Steps:</Text>\n        <Text style={styles.text}>\n          1. Email Louis at <Text style={[styles.boldText, { color: BLACK }]}>louis@kpidigital.com.au</Text> with this report\n        </Text>\n        <Text style={styles.text}>\n          2. Schedule a complimentary strategy session to discuss your specific situation\n        </Text>\n        <Text style={styles.text}>\n          3. Receive a custom proposal outlining how we'll help you achieve your goals\n        </Text>\n\n        <View style={[styles.ctaBox, { marginTop: 30 }]}>\n          <Text style={[styles.ctaText, { fontSize: 11 }]}>\n            Your assessment tier: <Text style={styles.boldText}>{tier.name}</Text>\n          </Text>\n          <Text style={[styles.ctaText, { marginTop: 10 }]}>\n            This report was generated on {date} for {userEmail}\n          </Text>\n          <Text style={[styles.ctaText, { marginTop: 15, fontSize: 8 }]}>\n            © {new Date().getFullYear()} KPI Digital. All rights reserved.\n          </Text>\n        </View>\n\n        <Text style={styles.pageNumber}>Page {5 + Object.keys(groupedQuestions).length}</Text>\n      </Page>\n    </Document>\n  );\n}\n","size_bytes":51941},"client/src/pages/ClarityCalculator.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { ArrowRight, ArrowLeft, CheckCircle, AlertTriangle, XCircle, Target, Download } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { PDFReport } from \"@/components/PDFReport\";\nimport { EmailCaptureModal } from \"@/components/EmailCaptureModal\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport Navigation from \"@/components/Navigation\";\nimport { updateSEO } from \"@/utils/seo\";\n\ninterface Question {\n  id: string;\n  category: string;\n  question: string;\n  options: { value: string; label: string; score: number }[];\n}\n\nconst questions: Question[] = [\n  {\n    id: \"lead-gen-1\",\n    category: \"Lead Generation\",\n    question: \"How many new leads are coming in each week/month?\",\n    options: [\n      { value: \"no-idea\", label: \"I have no idea\", score: 0 },\n      { value: \"rough-guess\", label: \"I have a rough guess\", score: 1 },\n      { value: \"tracked\", label: \"I track this regularly\", score: 2 },\n      { value: \"tracked-optimized\", label: \"I track and optimize this\", score: 3 }\n    ]\n  },\n  {\n    id: \"lead-gen-2\",\n    category: \"Lead Generation\",\n    question: \"What are your lead sources and cost per lead?\",\n    options: [\n      { value: \"unknown\", label: \"I don't know my sources or costs\", score: 0 },\n      { value: \"sources-known\", label: \"I know my sources but not costs\", score: 1 },\n      { value: \"costs-tracked\", label: \"I track both sources and costs\", score: 2 },\n      { value: \"optimized\", label: \"I actively optimize ROI by source\", score: 3 }\n    ]\n  },\n  {\n    id: \"lead-engage-1\",\n    category: \"Lead Engagement\",\n    question: \"What % of leads book a call/demo/meeting?\",\n    options: [\n      { value: \"no-tracking\", label: \"I don't track this\", score: 0 },\n      { value: \"estimate\", label: \"I have a rough estimate\", score: 1 },\n      { value: \"tracked\", label: \"I track this metric\", score: 2 },\n      { value: \"optimized\", label: \"I track and actively improve this\", score: 3 }\n    ]\n  },\n  {\n    id: \"lead-engage-2\",\n    category: \"Lead Engagement\",\n    question: \"Do you track show-up rates and no-shows?\",\n    options: [\n      { value: \"no\", label: \"No, I don't track this\", score: 0 },\n      { value: \"sometimes\", label: \"I notice but don't track formally\", score: 1 },\n      { value: \"tracked\", label: \"Yes, I track show rates\", score: 2 },\n      { value: \"managed\", label: \"Yes, and I have follow-up systems\", score: 3 }\n    ]\n  },\n  {\n    id: \"sales-conv-1\",\n    category: \"Sales Conversion\",\n    question: \"What is your close rate (calls → sales)?\",\n    options: [\n      { value: \"unknown\", label: \"I don't know\", score: 0 },\n      { value: \"rough-idea\", label: \"I have a rough idea\", score: 1 },\n      { value: \"tracked\", label: \"I track this regularly\", score: 2 },\n      { value: \"improving\", label: \"I track and actively improve it\", score: 3 }\n    ]\n  },\n  {\n    id: \"sales-conv-2\",\n    category: \"Sales Conversion\",\n    question: \"Do you have a repeatable sales process?\",\n    options: [\n      { value: \"no\", label: \"No, it's different every time\", score: 0 },\n      { value: \"informal\", label: \"I have an informal process\", score: 1 },\n      { value: \"documented\", label: \"Yes, I have a documented process\", score: 2 },\n      { value: \"optimized\", label: \"Yes, and I continuously improve it\", score: 3 }\n    ]\n  },\n  {\n    id: \"offer-value-1\",\n    category: \"Offer Value & Deal Size\",\n    question: \"What is your average ticket size and lifetime value?\",\n    options: [\n      { value: \"unknown\", label: \"I don't know these numbers\", score: 0 },\n      { value: \"avg-known\", label: \"I know average ticket size only\", score: 1 },\n      { value: \"both-known\", label: \"I know both metrics\", score: 2 },\n      { value: \"optimizing\", label: \"I know both and actively work to increase them\", score: 3 }\n    ]\n  },\n  {\n    id: \"offer-value-2\",\n    category: \"Offer Value & Deal Size\",\n    question: \"Do you have upsell/cross-sell opportunities identified?\",\n    options: [\n      { value: \"no\", label: \"No, not really\", score: 0 },\n      { value: \"some-ideas\", label: \"I have some ideas but haven't implemented\", score: 1 },\n      { value: \"implemented\", label: \"Yes, I have some in place\", score: 2 },\n      { value: \"systematic\", label: \"Yes, I systematically upsell/cross-sell\", score: 3 }\n    ]\n  },\n  {\n    id: \"cash-collected-1\",\n    category: \"Cash Collected\",\n    question: \"How much cash is collected vs. contracted?\",\n    options: [\n      { value: \"unknown\", label: \"I don't track the difference\", score: 0 },\n      { value: \"rough-idea\", label: \"I have a rough idea\", score: 1 },\n      { value: \"tracked\", label: \"I track this closely\", score: 2 },\n      { value: \"optimized\", label: \"I track and optimize collection terms\", score: 3 }\n    ]\n  },\n  {\n    id: \"cash-collected-2\",\n    category: \"Cash Collected\",\n    question: \"Do you have outstanding receivables tracked?\",\n    options: [\n      { value: \"no\", label: \"No, I don't track receivables\", score: 0 },\n      { value: \"aware\", label: \"I'm aware but don't track systematically\", score: 1 },\n      { value: \"tracked\", label: \"Yes, I track outstanding invoices\", score: 2 },\n      { value: \"managed\", label: \"Yes, with follow-up systems in place\", score: 3 }\n    ]\n  },\n  {\n    id: \"bottleneck-1\",\n    category: \"Bottleneck Diagnosis\",\n    question: \"Can you identify your biggest business bottleneck?\",\n    options: [\n      { value: \"no-idea\", label: \"I have no idea what's holding us back\", score: 0 },\n      { value: \"guess\", label: \"I have a guess but no data\", score: 1 },\n      { value: \"identified\", label: \"Yes, I can identify it with data\", score: 2 },\n      { value: \"addressing\", label: \"Yes, and I'm actively addressing it\", score: 3 }\n    ]\n  },\n  {\n    id: \"bottleneck-2\",\n    category: \"Bottleneck Diagnosis\",\n    question: \"Do you know if you need more leads, better conversion, or higher prices?\",\n    options: [\n      { value: \"unclear\", label: \"I'm not sure which to focus on\", score: 0 },\n      { value: \"hunch\", label: \"I have a hunch but no proof\", score: 1 },\n      { value: \"data-backed\", label: \"Yes, I have data supporting my focus\", score: 2 },\n      { value: \"executing\", label: \"Yes, and I'm executing on it\", score: 3 }\n    ]\n  }\n];\n\nconst clarityTiers = [\n  {\n    name: \"No Clarity\",\n    minScore: 0,\n    maxScore: 8,\n    icon: XCircle,\n    color: \"text-red-500\",\n    bgColor: \"bg-red-500/10\",\n    borderColor: \"border-red-500/20\",\n    description: \"Flying Blind in Your Business\",\n    impact: \"You're essentially guessing every day. Without knowing your numbers, you can't make informed decisions, identify what's working, or fix what's broken. This leads to wasted ad spend, missed opportunities, and unpredictable cash flow. Every decision feels like a gamble.\",\n    actions: [\n      \"You're losing money without knowing where\",\n      \"Can't identify which marketing actually works\",\n      \"No idea why some months are good and others terrible\",\n      \"Can't scale because you don't know what to scale\"\n    ],\n    nextSteps: \"Start with basic tracking: leads per week, close rate, and average job value. Even rough numbers are better than no numbers.\"\n  },\n  {\n    name: \"Low Clarity\",\n    minScore: 9,\n    maxScore: 18,\n    icon: AlertTriangle,\n    color: \"text-orange-500\",\n    bgColor: \"bg-orange-500/10\",\n    borderColor: \"border-orange-500/20\",\n    description: \"Rough Estimates, Big Gaps\",\n    impact: \"You have some idea of your numbers, but they're rough guesses. You might track some metrics but not others, making it hard to see the full picture. You can identify obvious problems but struggle to find the real bottlenecks. Growth is inconsistent and hard to predict.\",\n    actions: [\n      \"You know you're bleeding somewhere but can't pinpoint where\",\n      \"Marketing decisions based on gut feel, not data\",\n      \"Can't confidently forecast revenue or cash flow\",\n      \"Growth happens by accident, not by design\"\n    ],\n    nextSteps: \"Implement consistent tracking systems for all key metrics. Create a simple dashboard to review weekly. Start correlating your numbers to find patterns.\"\n  },\n  {\n    name: \"Moderate Clarity\",\n    minScore: 19,\n    maxScore: 27,\n    icon: Target,\n    color: \"text-blue-500\",\n    bgColor: \"bg-blue-500/10\",\n    borderColor: \"border-blue-500/20\",\n    description: \"Numbers Tracked, Not Optimized\",\n    impact: \"You're tracking your key metrics and know your numbers. However, you're not yet using this data to actively optimize and improve. You can identify bottlenecks but may lack the systems to address them effectively. Your business is more predictable but not yet fully optimized.\",\n    actions: [\n      \"You know your numbers but aren't acting on them\",\n      \"Can identify problems but struggle to fix them\",\n      \"Business is somewhat predictable but not optimized\",\n      \"Missing opportunities to maximize every dollar\"\n    ],\n    nextSteps: \"Move from tracking to optimization. Set improvement targets for each metric. Test different approaches systematically. Build processes to address identified bottlenecks.\"\n  },\n  {\n    name: \"High Clarity\",\n    minScore: 28,\n    maxScore: 36,\n    icon: CheckCircle,\n    color: \"text-green-500\",\n    bgColor: \"bg-green-500/10\",\n    borderColor: \"border-green-500/20\",\n    description: \"Full Visibility, Continuous Improvement\",\n    impact: \"You have complete clarity on your business numbers and use them to drive decisions. You know exactly where leads come from, what they cost, conversion rates, and cash flow. You can identify and address bottlenecks quickly. Your business is predictable, scalable, and continuously improving.\",\n    actions: [\n      \"You make data-driven decisions with confidence\",\n      \"Can quickly identify and fix bottlenecks\",\n      \"Predictable revenue and cash flow\",\n      \"Able to scale profitably and systematically\"\n    ],\n    nextSteps: \"Maintain your tracking systems. Continue testing and optimizing. Help other trades businesses achieve clarity. Consider expanding your service offerings or geographic reach.\"\n  }\n];\n\nexport default function ClarityCalculator() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n  const [showResults, setShowResults] = useState(false);\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    updateSEO({\n      title: \"Business Clarity Calculator - Free Assessment | KPI Digital\",\n      description: \"Discover your business clarity score with our free 12-question assessment. Get insights on lead generation, sales conversion, and cash flow for your trades business.\",\n      ogTitle: \"Check Your Business Clarity - Free Calculator\",\n      ogDescription: \"Take our free assessment to discover where you stand with lead tracking, conversion rates, and cash flow management.\",\n    });\n  }, []);\n\n  const progress = ((currentQuestion + 1) / questions.length) * 100;\n  const isAnswered = answers[questions[currentQuestion]?.id] !== undefined;\n\n  const handleAnswer = (value: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questions[currentQuestion].id]: value\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n    }\n  };\n\n  const calculateScore = () => {\n    let totalScore = 0;\n    questions.forEach(q => {\n      const answer = answers[q.id];\n      if (answer) {\n        const option = q.options.find(opt => opt.value === answer);\n        totalScore += option?.score || 0;\n      }\n    });\n    return totalScore;\n  };\n\n  const getTier = (score: number) => {\n    return clarityTiers.find(tier => score >= tier.minScore && score <= tier.maxScore) || clarityTiers[0];\n  };\n\n  const getCategoryScores = () => {\n    const categoryMap = new Map<string, { score: number; maxScore: number }>();\n    \n    questions.forEach(q => {\n      const answer = answers[q.id];\n      if (answer) {\n        const option = q.options.find(opt => opt.value === answer);\n        const current = categoryMap.get(q.category) || { score: 0, maxScore: 0 };\n        categoryMap.set(q.category, {\n          score: current.score + (option?.score || 0),\n          maxScore: current.maxScore + 3\n        });\n      }\n    });\n\n    return Array.from(categoryMap.entries()).map(([name, data]) => ({\n      name,\n      ...data\n    }));\n  };\n\n  const handleDownloadPDF = async (userEmail: string) => {\n    try {\n      const categories = getCategoryScores();\n      const currentDate = new Date().toLocaleDateString('en-AU', { \n        year: 'numeric', \n        month: 'long', \n        day: 'numeric' \n      });\n\n      const questionsWithAnswers = questions.map(q => {\n        const answer = answers[q.id];\n        const option = q.options.find(opt => opt.value === answer);\n        return {\n          id: q.id,\n          category: q.category,\n          question: q.question,\n          selectedAnswer: option?.label || 'Not answered',\n          score: option?.score || 0,\n        };\n      });\n\n      const pdfDoc = <PDFReport\n        calculatorType=\"clarity\"\n        score={score}\n        maxScore={36}\n        tier={{\n          name: tier.name,\n          description: tier.description,\n          impact: tier.impact,\n          actions: tier.actions,\n          nextSteps: tier.nextSteps\n        }}\n        categories={categories}\n        userEmail={userEmail}\n        date={currentDate}\n        questions={questionsWithAnswers}\n      />;\n\n      const blob = await pdf(pdfDoc).toBlob();\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `KPI-Digital-Clarity-Assessment-${userEmail.split('@')[0]}.pdf`;\n      link.click();\n      URL.revokeObjectURL(url);\n\n      try {\n        await apiRequest('POST', '/api/notify-report', {\n          calculatorType: 'Clarity',\n          userEmail,\n          score,\n          maxScore: 36,\n          tierName: tier.name,\n          categories\n        });\n\n        toast({\n          title: \"Report Downloaded!\",\n          description: \"Your Clarity Assessment report has been downloaded. We've also been notified of your results.\",\n        });\n      } catch (notifyError) {\n        console.error('Notification error:', notifyError);\n        toast({\n          title: \"Report Downloaded!\",\n          description: \"Your Clarity Assessment report has been downloaded. (Note: We couldn't send the notification, but your download was successful.)\",\n        });\n      }\n    } catch (error) {\n      console.error('PDF generation error:', error);\n      throw error;\n    }\n  };\n\n  const score = calculateScore();\n  const tier = getTier(score);\n\n  if (showResults) {\n    const TierIcon = tier.icon;\n    \n    return (\n      <div className=\"min-h-screen bg-background py-24\">\n        <div className=\"container mx-auto px-4 max-w-4xl\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n                Your Clarity Assessment Results\n              </h1>\n              <p className=\"text-xl text-muted-foreground\">\n                Based on your answers, here's where you stand\n              </p>\n            </div>\n\n            <Card className={`p-8 md:p-12 mb-8 border-2 ${tier.borderColor} ${tier.bgColor}`}>\n              <div className=\"text-center mb-8\">\n                <TierIcon className={`h-20 w-20 ${tier.color} mx-auto mb-6`} />\n                <h2 className={`text-3xl md:text-4xl font-bold mb-2 ${tier.color}`}>\n                  {tier.name}\n                </h2>\n                <p className=\"text-xl text-foreground font-semibold mb-4\">\n                  {tier.description}\n                </p>\n                <div className=\"text-lg text-muted-foreground\">\n                  Your Score: <span className=\"font-bold text-foreground\">{score}</span> / 36\n                </div>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    How This Affects Your Business:\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {tier.impact}\n                  </p>\n                </div>\n\n                <div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    What This Means:\n                  </h3>\n                  <ul className=\"space-y-2\">\n                    {tier.actions.map((action, idx) => (\n                      <li key={idx} className=\"flex items-start gap-3\">\n                        <AlertTriangle className={`h-5 w-5 ${tier.color} flex-shrink-0 mt-0.5`} />\n                        <span className=\"text-muted-foreground\">{action}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"bg-background/50 rounded-lg p-6 mt-6\">\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    Next Steps:\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {tier.nextSteps}\n                  </p>\n                </div>\n              </div>\n            </Card>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                onClick={() => setShowEmailModal(true)}\n                className=\"hover-elevate active-elevate-2 group\"\n                data-testid=\"button-download-pdf\"\n              >\n                <Download className=\"mr-2 h-5 w-5\" />\n                Download Full Report\n              </Button>\n              <Link href=\"/#quote-form\" asChild>\n                <Button \n                  size=\"lg\"\n                  variant=\"outline\"\n                  data-testid=\"button-get-help\"\n                >\n                  Get Help Achieving Clarity\n                  <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n                </Button>\n              </Link>\n              <Button\n                size=\"lg\"\n                variant=\"outline\"\n                onClick={() => {\n                  setShowResults(false);\n                  setCurrentQuestion(0);\n                  setAnswers({});\n                }}\n                data-testid=\"button-retake\"\n              >\n                Retake Assessment\n              </Button>\n            </div>\n\n            <EmailCaptureModal\n              open={showEmailModal}\n              onOpenChange={setShowEmailModal}\n              onSubmit={handleDownloadPDF}\n              calculatorType=\"Clarity\"\n            />\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n\n  const question = questions[currentQuestion];\n  const selectedAnswer = answers[question.id];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <div className=\"container mx-auto px-4 max-w-3xl py-40\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Check Your Business Clarity\n            </h1>\n            <p className=\"text-xl text-muted-foreground mb-8\">\n              Answer 12 questions to discover where you stand\n            </p>\n            <Progress value={progress} className=\"h-3\" />\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Question {currentQuestion + 1} of {questions.length}\n            </p>\n          </div>\n\n          <Card className=\"p-8 md:p-10\">\n            <div className=\"mb-8\">\n              <div className=\"text-sm font-semibold text-primary mb-3\">\n                {question.category}\n              </div>\n              <h2 className=\"text-2xl font-bold text-foreground mb-6\">\n                {question.question}\n              </h2>\n\n              <RadioGroup value={selectedAnswer} onValueChange={handleAnswer}>\n                <div className=\"space-y-3\">\n                  {question.options.map((option) => (\n                    <div\n                      key={option.value}\n                      className={`flex items-center space-x-3 rounded-lg border-2 p-4 transition-all cursor-pointer hover-elevate ${\n                        selectedAnswer === option.value\n                          ? 'border-primary bg-primary/5'\n                          : 'border-border'\n                      }`}\n                      onClick={() => handleAnswer(option.value)}\n                    >\n                      <RadioGroupItem \n                        value={option.value} \n                        id={option.value}\n                        data-testid={`radio-${option.value}`}\n                      />\n                      <Label\n                        htmlFor={option.value}\n                        className=\"flex-1 cursor-pointer text-base\"\n                      >\n                        {option.label}\n                      </Label>\n                    </div>\n                  ))}\n                </div>\n              </RadioGroup>\n            </div>\n\n            <div className=\"flex justify-between gap-4\">\n              <Button\n                variant=\"outline\"\n                onClick={handleBack}\n                disabled={currentQuestion === 0}\n                data-testid=\"button-back\"\n              >\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back\n              </Button>\n              <Button\n                onClick={handleNext}\n                disabled={!isAnswered}\n                className=\"hover-elevate active-elevate-2 group\"\n                data-testid=\"button-next\"\n              >\n                {currentQuestion === questions.length - 1 ? 'See Results' : 'Next'}\n                <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300\" />\n              </Button>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":22957},"client/src/pages/DigitalFoundations.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Globe, \n  Search, \n  Users, \n  Mail, \n  ShoppingCart, \n  BarChart3, \n  Shield, \n  Palette,\n  CheckCircle,\n  ArrowRight\n} from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nconst foundations = [\n  {\n    icon: Globe,\n    title: \"Online Presence\",\n    description: \"Your digital storefront working 24/7\",\n    benefits: [\n      \"Professional, mobile-responsive website\",\n      \"Local SEO & Google Business Profile\",\n      \"Secure hosting and memorable domain\"\n    ],\n    impact: \"Customers find you when they need you, not just when you're advertising.\"\n  },\n  {\n    icon: Search,\n    title: \"Search Visibility\",\n    description: \"Be found when customers are searching\",\n    benefits: [\n      \"Search engine optimization (SEO)\",\n      \"Strategic content marketing\",\n      \"Targeted paid advertising campaigns\"\n    ],\n    impact: \"Consistent lead flow from customers actively looking for your services.\"\n  },\n  {\n    icon: Users,\n    title: \"Social Media & Community\",\n    description: \"Build trust and stay top-of-mind\",\n    benefits: [\n      \"Active presence on relevant platforms\",\n      \"Community engagement and interaction\",\n      \"Reputation management and reviews\"\n    ],\n    impact: \"Build a loyal following that refers you and chooses you first.\"\n  },\n  {\n    icon: Mail,\n    title: \"Customer Communication\",\n    description: \"Stay connected with leads and clients\",\n    benefits: [\n      \"Email marketing and automation\",\n      \"CRM for managing relationships\",\n      \"Live chat and messaging support\"\n    ],\n    impact: \"Turn more leads into customers and keep clients coming back.\"\n  },\n  {\n    icon: ShoppingCart,\n    title: \"E-Commerce & Transactions\",\n    description: \"Accept payments seamlessly\",\n    benefits: [\n      \"Online booking and payment systems\",\n      \"Secure payment gateways\",\n      \"Customer portals for self-service\"\n    ],\n    impact: \"Get paid faster and make it easy for customers to do business with you.\"\n  },\n  {\n    icon: BarChart3,\n    title: \"Data & Analytics\",\n    description: \"Know what's working and what's not\",\n    benefits: [\n      \"Analytics and conversion tracking\",\n      \"Performance dashboards\",\n      \"Data-driven decision making\"\n    ],\n    impact: \"Stop guessing and start making decisions based on real numbers.\"\n  },\n  {\n    icon: Shield,\n    title: \"Security & Trust\",\n    description: \"Protect your business and customers\",\n    benefits: [\n      \"SSL certificates and HTTPS\",\n      \"Data privacy compliance\",\n      \"Backup and cybersecurity measures\"\n    ],\n    impact: \"Build trust and protect your business from costly security issues.\"\n  },\n  {\n    icon: Palette,\n    title: \"Branding & Creative Assets\",\n    description: \"Look professional everywhere\",\n    benefits: [\n      \"Consistent visual identity\",\n      \"Professional templates and assets\",\n      \"High-quality video and multimedia\"\n    ],\n    impact: \"Stand out from competitors and look like the premium choice.\"\n  }\n];\n\nconst whyItMatters = [\n  {\n    title: \"Stop Losing Leads\",\n    description: \"Without proper digital foundations, you're invisible to customers searching online. You're losing jobs to competitors who show up first.\"\n  },\n  {\n    title: \"No More Wasted Ad Spend\",\n    description: \"Poor setup means your marketing dollars disappear with little to show for it. Proper foundations ensure every dollar works harder.\"\n  },\n  {\n    title: \"Build Real Trust\",\n    description: \"Customers research before they buy. A professional digital presence builds the trust you need to win premium projects.\"\n  },\n  {\n    title: \"Scale Without Breaking\",\n    description: \"Growth reveals cracks in your foundation. Build it right once, then scale with confidence knowing it can handle the volume.\"\n  }\n];\n\nexport default function DigitalFoundations() {\n  const [, setLocation] = useLocation();\n  const [headerRef, headerInView] = useInView({ triggerOnce: true, threshold: 0.1 });\n  const [foundationsRef, foundationsInView] = useInView({ triggerOnce: true, threshold: 0.1 });\n  const [whyRef, whyInView] = useInView({ triggerOnce: true, threshold: 0.1 });\n\n  const handleGetStarted = () => {\n    setLocation(\"/#quote-form\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-32 pb-20 bg-gradient-to-b from-primary/5 to-background\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            ref={headerRef}\n            className=\"max-w-4xl mx-auto text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={headerInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-4xl md:text-6xl font-bold text-foreground mb-6\">\n              Digital Foundations\n            </h1>\n            <p className=\"text-xl md:text-2xl text-muted-foreground mb-8\">\n              The complete digital infrastructure your trades business needs to compete, grow, and win premium projects.\n            </p>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              Most trades businesses approach digital marketing piecemeal—a website here, some ads there. \n              The result? Wasted money, missed opportunities, and constant frustration. \n              <span className=\"text-foreground font-semibold\"> Digital Foundations changes that.</span>\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Why It Matters Section */}\n      <section className=\"py-20 bg-background\" ref={whyRef}>\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={whyInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-6\">\n              Why Digital Foundations Matter\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Without the right foundation, your digital marketing is built on sand\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            {whyItMatters.map((item, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                animate={whyInView ? { opacity: 1, y: 0 } : {}}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <Card className=\"p-8 h-full hover-elevate\">\n                  <h3 className=\"text-xl font-bold text-foreground mb-4\">\n                    {item.title}\n                  </h3>\n                  <p className=\"text-muted-foreground\">\n                    {item.description}\n                  </p>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Foundation Elements Section */}\n      <section className=\"py-20 bg-muted/30\" ref={foundationsRef}>\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={foundationsInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-6\">\n              The 8 Pillars of Digital Foundations\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Everything you need, working together seamlessly\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8 max-w-7xl mx-auto\">\n            {foundations.map((foundation, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                animate={foundationsInView ? { opacity: 1, y: 0 } : {}}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <Card className=\"p-8 h-full hover-elevate\">\n                  <div className=\"flex items-start gap-4 mb-6\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                      <foundation.icon className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-bold text-foreground mb-2\">\n                        {foundation.title}\n                      </h3>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {foundation.description}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"mb-6\">\n                    <h4 className=\"font-semibold text-foreground mb-3 text-sm\">What's Included:</h4>\n                    <ul className=\"space-y-2\">\n                      {foundation.benefits.map((benefit, idx) => (\n                        <li key={idx} className=\"flex items-start gap-2 text-sm text-muted-foreground\">\n                          <CheckCircle className=\"h-4 w-4 text-primary flex-shrink-0 mt-0.5\" />\n                          <span>{benefit}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n\n                  <div className=\"pt-4 border-t border-border\">\n                    <p className=\"text-sm font-medium text-foreground\">\n                      <span className=\"text-primary\">Impact:</span> {foundation.impact}\n                    </p>\n                  </div>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* The Difference Section */}\n      <section className=\"py-20 bg-primary text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            <motion.div\n              className=\"text-center mb-12\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n                The Digital Foundations Difference\n              </h2>\n              <p className=\"text-xl text-primary-foreground/90\">\n                We don't just build websites. We build complete digital ecosystems that work together \n                to attract, convert, and retain your ideal customers.\n              </p>\n            </motion.div>\n\n            <motion.div\n              className=\"space-y-6\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <Card className=\"p-6 bg-primary-foreground/10 border-primary-foreground/20\">\n                <div className=\"flex items-start gap-4\">\n                  <CheckCircle className=\"h-6 w-6 text-primary-foreground flex-shrink-0 mt-1\" />\n                  <div>\n                    <h3 className=\"font-bold text-lg mb-2\">Built for Trades Businesses</h3>\n                    <p className=\"text-primary-foreground/80\">\n                      Not generic templates—every element is designed specifically for how trades businesses attract \n                      and win customers.\n                    </p>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-6 bg-primary-foreground/10 border-primary-foreground/20\">\n                <div className=\"flex items-start gap-4\">\n                  <CheckCircle className=\"h-6 w-6 text-primary-foreground flex-shrink-0 mt-1\" />\n                  <div>\n                    <h3 className=\"font-bold text-lg mb-2\">Integrated & Automated</h3>\n                    <p className=\"text-primary-foreground/80\">\n                      All systems work together seamlessly—no manual work, no data silos, no dropped leads.\n                    </p>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-6 bg-primary-foreground/10 border-primary-foreground/20\">\n                <div className=\"flex items-start gap-4\">\n                  <CheckCircle className=\"h-6 w-6 text-primary-foreground flex-shrink-0 mt-1\" />\n                  <div>\n                    <h3 className=\"font-bold text-lg mb-2\">Ongoing Optimization</h3>\n                    <p className=\"text-primary-foreground/80\">\n                      We continuously monitor, test, and improve your digital presence to ensure maximum ROI.\n                    </p>\n                  </div>\n                </div>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            className=\"max-w-4xl mx-auto text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-6\">\n              Ready to Build Your Foundation?\n            </h2>\n            <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Stop losing customers to competitors with better digital presence. \n              Let's build your complete digital foundation.\n            </p>\n            <Button\n              size=\"lg\"\n              className=\"px-8 py-6 text-lg font-semibold hover-elevate active-elevate-2 group\"\n              onClick={handleGetStarted}\n              data-testid=\"button-get-started-foundations\"\n            >\n              Get Your Custom Quote\n              <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n            </Button>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":14588},"client/src/pages/GrowthCalculator.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { ArrowRight, ArrowLeft, CheckCircle, AlertTriangle, XCircle, TrendingUp, Target, Download } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { PDFReport } from \"@/components/PDFReport\";\nimport { EmailCaptureModal } from \"@/components/EmailCaptureModal\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport Navigation from \"@/components/Navigation\";\nimport { updateSEO } from \"@/utils/seo\";\n\ninterface Question {\n  id: string;\n  category: string;\n  question: string;\n  options: { value: string; label: string; score: number }[];\n}\n\nconst questions: Question[] = [\n  // Scaling Acquisition\n  {\n    id: \"acq-1\",\n    category: \"Scaling Acquisition\",\n    question: \"Have you identified your highest ROI acquisition channel?\",\n    options: [\n      { value: \"no-idea\", label: \"No idea which channel works best\", score: 0 },\n      { value: \"guess\", label: \"Have a guess but no data\", score: 1 },\n      { value: \"identified\", label: \"Identified with data\", score: 2 },\n      { value: \"doubling-down\", label: \"Identified and doubling down\", score: 3 }\n    ]\n  },\n  {\n    id: \"acq-2\",\n    category: \"Scaling Acquisition\",\n    question: \"Can you increase paid acquisition spend while monitoring CAC vs. LTV?\",\n    options: [\n      { value: \"no-tracking\", label: \"Don't track CAC or LTV\", score: 0 },\n      { value: \"basic-tracking\", label: \"Track but don't use to guide spend\", score: 1 },\n      { value: \"monitored\", label: \"Monitor and adjust spend accordingly\", score: 2 },\n      { value: \"optimized\", label: \"Fully optimized CAC:LTV model\", score: 3 }\n    ]\n  },\n  {\n    id: \"acq-3\",\n    category: \"Scaling Acquisition\",\n    question: \"Are you continuously testing new acquisition channels?\",\n    options: [\n      { value: \"no-testing\", label: \"Stick to what we know\", score: 0 },\n      { value: \"occasional\", label: \"Test occasionally\", score: 1 },\n      { value: \"regular-testing\", label: \"Regular channel testing\", score: 2 },\n      { value: \"systematic\", label: \"Systematic testing framework\", score: 3 }\n    ]\n  },\n\n  // Improving Conversions\n  {\n    id: \"conv-1\",\n    category: \"Improving Conversions\",\n    question: \"Do you track and optimize each step: lead → show → close → upsell?\",\n    options: [\n      { value: \"no-tracking\", label: \"Don't track funnel steps\", score: 0 },\n      { value: \"basic-track\", label: \"Track but don't optimize\", score: 1 },\n      { value: \"tracked-optimized\", label: \"Track and optimize regularly\", score: 2 },\n      { value: \"data-driven\", label: \"Data-driven optimization system\", score: 3 }\n    ]\n  },\n  {\n    id: \"conv-2\",\n    category: \"Improving Conversions\",\n    question: \"Are you using A/B testing for funnels, offers, and messaging?\",\n    options: [\n      { value: \"no-testing\", label: \"No A/B testing\", score: 0 },\n      { value: \"ad-hoc\", label: \"Ad-hoc testing\", score: 1 },\n      { value: \"regular-testing\", label: \"Regular A/B tests\", score: 2 },\n      { value: \"systematic\", label: \"Systematic testing culture\", score: 3 }\n    ]\n  },\n  {\n    id: \"conv-3\",\n    category: \"Improving Conversions\",\n    question: \"Do you have structured upsell, downsell, and cross-sell flows?\",\n    options: [\n      { value: \"no-flows\", label: \"No structured flows\", score: 0 },\n      { value: \"basic-offers\", label: \"Basic upsell attempts\", score: 1 },\n      { value: \"structured\", label: \"Structured flows in place\", score: 2 },\n      { value: \"optimized\", label: \"Optimized and automated flows\", score: 3 }\n    ]\n  },\n\n  // Increasing Lifetime Value\n  {\n    id: \"ltv-1\",\n    category: \"Increasing Lifetime Value\",\n    question: \"Have you implemented recurring revenue streams (subscriptions, retainers)?\",\n    options: [\n      { value: \"one-time\", label: \"One-time sales only\", score: 0 },\n      { value: \"exploring\", label: \"Exploring recurring options\", score: 1 },\n      { value: \"some-recurring\", label: \"Some recurring revenue\", score: 2 },\n      { value: \"recurring-focused\", label: \"Strong recurring revenue model\", score: 3 }\n    ]\n  },\n  {\n    id: \"ltv-2\",\n    category: \"Increasing Lifetime Value\",\n    question: \"Do you have a customer success system to reduce churn?\",\n    options: [\n      { value: \"no-system\", label: \"No retention system\", score: 0 },\n      { value: \"reactive\", label: \"Reactive to churn\", score: 1 },\n      { value: \"proactive\", label: \"Proactive success check-ins\", score: 2 },\n      { value: \"systematic\", label: \"Systematic success program\", score: 3 }\n    ]\n  },\n  {\n    id: \"ltv-3\",\n    category: \"Increasing Lifetime Value\",\n    question: \"Do you have premium/expanded offers for existing clients?\",\n    options: [\n      { value: \"no-expansion\", label: \"No expansion offers\", score: 0 },\n      { value: \"basic-upsells\", label: \"Basic upsells available\", score: 1 },\n      { value: \"tiered-offers\", label: \"Tiered expansion offers\", score: 2 },\n      { value: \"value-ladder\", label: \"Complete value ladder\", score: 3 }\n    ]\n  },\n\n  // Expanding Delivery Capacity\n  {\n    id: \"capacity-1\",\n    category: \"Expanding Delivery Capacity\",\n    question: \"Have you created delivery playbooks and SOPs for scale?\",\n    options: [\n      { value: \"no-docs\", label: \"No documentation\", score: 0 },\n      { value: \"basic-docs\", label: \"Basic documentation\", score: 1 },\n      { value: \"playbooks\", label: \"Comprehensive playbooks\", score: 2 },\n      { value: \"optimized\", label: \"Optimized and regularly updated\", score: 3 }\n    ]\n  },\n  {\n    id: \"capacity-2\",\n    category: \"Expanding Delivery Capacity\",\n    question: \"Are you automating and outsourcing low-value tasks?\",\n    options: [\n      { value: \"doing-all\", label: \"Team does everything\", score: 0 },\n      { value: \"some-delegation\", label: \"Some delegation\", score: 1 },\n      { value: \"strategic-outsource\", label: \"Strategic outsourcing\", score: 2 },\n      { value: \"fully-optimized\", label: \"Fully automated/outsourced\", score: 3 }\n    ]\n  },\n  {\n    id: \"capacity-3\",\n    category: \"Expanding Delivery Capacity\",\n    question: \"Do you hire in advance of demand spikes?\",\n    options: [\n      { value: \"reactive\", label: \"Reactive hiring when slammed\", score: 0 },\n      { value: \"just-in-time\", label: \"Just-in-time hiring\", score: 1 },\n      { value: \"forecasted\", label: \"Forecast-based hiring\", score: 2 },\n      { value: \"proactive\", label: \"Proactive capacity planning\", score: 3 }\n    ]\n  },\n\n  // Protecting Margins\n  {\n    id: \"margin-1\",\n    category: \"Protecting Margins\",\n    question: \"Do you track profit per product/service (unit economics)?\",\n    options: [\n      { value: \"no-tracking\", label: \"Don't track unit economics\", score: 0 },\n      { value: \"rough-idea\", label: \"Have a rough idea\", score: 1 },\n      { value: \"tracked\", label: \"Track unit economics\", score: 2 },\n      { value: \"optimized\", label: \"Track and optimize regularly\", score: 3 }\n    ]\n  },\n  {\n    id: \"margin-2\",\n    category: \"Protecting Margins\",\n    question: \"Are you testing and raising prices strategically?\",\n    options: [\n      { value: \"never-raise\", label: \"Afraid to raise prices\", score: 0 },\n      { value: \"rare-increases\", label: \"Rare price increases\", score: 1 },\n      { value: \"strategic-testing\", label: \"Strategic price testing\", score: 2 },\n      { value: \"value-based\", label: \"Value-based pricing strategy\", score: 3 }\n    ]\n  },\n  {\n    id: \"margin-3\",\n    category: \"Protecting Margins\",\n    question: \"Do expenses grow slower than revenue (operating leverage)?\",\n    options: [\n      { value: \"no-tracking\", label: \"Don't track the ratio\", score: 0 },\n      { value: \"aware\", label: \"Aware but not managing\", score: 1 },\n      { value: \"monitored\", label: \"Actively monitoring\", score: 2 },\n      { value: \"optimized\", label: \"Optimized operating leverage\", score: 3 }\n    ]\n  },\n\n  // Talent Acquisition\n  {\n    id: \"talent-1\",\n    category: \"Talent Acquisition\",\n    question: \"Do you have a repeatable hiring funnel (attract, assess, onboard)?\",\n    options: [\n      { value: \"ad-hoc\", label: \"Ad-hoc hiring when desperate\", score: 0 },\n      { value: \"basic-process\", label: \"Basic hiring process\", score: 1 },\n      { value: \"structured\", label: \"Structured hiring funnel\", score: 2 },\n      { value: \"optimized\", label: \"Optimized talent pipeline\", score: 3 }\n    ]\n  },\n  {\n    id: \"talent-2\",\n    category: \"Talent Acquisition\",\n    question: \"Do you use scorecards for every role with clear KPIs?\",\n    options: [\n      { value: \"no-scorecards\", label: \"No scorecards or KPIs\", score: 0 },\n      { value: \"informal\", label: \"Informal expectations\", score: 1 },\n      { value: \"documented\", label: \"Documented scorecards\", score: 2 },\n      { value: \"data-driven\", label: \"Data-driven performance mgmt\", score: 3 }\n    ]\n  },\n  {\n    id: \"talent-3\",\n    category: \"Talent Acquisition\",\n    question: \"Are you hiring specialists who unlock growth (closers, marketers, operators)?\",\n    options: [\n      { value: \"generalists\", label: \"Generalists only\", score: 0 },\n      { value: \"some-specialists\", label: \"Some specialists\", score: 1 },\n      { value: \"strategic-hires\", label: \"Strategic specialist hires\", score: 2 },\n      { value: \"a-players\", label: \"A-player specialists only\", score: 3 }\n    ]\n  },\n\n  // Money Model\n  {\n    id: \"money-1\",\n    category: \"Money Model\",\n    question: \"Have you defined how $1 in acquisition turns into $X in revenue?\",\n    options: [\n      { value: \"unclear\", label: \"Money model is unclear\", score: 0 },\n      { value: \"rough-model\", label: \"Rough understanding\", score: 1 },\n      { value: \"defined\", label: \"Clearly defined model\", score: 2 },\n      { value: \"optimized\", label: \"Optimized and proven model\", score: 3 }\n    ]\n  },\n  {\n    id: \"money-2\",\n    category: \"Money Model\",\n    question: \"Do you monitor CAC vs. LTV ratio (aiming for 3:1+)?\",\n    options: [\n      { value: \"no-tracking\", label: \"Don't track this ratio\", score: 0 },\n      { value: \"aware\", label: \"Aware but don't optimize\", score: 1 },\n      { value: \"monitored\", label: \"Actively monitored\", score: 2 },\n      { value: \"optimized\", label: \"Optimized to 3:1 or better\", score: 3 }\n    ]\n  },\n  {\n    id: \"money-3\",\n    category: \"Money Model\",\n    question: \"Do you have tiered pricing & packaging to capture more value per client?\",\n    options: [\n      { value: \"one-price\", label: \"One-size-fits-all pricing\", score: 0 },\n      { value: \"basic-tiers\", label: \"Basic tiered pricing\", score: 1 },\n      { value: \"strategic-tiers\", label: \"Strategic packaging\", score: 2 },\n      { value: \"value-optimized\", label: \"Value-optimized tiers\", score: 3 }\n    ]\n  },\n\n  // Scaling Leadership & Vision\n  {\n    id: \"leadership-1\",\n    category: \"Scaling Leadership\",\n    question: \"Does leadership focus on strategy, not operations?\",\n    options: [\n      { value: \"in-weeds\", label: \"Leaders stuck in the weeds\", score: 0 },\n      { value: \"mixed\", label: \"Mix of strategy and ops\", score: 1 },\n      { value: \"mostly-strategy\", label: \"Mostly strategic focus\", score: 2 },\n      { value: \"pure-strategy\", label: \"Pure strategic leadership\", score: 3 }\n    ]\n  },\n  {\n    id: \"leadership-2\",\n    category: \"Scaling Leadership\",\n    question: \"Do you have weekly scorecards/dashboards showing growth metrics?\",\n    options: [\n      { value: \"no-dashboards\", label: \"No regular dashboards\", score: 0 },\n      { value: \"monthly-reports\", label: \"Monthly reports\", score: 1 },\n      { value: \"weekly-reviews\", label: \"Weekly scorecard reviews\", score: 2 },\n      { value: \"real-time\", label: \"Real-time growth dashboards\", score: 3 }\n    ]\n  },\n  {\n    id: \"leadership-3\",\n    category: \"Scaling Leadership\",\n    question: \"Is your culture tied to performance and accountability?\",\n    options: [\n      { value: \"no-accountability\", label: \"Low accountability culture\", score: 0 },\n      { value: \"inconsistent\", label: \"Inconsistent accountability\", score: 1 },\n      { value: \"performance-focused\", label: \"Performance-focused culture\", score: 2 },\n      { value: \"high-performance\", label: \"High-performance culture\", score: 3 }\n    ]\n  },\n  {\n    id: \"leadership-4\",\n    category: \"Scaling Leadership\",\n    question: \"Do you have a growth roadmap (new markets, verticals, or acquisitions)?\",\n    options: [\n      { value: \"no-roadmap\", label: \"No growth roadmap\", score: 0 },\n      { value: \"vague-ideas\", label: \"Vague expansion ideas\", score: 1 },\n      { value: \"documented\", label: \"Documented roadmap\", score: 2 },\n      { value: \"executing\", label: \"Actively executing roadmap\", score: 3 }\n    ]\n  }\n];\n\nconst growthTiers = [\n  {\n    name: \"Not Ready to Scale\",\n    minScore: 0,\n    maxScore: 18,\n    icon: XCircle,\n    color: \"text-red-500\",\n    bgColor: \"bg-red-500/10\",\n    borderColor: \"border-red-500/20\",\n    description: \"Chaos Prevents Growth\",\n    impact: \"Your business isn't ready to scale. Without clarity on your numbers, proven systems, and a solid foundation, trying to grow will only amplify the chaos. You'll burn cash on marketing that doesn't convert, hire people who can't execute, and watch margins evaporate. Growth attempts will create more problems than profit.\",\n    actions: [\n      \"Scaling now would multiply existing problems\",\n      \"No clear path from $1 spent to $X earned\",\n      \"Can't deliver quality at current volume, let alone 2x\",\n      \"Hiring would add costs without adding capacity\",\n      \"No data to guide growth decisions\"\n    ],\n    nextSteps: \"Focus on clarity and systems first. Get your numbers dialed in, build repeatable processes, and create a foundation that can handle growth. Use the Clarity and Systems calculators to identify gaps.\"\n  },\n  {\n    name: \"Early Growth Stage\",\n    minScore: 19,\n    maxScore: 37,\n    icon: AlertTriangle,\n    color: \"text-orange-500\",\n    bgColor: \"bg-orange-500/10\",\n    borderColor: \"border-orange-500/20\",\n    description: \"Foundation Set, Growth Inconsistent\",\n    impact: \"You have the basics in place and can handle modest growth, but it's not consistent or predictable. You might have good months followed by terrible ones. You can identify what's working but struggle to scale it. Growth happens, but it's manual, exhausting, and hard to sustain without burning out your team.\",\n    actions: [\n      \"Growth happens but isn't predictable\",\n      \"Can't consistently replicate winning months\",\n      \"Team stretched thin, can't scale without breaking\",\n      \"Margins pressured when you try to grow\",\n      \"Missing key specialists to unlock next level\"\n    ],\n    nextSteps: \"Systematize what's working. Build repeatable acquisition and conversion processes. Hire strategically to unlock bottlenecks. Start testing pricing and packaging to improve unit economics.\"\n  },\n  {\n    name: \"Scaling Ready\",\n    minScore: 38,\n    maxScore: 56,\n    icon: Target,\n    color: \"text-blue-500\",\n    bgColor: \"bg-blue-500/10\",\n    borderColor: \"border-blue-500/20\",\n    description: \"Systems Support Growth, Room to Optimize\",\n    impact: \"Your business is ready to scale. You have clarity on your numbers, systems that can handle growth, and a proven model. You can double down on what works and expand strategically. There are still inefficiencies and opportunities to optimize, but you have the foundation to grow profitably without chaos.\",\n    actions: [\n      \"Clear money model: know how $1 becomes $X\",\n      \"Can scale acquisition profitably\",\n      \"Systems and team can handle 2-3x growth\",\n      \"Margins protected through operating leverage\",\n      \"Strategic roadmap guides expansion\"\n    ],\n    nextSteps: \"Optimize your best channels. Implement value-based pricing. Build out specialist talent. Create a proactive hiring pipeline. Expand to adjacent markets or verticals systematically.\"\n  },\n  {\n    name: \"High-Growth Machine\",\n    minScore: 57,\n    maxScore: 75,\n    icon: TrendingUp,\n    color: \"text-green-500\",\n    bgColor: \"bg-green-500/10\",\n    borderColor: \"border-green-500/20\",\n    description: \"Optimized for Rapid, Profitable Scaling\",\n    impact: \"Your business is a high-growth machine. You have complete clarity, battle-tested systems, and a money model that prints cash. You can scale rapidly and profitably because every component is optimized. Leadership focuses on strategy, culture drives performance, and you're expanding into new markets or verticals with confidence.\",\n    actions: [\n      \"Predictable, scalable growth model\",\n      \"Can 10x revenue without proportional cost increase\",\n      \"A-player talent unlocking new opportunities\",\n      \"Multiple expansion paths validated and executing\",\n      \"Leadership operates at strategic level only\"\n    ],\n    nextSteps: \"Continue optimizing and expanding. Explore acquisitions, new markets, or vertical integration. Build your growth playbook to help other trades businesses scale. Consider raising capital to accelerate expansion.\"\n  }\n];\n\nexport default function GrowthCalculator() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n  const [showResults, setShowResults] = useState(false);\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    updateSEO({\n      title: \"Growth Readiness Calculator - Free Business Scaling Assessment | KPI Digital\",\n      description: \"Discover if your trades business is ready to scale. Evaluate market positioning, operations, finances, team, and strategy with our comprehensive growth readiness assessment.\",\n      ogTitle: \"Are You Ready to Scale? - Free Growth Calculator\",\n      ogDescription: \"Take our 25-question assessment to discover your growth readiness score and get actionable insights for scaling your trades business profitably.\",\n    });\n  }, []);\n\n  const progress = ((currentQuestion + 1) / questions.length) * 100;\n  const isAnswered = answers[questions[currentQuestion]?.id] !== undefined;\n\n  const handleAnswer = (value: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questions[currentQuestion].id]: value\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n    }\n  };\n\n  const calculateScore = () => {\n    let totalScore = 0;\n    questions.forEach(q => {\n      const answer = answers[q.id];\n      if (answer) {\n        const option = q.options.find(opt => opt.value === answer);\n        totalScore += option?.score || 0;\n      }\n    });\n    return totalScore;\n  };\n\n  const getTier = (score: number) => {\n    return growthTiers.find(tier => score >= tier.minScore && score <= tier.maxScore) || growthTiers[0];\n  };\n\n  const getCategoryScores = () => {\n    const categoryMap = new Map<string, { score: number; maxScore: number }>();\n    \n    questions.forEach(q => {\n      const answer = answers[q.id];\n      if (answer) {\n        const option = q.options.find(opt => opt.value === answer);\n        const current = categoryMap.get(q.category) || { score: 0, maxScore: 0 };\n        categoryMap.set(q.category, {\n          score: current.score + (option?.score || 0),\n          maxScore: current.maxScore + 3\n        });\n      }\n    });\n\n    return Array.from(categoryMap.entries()).map(([name, data]) => ({\n      name,\n      ...data\n    }));\n  };\n\n  const handleDownloadPDF = async (userEmail: string) => {\n    try {\n      const categories = getCategoryScores();\n      const currentDate = new Date().toLocaleDateString('en-AU', { \n        year: 'numeric', \n        month: 'long', \n        day: 'numeric' \n      });\n\n      const questionsWithAnswers = questions.map(q => {\n        const answer = answers[q.id];\n        const option = q.options.find(opt => opt.value === answer);\n        return {\n          id: q.id,\n          category: q.category,\n          question: q.question,\n          selectedAnswer: option?.label || 'Not answered',\n          score: option?.score || 0,\n        };\n      });\n\n      const pdfDoc = <PDFReport\n        calculatorType=\"growth\"\n        score={score}\n        maxScore={75}\n        tier={{\n          name: tier.name,\n          description: tier.description,\n          impact: tier.impact,\n          actions: tier.actions,\n          nextSteps: tier.nextSteps\n        }}\n        categories={categories}\n        userEmail={userEmail}\n        date={currentDate}\n        questions={questionsWithAnswers}\n      />;\n\n      const blob = await pdf(pdfDoc).toBlob();\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `KPI-Digital-Growth-Assessment-${userEmail.split('@')[0]}.pdf`;\n      link.click();\n      URL.revokeObjectURL(url);\n\n      try {\n        await apiRequest('POST', '/api/notify-report', {\n          calculatorType: 'Growth',\n          userEmail,\n          score,\n          maxScore: 75,\n          tierName: tier.name,\n          categories\n        });\n\n        toast({\n          title: \"Report Downloaded!\",\n          description: \"Your Growth Assessment report has been downloaded. We've also been notified of your results.\",\n        });\n      } catch (notifyError) {\n        console.error('Notification error:', notifyError);\n        toast({\n          title: \"Report Downloaded!\",\n          description: \"Your Growth Assessment report has been downloaded. (Note: We couldn't send the notification, but your download was successful.)\",\n        });\n      }\n    } catch (error) {\n      console.error('PDF generation error:', error);\n      throw error;\n    }\n  };\n\n  const score = calculateScore();\n  const tier = getTier(score);\n\n  if (showResults) {\n    const TierIcon = tier.icon;\n    \n    return (\n      <div className=\"min-h-screen bg-background py-24\">\n        <div className=\"container mx-auto px-4 max-w-4xl\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n                Your Growth Readiness Results\n              </h1>\n              <p className=\"text-xl text-muted-foreground\">\n                Based on your answers, here's your growth readiness level\n              </p>\n            </div>\n\n            <Card className={`p-8 md:p-12 mb-8 border-2 ${tier.borderColor} ${tier.bgColor}`}>\n              <div className=\"text-center mb-8\">\n                <TierIcon className={`h-20 w-20 ${tier.color} mx-auto mb-6`} />\n                <h2 className={`text-3xl md:text-4xl font-bold mb-2 ${tier.color}`}>\n                  {tier.name}\n                </h2>\n                <p className=\"text-xl text-foreground font-semibold mb-4\">\n                  {tier.description}\n                </p>\n                <div className=\"text-lg text-muted-foreground\">\n                  Your Score: <span className=\"font-bold text-foreground\">{score}</span> / 75\n                </div>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    How This Affects Your Business:\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {tier.impact}\n                  </p>\n                </div>\n\n                <div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    What This Means:\n                  </h3>\n                  <ul className=\"space-y-2\">\n                    {tier.actions.map((action, idx) => (\n                      <li key={idx} className=\"flex items-start gap-3\">\n                        <AlertTriangle className={`h-5 w-5 ${tier.color} flex-shrink-0 mt-0.5`} />\n                        <span className=\"text-muted-foreground\">{action}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"bg-background/50 rounded-lg p-6 mt-6\">\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    Next Steps:\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {tier.nextSteps}\n                  </p>\n                </div>\n              </div>\n            </Card>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                onClick={() => setShowEmailModal(true)}\n                className=\"hover-elevate active-elevate-2 group\"\n                data-testid=\"button-download-pdf\"\n              >\n                <Download className=\"mr-2 h-5 w-5\" />\n                Download Full Report\n              </Button>\n              <Link href=\"/#quote-form\" asChild>\n                <Button \n                  size=\"lg\"\n                  variant=\"outline\"\n                  data-testid=\"button-get-help\"\n                >\n                  Get Help Scaling Your Business\n                  <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n                </Button>\n              </Link>\n              <Button\n                size=\"lg\"\n                variant=\"outline\"\n                onClick={() => {\n                  setShowResults(false);\n                  setCurrentQuestion(0);\n                  setAnswers({});\n                }}\n                data-testid=\"button-retake\"\n              >\n                Retake Assessment\n              </Button>\n            </div>\n\n            <EmailCaptureModal\n              open={showEmailModal}\n              onOpenChange={setShowEmailModal}\n              onSubmit={handleDownloadPDF}\n              calculatorType=\"Growth\"\n            />\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n\n  const question = questions[currentQuestion];\n  const selectedAnswer = answers[question.id];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <div className=\"container mx-auto px-4 max-w-3xl py-40\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Check Your Growth Readiness\n            </h1>\n            <p className=\"text-xl text-muted-foreground mb-8\">\n              Answer 28 questions to discover if you're ready to scale\n            </p>\n            <Progress value={progress} className=\"h-3\" />\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Question {currentQuestion + 1} of {questions.length}\n            </p>\n          </div>\n\n          <Card className=\"p-8 md:p-10\">\n            <div className=\"mb-8\">\n              <div className=\"text-sm font-semibold text-primary mb-3\">\n                {question.category}\n              </div>\n              <h2 className=\"text-2xl font-bold text-foreground mb-6\">\n                {question.question}\n              </h2>\n\n              <RadioGroup value={selectedAnswer} onValueChange={handleAnswer}>\n                <div className=\"space-y-3\">\n                  {question.options.map((option) => (\n                    <div\n                      key={option.value}\n                      className={`flex items-center space-x-3 rounded-lg border-2 p-4 transition-all cursor-pointer hover-elevate ${\n                        selectedAnswer === option.value\n                          ? 'border-primary bg-primary/5'\n                          : 'border-border'\n                      }`}\n                      onClick={() => handleAnswer(option.value)}\n                    >\n                      <RadioGroupItem \n                        value={option.value} \n                        id={option.value}\n                        data-testid={`radio-${option.value}`}\n                      />\n                      <Label\n                        htmlFor={option.value}\n                        className=\"flex-1 cursor-pointer text-base\"\n                      >\n                        {option.label}\n                      </Label>\n                    </div>\n                  ))}\n                </div>\n              </RadioGroup>\n            </div>\n\n            <div className=\"flex justify-between gap-4\">\n              <Button\n                variant=\"outline\"\n                onClick={handleBack}\n                disabled={currentQuestion === 0}\n                data-testid=\"button-back\"\n              >\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back\n              </Button>\n              <Button\n                onClick={handleNext}\n                disabled={!isAnswered}\n                className=\"hover-elevate active-elevate-2 group\"\n                data-testid=\"button-next\"\n              >\n                {currentQuestion === questions.length - 1 ? 'See Results' : 'Next'}\n                <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300\" />\n              </Button>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":29825},"client/src/pages/SystemsCalculator.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { ArrowRight, ArrowLeft, CheckCircle, AlertTriangle, XCircle, Zap, Rocket, Download } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { PDFReport } from \"@/components/PDFReport\";\nimport { EmailCaptureModal } from \"@/components/EmailCaptureModal\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport Navigation from \"@/components/Navigation\";\nimport { updateSEO } from \"@/utils/seo\";\n\ninterface Question {\n  id: string;\n  category: string;\n  question: string;\n  options: { value: string; label: string; score: number }[];\n}\n\nconst questions: Question[] = [\n  // Sales & Lead Systems (AI-Enabled)\n  {\n    id: \"sales-1\",\n    category: \"Sales & Lead Systems\",\n    question: \"Is there an AI-powered lead scoring system to prioritize the best prospects?\",\n    options: [\n      { value: \"no\", label: \"No, we don't score leads\", score: 0 },\n      { value: \"manual\", label: \"Manual scoring only\", score: 1 },\n      { value: \"basic-auto\", label: \"Basic automated scoring\", score: 2 },\n      { value: \"ai-powered\", label: \"AI-powered predictive scoring\", score: 3 }\n    ]\n  },\n  {\n    id: \"sales-2\",\n    category: \"Sales & Lead Systems\",\n    question: \"Are leads automatically tracked in a CRM with AI suggestions for next steps?\",\n    options: [\n      { value: \"no-crm\", label: \"No CRM system\", score: 0 },\n      { value: \"basic-crm\", label: \"CRM but manual tracking\", score: 1 },\n      { value: \"auto-track\", label: \"Automated tracking in CRM\", score: 2 },\n      { value: \"ai-suggestions\", label: \"AI-driven next step recommendations\", score: 3 }\n    ]\n  },\n  {\n    id: \"sales-3\",\n    category: \"Sales & Lead Systems\",\n    question: \"Is outreach supported by AI-driven personalization (emails, LinkedIn, SMS)?\",\n    options: [\n      { value: \"manual\", label: \"All manual outreach\", score: 0 },\n      { value: \"templates\", label: \"Templates with manual personalization\", score: 1 },\n      { value: \"auto-personalize\", label: \"Automated personalization\", score: 2 },\n      { value: \"ai-driven\", label: \"AI-driven multi-channel personalization\", score: 3 }\n    ]\n  },\n  {\n    id: \"sales-4\",\n    category: \"Sales & Lead Systems\",\n    question: \"Are sales calls recorded and AI-analyzed for objections, talk ratio, and close signals?\",\n    options: [\n      { value: \"no-recording\", label: \"Calls not recorded\", score: 0 },\n      { value: \"recorded-only\", label: \"Recorded but not analyzed\", score: 1 },\n      { value: \"manual-review\", label: \"Recorded with manual review\", score: 2 },\n      { value: \"ai-analysis\", label: \"AI-analyzed for insights and coaching\", score: 3 }\n    ]\n  },\n  {\n    id: \"sales-5\",\n    category: \"Sales & Lead Systems\",\n    question: \"Do contracts/proposals auto-generate and route with AI-assisted templates + e-sign?\",\n    options: [\n      { value: \"manual-docs\", label: \"Manual document creation\", score: 0 },\n      { value: \"basic-templates\", label: \"Basic templates, manual routing\", score: 1 },\n      { value: \"auto-generate\", label: \"Auto-generate with e-sign\", score: 2 },\n      { value: \"ai-assisted\", label: \"AI-assisted templates with smart routing\", score: 3 }\n    ]\n  },\n\n  // Marketing Systems (Tech-Enabled)\n  {\n    id: \"marketing-1\",\n    category: \"Marketing Systems\",\n    question: \"Is content (blogs, social posts, email) AI-assisted for ideation, drafting, and repurposing?\",\n    options: [\n      { value: \"all-manual\", label: \"All manual content creation\", score: 0 },\n      { value: \"basic-tools\", label: \"Basic tools for scheduling\", score: 1 },\n      { value: \"ai-ideation\", label: \"AI for ideation and drafting\", score: 2 },\n      { value: \"full-ai\", label: \"Full AI workflow with repurposing\", score: 3 }\n    ]\n  },\n  {\n    id: \"marketing-2\",\n    category: \"Marketing Systems\",\n    question: \"Are campaigns tracked in real-time dashboards with predictive analytics?\",\n    options: [\n      { value: \"no-tracking\", label: \"No campaign tracking\", score: 0 },\n      { value: \"basic-reports\", label: \"Basic reporting after campaigns\", score: 1 },\n      { value: \"real-time\", label: \"Real-time dashboards\", score: 2 },\n      { value: \"predictive\", label: \"Predictive analytics and forecasting\", score: 3 }\n    ]\n  },\n  {\n    id: \"marketing-3\",\n    category: \"Marketing Systems\",\n    question: \"Do we have AI-powered chatbots for lead nurturing and FAQs?\",\n    options: [\n      { value: \"no-chatbot\", label: \"No chatbot or automation\", score: 0 },\n      { value: \"basic-chatbot\", label: \"Basic scripted chatbot\", score: 1 },\n      { value: \"smart-chatbot\", label: \"Smart chatbot with learning\", score: 2 },\n      { value: \"ai-nurture\", label: \"AI chatbot with lead nurturing\", score: 3 }\n    ]\n  },\n  {\n    id: \"marketing-4\",\n    category: \"Marketing Systems\",\n    question: \"Are retargeting and remarketing automated across channels (ads, email, SMS)?\",\n    options: [\n      { value: \"no-retarget\", label: \"No retargeting\", score: 0 },\n      { value: \"single-channel\", label: \"Single channel retargeting\", score: 1 },\n      { value: \"multi-channel\", label: \"Multi-channel retargeting\", score: 2 },\n      { value: \"ai-optimized\", label: \"AI-optimized cross-channel automation\", score: 3 }\n    ]\n  },\n  {\n    id: \"marketing-5\",\n    category: \"Marketing Systems\",\n    question: \"Can we measure ROI per channel automatically without manual reporting?\",\n    options: [\n      { value: \"no-measure\", label: \"No ROI tracking\", score: 0 },\n      { value: \"manual-calc\", label: \"Manual ROI calculations\", score: 1 },\n      { value: \"auto-track\", label: \"Automated tracking per channel\", score: 2 },\n      { value: \"ai-attribution\", label: \"AI-powered attribution modeling\", score: 3 }\n    ]\n  },\n\n  // Product/Service Delivery Systems\n  {\n    id: \"delivery-1\",\n    category: \"Product/Service Delivery\",\n    question: \"Is client onboarding automated with AI-driven workflows (welcome sequences, setup guides)?\",\n    options: [\n      { value: \"manual\", label: \"Fully manual onboarding\", score: 0 },\n      { value: \"templates\", label: \"Email templates only\", score: 1 },\n      { value: \"automated\", label: \"Automated workflow sequences\", score: 2 },\n      { value: \"ai-personalized\", label: \"AI-personalized onboarding journeys\", score: 3 }\n    ]\n  },\n  {\n    id: \"delivery-2\",\n    category: \"Product/Service Delivery\",\n    question: \"Are client requests tracked in AI-enhanced ticketing/project systems?\",\n    options: [\n      { value: \"email-only\", label: \"Email and spreadsheets only\", score: 0 },\n      { value: \"basic-ticket\", label: \"Basic ticketing system\", score: 1 },\n      { value: \"project-mgmt\", label: \"Project management with automation\", score: 2 },\n      { value: \"ai-enhanced\", label: \"AI-enhanced with smart routing\", score: 3 }\n    ]\n  },\n  {\n    id: \"delivery-3\",\n    category: \"Product/Service Delivery\",\n    question: \"Do we use AI for quality control (spotting errors, summarizing feedback, auto-checking deliverables)?\",\n    options: [\n      { value: \"manual-qa\", label: \"All manual quality checks\", score: 0 },\n      { value: \"basic-checks\", label: \"Basic automated checks\", score: 1 },\n      { value: \"smart-qa\", label: \"Smart QA with alerts\", score: 2 },\n      { value: \"ai-qa\", label: \"AI-powered quality control and feedback\", score: 3 }\n    ]\n  },\n  {\n    id: \"delivery-4\",\n    category: \"Product/Service Delivery\",\n    question: \"Are progress updates automatically generated (dashboards, AI-written reports)?\",\n    options: [\n      { value: \"manual-updates\", label: \"Manual status updates\", score: 0 },\n      { value: \"basic-dashboard\", label: \"Basic dashboard only\", score: 1 },\n      { value: \"auto-updates\", label: \"Automated progress updates\", score: 2 },\n      { value: \"ai-reports\", label: \"AI-generated reports and insights\", score: 3 }\n    ]\n  },\n  {\n    id: \"delivery-5\",\n    category: \"Product/Service Delivery\",\n    question: \"Are there self-service portals where clients can access status and resources anytime?\",\n    options: [\n      { value: \"no-portal\", label: \"No self-service options\", score: 0 },\n      { value: \"basic-access\", label: \"Basic file sharing\", score: 1 },\n      { value: \"client-portal\", label: \"Client portal with status\", score: 2 },\n      { value: \"ai-portal\", label: \"AI-powered portal with smart resources\", score: 3 }\n    ]\n  },\n\n  // Finance Systems\n  {\n    id: \"finance-1\",\n    category: \"Finance Systems\",\n    question: \"Do we use AI-driven forecasting models for cash flow, revenue, and churn?\",\n    options: [\n      { value: \"no-forecast\", label: \"No forecasting\", score: 0 },\n      { value: \"manual-forecast\", label: \"Manual spreadsheet forecasts\", score: 1 },\n      { value: \"auto-forecast\", label: \"Automated forecasting tools\", score: 2 },\n      { value: \"ai-predictive\", label: \"AI-driven predictive modeling\", score: 3 }\n    ]\n  },\n  {\n    id: \"finance-2\",\n    category: \"Finance Systems\",\n    question: \"Are invoices/payments auto-generated and reconciled with minimal human touch?\",\n    options: [\n      { value: \"manual-invoice\", label: \"Manual invoicing\", score: 0 },\n      { value: \"auto-invoice\", label: \"Auto-generated invoices\", score: 1 },\n      { value: \"auto-payment\", label: \"Auto-generated with payment reminders\", score: 2 },\n      { value: \"full-auto\", label: \"Fully automated with reconciliation\", score: 3 }\n    ]\n  },\n  {\n    id: \"finance-3\",\n    category: \"Finance Systems\",\n    question: \"Can AI flag anomalies (suspicious expenses, missed payments)?\",\n    options: [\n      { value: \"no-monitoring\", label: \"No anomaly detection\", score: 0 },\n      { value: \"manual-review\", label: \"Manual monthly reviews\", score: 1 },\n      { value: \"basic-alerts\", label: \"Basic threshold alerts\", score: 2 },\n      { value: \"ai-anomaly\", label: \"AI-powered anomaly detection\", score: 3 }\n    ]\n  },\n  {\n    id: \"finance-4\",\n    category: \"Finance Systems\",\n    question: \"Is financial data accessible in real-time dashboards instead of static spreadsheets?\",\n    options: [\n      { value: \"spreadsheets\", label: \"Static spreadsheets only\", score: 0 },\n      { value: \"basic-reports\", label: \"Weekly/monthly reports\", score: 1 },\n      { value: \"dashboards\", label: \"Real-time dashboards\", score: 2 },\n      { value: \"ai-insights\", label: \"AI-powered insights and alerts\", score: 3 }\n    ]\n  },\n\n  // People & Management Systems\n  {\n    id: \"people-1\",\n    category: \"People & Management\",\n    question: \"Do team members have AI-assisted productivity tools (task management, meeting summaries)?\",\n    options: [\n      { value: \"basic-tools\", label: \"Basic tools only\", score: 0 },\n      { value: \"task-mgmt\", label: \"Task management software\", score: 1 },\n      { value: \"smart-tools\", label: \"Smart tools with automation\", score: 2 },\n      { value: \"ai-assisted\", label: \"AI-assisted productivity suite\", score: 3 }\n    ]\n  },\n  {\n    id: \"people-2\",\n    category: \"People & Management\",\n    question: \"Are roles and KPIs tracked in a scorecard system with real-time updates?\",\n    options: [\n      { value: \"no-tracking\", label: \"No KPI tracking\", score: 0 },\n      { value: \"spreadsheet\", label: \"Spreadsheet tracking\", score: 1 },\n      { value: \"dashboard\", label: \"Dashboard with regular updates\", score: 2 },\n      { value: \"real-time\", label: \"Real-time scorecard system\", score: 3 }\n    ]\n  },\n  {\n    id: \"people-3\",\n    category: \"People & Management\",\n    question: \"Are AI-driven hiring tools used to screen candidates and predict fit?\",\n    options: [\n      { value: \"manual-hire\", label: \"All manual hiring\", score: 0 },\n      { value: \"job-boards\", label: \"Job board postings only\", score: 1 },\n      { value: \"ats-system\", label: \"ATS with basic screening\", score: 2 },\n      { value: \"ai-hiring\", label: \"AI-driven screening and fit prediction\", score: 3 }\n    ]\n  },\n  {\n    id: \"people-4\",\n    category: \"People & Management\",\n    question: \"Is onboarding/training automated with digital SOPs, AI-driven learning modules, and video guides?\",\n    options: [\n      { value: \"manual-train\", label: \"Manual training only\", score: 0 },\n      { value: \"documents\", label: \"Written documents/SOPs\", score: 1 },\n      { value: \"video-sops\", label: \"Video SOPs and guides\", score: 2 },\n      { value: \"ai-learning\", label: \"AI-driven adaptive learning paths\", score: 3 }\n    ]\n  },\n  {\n    id: \"people-5\",\n    category: \"People & Management\",\n    question: \"Do managers use AI to track performance signals (engagement, output, response times)?\",\n    options: [\n      { value: \"no-tracking\", label: \"No performance tracking\", score: 0 },\n      { value: \"manual-review\", label: \"Manual performance reviews\", score: 1 },\n      { value: \"basic-metrics\", label: \"Basic metric tracking\", score: 2 },\n      { value: \"ai-signals\", label: \"AI-powered performance insights\", score: 3 }\n    ]\n  },\n\n  // Data, Tech & Infrastructure\n  {\n    id: \"tech-1\",\n    category: \"Data & Infrastructure\",\n    question: \"Are all systems integrated via APIs/automation platforms (no double entry)?\",\n    options: [\n      { value: \"siloed\", label: \"Siloed systems, manual entry\", score: 0 },\n      { value: \"some-integration\", label: \"Some systems connected\", score: 1 },\n      { value: \"mostly-integrated\", label: \"Most systems integrated\", score: 2 },\n      { value: \"fully-integrated\", label: \"Fully integrated automation\", score: 3 }\n    ]\n  },\n  {\n    id: \"tech-2\",\n    category: \"Data & Infrastructure\",\n    question: \"Do we use AI for data cleaning and normalization across tools?\",\n    options: [\n      { value: \"manual-clean\", label: \"Manual data cleaning\", score: 0 },\n      { value: \"basic-validation\", label: \"Basic data validation\", score: 1 },\n      { value: \"auto-clean\", label: \"Automated data cleaning\", score: 2 },\n      { value: \"ai-normalize\", label: \"AI-powered normalization\", score: 3 }\n    ]\n  },\n  {\n    id: \"tech-3\",\n    category: \"Data & Infrastructure\",\n    question: \"Is data security/backup automated (compliance-ready)?\",\n    options: [\n      { value: \"manual-backup\", label: \"Manual backups\", score: 0 },\n      { value: \"scheduled-backup\", label: \"Scheduled backups\", score: 1 },\n      { value: \"auto-security\", label: \"Automated security and backups\", score: 2 },\n      { value: \"compliance-ready\", label: \"Compliance-ready automation\", score: 3 }\n    ]\n  },\n  {\n    id: \"tech-4\",\n    category: \"Data & Infrastructure\",\n    question: \"Are there predictive dashboards highlighting issues before they become bottlenecks?\",\n    options: [\n      { value: \"reactive\", label: \"Reactive problem-solving only\", score: 0 },\n      { value: \"basic-alerts\", label: \"Basic alerts for issues\", score: 1 },\n      { value: \"monitoring\", label: \"Active monitoring dashboards\", score: 2 },\n      { value: \"predictive\", label: \"Predictive AI-powered insights\", score: 3 }\n    ]\n  }\n];\n\nconst systemsTiers = [\n  {\n    name: \"No Systems\",\n    minScore: 0,\n    maxScore: 21,\n    icon: XCircle,\n    color: \"text-red-500\",\n    bgColor: \"bg-red-500/10\",\n    borderColor: \"border-red-500/20\",\n    description: \"Manual Operations, Chaos & Inefficiency\",\n    impact: \"Your business runs on manual processes, spreadsheets, and tribal knowledge. Team members waste hours on repetitive tasks, data gets lost or duplicated, and scaling is nearly impossible. You're constantly firefighting instead of growing. Every new hire means weeks of shadowing, and when someone leaves, critical knowledge walks out the door.\",\n    actions: [\n      \"Team drowning in manual, repetitive work\",\n      \"High error rates from human data entry\",\n      \"No visibility into what's actually working\",\n      \"Can't scale without hiring more people\",\n      \"Critical knowledge trapped in people's heads\"\n    ],\n    nextSteps: \"Start with the highest-pain areas: automate lead capture, implement a CRM, and digitize your most-used processes. Even basic automation will free up hours per week.\"\n  },\n  {\n    name: \"Basic Systems\",\n    minScore: 22,\n    maxScore: 42,\n    icon: AlertTriangle,\n    color: \"text-orange-500\",\n    bgColor: \"bg-orange-500/10\",\n    borderColor: \"border-orange-500/20\",\n    description: \"Some Automation, Still Mostly Manual\",\n    impact: \"You have a few tools in place—maybe a CRM, project management software, or accounting system. But they don't talk to each other. Your team still does a lot of copy-pasting between systems, manual reporting, and duplicate data entry. You can handle current volume, but growth means more chaos, not more profit.\",\n    actions: [\n      \"Tools exist but aren't integrated\",\n      \"Still significant manual work between systems\",\n      \"Reporting requires manual data gathering\",\n      \"Limited visibility across the business\",\n      \"Scaling means hiring, not optimizing\"\n    ],\n    nextSteps: \"Focus on integration: connect your core systems via APIs or automation platforms. Eliminate double-entry and create automated reporting dashboards. Layer in AI where it adds the most value.\"\n  },\n  {\n    name: \"Intermediate Systems\",\n    minScore: 43,\n    maxScore: 63,\n    icon: Zap,\n    color: \"text-blue-500\",\n    bgColor: \"bg-blue-500/10\",\n    borderColor: \"border-blue-500/20\",\n    description: \"Good Automation, Emerging AI Capabilities\",\n    impact: \"Your systems are well-integrated and automated. Data flows between tools, reports generate automatically, and your team focuses on high-value work instead of admin tasks. You're starting to leverage AI for specific use cases—lead scoring, content creation, or basic analytics. The business runs smoothly, but there's still room to optimize with smarter automation and predictive insights.\",\n    actions: [\n      \"Core systems integrated and automated\",\n      \"Team productive, minimal manual work\",\n      \"Beginning to use AI for specific tasks\",\n      \"Good visibility but not fully predictive\",\n      \"Can scale efficiently with current systems\"\n    ],\n    nextSteps: \"Expand AI capabilities across more functions. Implement predictive analytics for forecasting, AI-driven personalization for marketing and sales, and smart automation for quality control and client delivery.\"\n  },\n  {\n    name: \"Advanced Systems\",\n    minScore: 64,\n    maxScore: 84,\n    icon: Rocket,\n    color: \"text-green-500\",\n    bgColor: \"bg-green-500/10\",\n    borderColor: \"border-green-500/20\",\n    description: \"Fully AI-Enabled, Automated & Optimized\",\n    impact: \"Your business operates like a well-oiled machine. AI powers lead scoring, personalization, quality control, and predictive analytics. Systems are fully integrated, data flows seamlessly, and insights surface automatically. Your team focuses entirely on strategy and relationships while AI and automation handle the heavy lifting. You can scale revenue without proportionally scaling headcount.\",\n    actions: [\n      \"AI-driven decision-making across all functions\",\n      \"Fully integrated, zero-friction workflows\",\n      \"Predictive insights prevent problems before they happen\",\n      \"Team operates at peak productivity\",\n      \"Revenue scales faster than costs\"\n    ],\n    nextSteps: \"Continue optimizing with next-gen AI tools. Explore autonomous agents, advanced predictive models, and industry-specific AI solutions. Share your systems playbook to help other trades businesses transform.\"\n  }\n];\n\nexport default function SystemsCalculator() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n  const [showResults, setShowResults] = useState(false);\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    updateSEO({\n      title: \"Business Systems Maturity Calculator - Free AI & Automation Assessment | KPI Digital\",\n      description: \"Evaluate your systems maturity across sales, marketing, finance, and operations. Discover your AI and automation readiness with our comprehensive 28-question assessment.\",\n      ogTitle: \"Check Your Systems Maturity - Free Calculator\",\n      ogDescription: \"Are your systems ready for AI and automation? Take our free assessment to discover your systems maturity level across 6 key business areas.\",\n    });\n  }, []);\n\n  const progress = ((currentQuestion + 1) / questions.length) * 100;\n  const isAnswered = answers[questions[currentQuestion]?.id] !== undefined;\n\n  const handleAnswer = (value: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questions[currentQuestion].id]: value\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n    }\n  };\n\n  const calculateScore = () => {\n    let totalScore = 0;\n    questions.forEach(q => {\n      const answer = answers[q.id];\n      if (answer) {\n        const option = q.options.find(opt => opt.value === answer);\n        totalScore += option?.score || 0;\n      }\n    });\n    return totalScore;\n  };\n\n  const getTier = (score: number) => {\n    return systemsTiers.find(tier => score >= tier.minScore && score <= tier.maxScore) || systemsTiers[0];\n  };\n\n  const getCategoryScores = () => {\n    const categoryMap = new Map<string, { score: number; maxScore: number }>();\n    \n    questions.forEach(q => {\n      const answer = answers[q.id];\n      if (answer) {\n        const option = q.options.find(opt => opt.value === answer);\n        const current = categoryMap.get(q.category) || { score: 0, maxScore: 0 };\n        categoryMap.set(q.category, {\n          score: current.score + (option?.score || 0),\n          maxScore: current.maxScore + 3\n        });\n      }\n    });\n\n    return Array.from(categoryMap.entries()).map(([name, data]) => ({\n      name,\n      ...data\n    }));\n  };\n\n  const handleDownloadPDF = async (userEmail: string) => {\n    try {\n      const categories = getCategoryScores();\n      const currentDate = new Date().toLocaleDateString('en-AU', { \n        year: 'numeric', \n        month: 'long', \n        day: 'numeric' \n      });\n\n      const questionsWithAnswers = questions.map(q => {\n        const answer = answers[q.id];\n        const option = q.options.find(opt => opt.value === answer);\n        return {\n          id: q.id,\n          category: q.category,\n          question: q.question,\n          selectedAnswer: option?.label || 'Not answered',\n          score: option?.score || 0,\n        };\n      });\n\n      const pdfDoc = <PDFReport\n        calculatorType=\"systems\"\n        score={score}\n        maxScore={84}\n        tier={{\n          name: tier.name,\n          description: tier.description,\n          impact: tier.impact,\n          actions: tier.actions,\n          nextSteps: tier.nextSteps\n        }}\n        categories={categories}\n        userEmail={userEmail}\n        date={currentDate}\n        questions={questionsWithAnswers}\n      />;\n\n      const blob = await pdf(pdfDoc).toBlob();\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `KPI-Digital-Systems-Assessment-${userEmail.split('@')[0]}.pdf`;\n      link.click();\n      URL.revokeObjectURL(url);\n\n      try {\n        await apiRequest('POST', '/api/notify-report', {\n          calculatorType: 'Systems',\n          userEmail,\n          score,\n          maxScore: 84,\n          tierName: tier.name,\n          categories\n        });\n\n        toast({\n          title: \"Report Downloaded!\",\n          description: \"Your Systems Assessment report has been downloaded. We've also been notified of your results.\",\n        });\n      } catch (notifyError) {\n        console.error('Notification error:', notifyError);\n        toast({\n          title: \"Report Downloaded!\",\n          description: \"Your Systems Assessment report has been downloaded. (Note: We couldn't send the notification, but your download was successful.)\",\n        });\n      }\n    } catch (error) {\n      console.error('PDF generation error:', error);\n      throw error;\n    }\n  };\n\n  const score = calculateScore();\n  const tier = getTier(score);\n\n  if (showResults) {\n    const TierIcon = tier.icon;\n    \n    return (\n      <div className=\"min-h-screen bg-background py-24\">\n        <div className=\"container mx-auto px-4 max-w-4xl\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n                Your Systems Assessment Results\n              </h1>\n              <p className=\"text-xl text-muted-foreground\">\n                Based on your answers, here's your systems maturity level\n              </p>\n            </div>\n\n            <Card className={`p-8 md:p-12 mb-8 border-2 ${tier.borderColor} ${tier.bgColor}`}>\n              <div className=\"text-center mb-8\">\n                <TierIcon className={`h-20 w-20 ${tier.color} mx-auto mb-6`} />\n                <h2 className={`text-3xl md:text-4xl font-bold mb-2 ${tier.color}`}>\n                  {tier.name}\n                </h2>\n                <p className=\"text-xl text-foreground font-semibold mb-4\">\n                  {tier.description}\n                </p>\n                <div className=\"text-lg text-muted-foreground\">\n                  Your Score: <span className=\"font-bold text-foreground\">{score}</span> / 84\n                </div>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    How This Affects Your Business:\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {tier.impact}\n                  </p>\n                </div>\n\n                <div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    What This Means:\n                  </h3>\n                  <ul className=\"space-y-2\">\n                    {tier.actions.map((action, idx) => (\n                      <li key={idx} className=\"flex items-start gap-3\">\n                        <AlertTriangle className={`h-5 w-5 ${tier.color} flex-shrink-0 mt-0.5`} />\n                        <span className=\"text-muted-foreground\">{action}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"bg-background/50 rounded-lg p-6 mt-6\">\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">\n                    Next Steps:\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    {tier.nextSteps}\n                  </p>\n                </div>\n              </div>\n            </Card>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                onClick={() => setShowEmailModal(true)}\n                className=\"hover-elevate active-elevate-2 group\"\n                data-testid=\"button-download-pdf\"\n              >\n                <Download className=\"mr-2 h-5 w-5\" />\n                Download Full Report\n              </Button>\n              <Link href=\"/#quote-form\" asChild>\n                <Button \n                  size=\"lg\"\n                  variant=\"outline\"\n                  data-testid=\"button-get-help\"\n                >\n                  Get Help Building Systems\n                  <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform duration-300\" />\n                </Button>\n              </Link>\n              <Button\n                size=\"lg\"\n                variant=\"outline\"\n                onClick={() => {\n                  setShowResults(false);\n                  setCurrentQuestion(0);\n                  setAnswers({});\n                }}\n                data-testid=\"button-retake\"\n              >\n                Retake Assessment\n              </Button>\n            </div>\n\n            <EmailCaptureModal\n              open={showEmailModal}\n              onOpenChange={setShowEmailModal}\n              onSubmit={handleDownloadPDF}\n              calculatorType=\"Systems\"\n            />\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n\n  const question = questions[currentQuestion];\n  const selectedAnswer = answers[question.id];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <div className=\"container mx-auto px-4 max-w-3xl py-40\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Check Your Systems Maturity\n            </h1>\n            <p className=\"text-xl text-muted-foreground mb-8\">\n              Answer 28 questions to discover your automation and AI readiness\n            </p>\n            <Progress value={progress} className=\"h-3\" />\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Question {currentQuestion + 1} of {questions.length}\n            </p>\n          </div>\n\n          <Card className=\"p-8 md:p-10\">\n            <div className=\"mb-8\">\n              <div className=\"text-sm font-semibold text-primary mb-3\">\n                {question.category}\n              </div>\n              <h2 className=\"text-2xl font-bold text-foreground mb-6\">\n                {question.question}\n              </h2>\n\n              <RadioGroup value={selectedAnswer} onValueChange={handleAnswer}>\n                <div className=\"space-y-3\">\n                  {question.options.map((option) => (\n                    <div\n                      key={option.value}\n                      className={`flex items-center space-x-3 rounded-lg border-2 p-4 transition-all cursor-pointer hover-elevate ${\n                        selectedAnswer === option.value\n                          ? 'border-primary bg-primary/5'\n                          : 'border-border'\n                      }`}\n                      onClick={() => handleAnswer(option.value)}\n                    >\n                      <RadioGroupItem \n                        value={option.value} \n                        id={option.value}\n                        data-testid={`radio-${option.value}`}\n                      />\n                      <Label\n                        htmlFor={option.value}\n                        className=\"flex-1 cursor-pointer text-base\"\n                      >\n                        {option.label}\n                      </Label>\n                    </div>\n                  ))}\n                </div>\n              </RadioGroup>\n            </div>\n\n            <div className=\"flex justify-between gap-4\">\n              <Button\n                variant=\"outline\"\n                onClick={handleBack}\n                disabled={currentQuestion === 0}\n                data-testid=\"button-back\"\n              >\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back\n              </Button>\n              <Button\n                onClick={handleNext}\n                disabled={!isAnswered}\n                className=\"hover-elevate active-elevate-2 group\"\n                data-testid=\"button-next\"\n              >\n                {currentQuestion === questions.length - 1 ? 'See Results' : 'Next'}\n                <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300\" />\n              </Button>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":32181},"DEPLOYMENT.md":{"content":"# KPI Digital - Production Deployment Checklist\n\n## Pre-Deployment Requirements\n\n### 1. Environment Variables Configuration\nBefore deploying to production, ensure the following environment variables are set:\n\n#### **Required Variables:**\n- [ ] `RESEND_API_KEY` - Get from [Resend Dashboard](https://resend.com/api-keys)\n- [ ] `SESSION_SECRET` - Generate secure random string (32+ characters)\n  ```bash\n  node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\"\n  ```\n\n#### **Production Settings:**\n- [ ] `NODE_ENV=production`\n- [ ] `ALLOWED_ORIGINS` - Set to your production domain(s)\n  - Example: `https://kpidigital.com.au,https://www.kpidigital.com.au`\n- [ ] `PORT` - Usually handled automatically by hosting platform\n\n#### **Auto-Configured (No Action Needed):**\n- `DATABASE_URL` - Automatically set by Replit/Neon\n- Object storage variables (automatically configured)\n\n### 2. Security Checklist\n- [x] ✅ Content Security Policy (CSP) configured (strict in production)\n- [x] ✅ CORS policy configured with production whitelist\n- [x] ✅ Rate limiting enabled (global + email endpoints)\n- [x] ✅ Input validation and sanitization implemented\n- [x] ✅ Security headers configured (HSTS, X-Frame-Options, etc.)\n- [x] ✅ XSS prevention via HTML escaping\n- [x] ✅ Error handling without information leakage\n- [ ] Verify ALLOWED_ORIGINS includes all production domains\n\n### 3. SEO & Meta Tags\n- [x] ✅ Favicon configured (`/favicon.png`)\n- [x] ✅ Home page SEO implemented\n- [x] ✅ Clarity Calculator SEO implemented\n- [x] ✅ Systems Calculator SEO implemented\n- [x] ✅ Growth Calculator SEO implemented\n- [x] ✅ Open Graph tags configured\n- [x] ✅ Twitter Card tags configured\n- [ ] Verify meta descriptions are compelling for all pages\n\n### 4. Email Functionality\n- [ ] Test quote form submission\n- [ ] Verify dual email delivery (client + louis@kpidigital.com.au)\n- [ ] Test PDF report email notifications\n- [ ] Confirm email templates display correctly\n- [ ] Verify error handling for failed email sends\n\n### 5. Calculator & PDF Reports\n- [ ] Test all three calculators (Clarity, Systems, Growth)\n- [ ] Verify PDF generation works correctly\n- [ ] Test email capture modal\n- [ ] Confirm PDF download functionality\n- [ ] Verify report notification emails\n\n### 6. Mobile & Accessibility\n- [ ] Test responsive design on mobile devices\n- [ ] Verify touch interactions work correctly\n- [ ] Test navigation on mobile\n- [ ] Verify form inputs are accessible\n- [ ] Test calculator progression on mobile\n\n### 7. Performance\n- [ ] Run Lighthouse audit (target: LCP ≤2.5s, INP ≤200ms, CLS ≤0.1)\n- [ ] Test page load times\n- [ ] Verify image optimization\n- [ ] Check for console errors/warnings\n- [ ] Test under slow network conditions\n\n### 8. Legal & Compliance\n- [x] ✅ Privacy Policy page published\n- [x] ✅ Terms of Service page published\n- [x] ✅ Cookie Policy page published\n- [ ] Verify all legal pages are accessible from footer\n- [ ] Confirm copyright dates are current (2025)\n\n## Deployment Steps\n\n### Step 1: Final Testing\n1. Test all forms (quote form, email capture)\n2. Test all calculators end-to-end\n3. Verify PDF downloads work\n4. Test email notifications\n5. Check all navigation links\n6. Verify mobile experience\n\n### Step 2: Environment Setup\n1. Set all required environment variables in production:\n   - `RESEND_API_KEY` - Your Resend API key\n   - `EMAIL_FROM` - Verified sender email (e.g., noreply@kpidigital.com.au)\n   - `SESSION_SECRET` - Secure random string (32+ chars)\n   - `NODE_ENV=production`\n   - `ALLOWED_ORIGINS` - Production domain(s)\n2. Verify all values are correctly set\n3. Test email sending with production credentials\n\n### Step 3: Security Verification\n1. Verify CSP is strict (no unsafe-inline/unsafe-eval in production)\n2. Confirm CORS only allows production domains\n3. Test rate limiting is active\n4. Verify error messages don't leak sensitive information\n5. Check security headers in browser dev tools\n\n### Step 4: Database & Storage\n1. Verify database connection works\n2. Test session storage\n3. Confirm object storage (if needed) is configured\n4. Backup any existing data\n\n### Step 5: Build & Deploy\n**Production Deployment (Required)**\n1. Build production assets: `npm run build`\n2. Start production server: `npm start`\n3. Server runs optimized bundles with strict security\n4. Vite dev middleware is disabled in production\n\n**Note:** The `npm run dev` command is for local development only and cannot be used in production. It always runs in development mode regardless of NODE_ENV setting.\n\n### Step 6: Verify Deployment\n1. Monitor server logs for startup errors\n2. Test all critical user flows\n3. Verify CSP is strict (check browser console for violations)\n4. Test email functionality end-to-end\n5. Check performance metrics (Core Web Vitals)\n\n### Step 6: Post-Deployment\n1. Test the live site thoroughly\n2. Verify SSL/HTTPS is working\n3. Test all email functionality\n4. Monitor error logs\n5. Check analytics integration (if applicable)\n\n## Common Issues & Solutions\n\n### CSP Violations\n- **Issue**: Console shows CSP violations\n- **Solution**: Review CSP configuration in `server/index.ts`\n- **Note**: Development allows unsafe-inline/unsafe-eval for Vite\n\n### Email Not Sending\n- **Issue**: Emails fail to send\n- **Solution**: Verify `RESEND_API_KEY` is set and valid\n- **Check**: Review rate limiting (10 emails/hour per IP)\n\n### CORS Errors\n- **Issue**: CORS errors in production\n- **Solution**: Add domain to `ALLOWED_ORIGINS` environment variable\n- **Format**: `https://domain1.com,https://domain2.com`\n\n### Rate Limiting Blocking Users\n- **Issue**: Legitimate users being rate limited\n- **Solution**: Adjust limits in `server/index.ts`\n- **Current**: Global 1000/15min, Email 10/hour\n\n## Monitoring & Maintenance\n\n### What to Monitor:\n1. **Error Logs**: Check for recurring errors\n2. **Email Delivery**: Monitor success/failure rates\n3. **Form Submissions**: Track quote requests\n4. **Calculator Usage**: Monitor assessment completions\n5. **Performance Metrics**: Track Core Web Vitals\n\n### Regular Maintenance:\n- Update dependencies monthly\n- Review security advisories\n- Monitor API usage (Resend)\n- Backup database regularly\n- Review and rotate secrets quarterly\n\n## Support Contacts\n\n- **Technical Issues**: Check server logs first\n- **Email Issues**: Verify Resend API key and quota\n- **Security Concerns**: Review security headers and CSP\n- **Database Issues**: Check DATABASE_URL connection\n\n## Rollback Plan\n\nIf issues occur after deployment:\n1. Check error logs for specific issues\n2. Verify environment variables are correct\n3. Test email functionality separately\n4. Revert to last known good deployment if necessary\n5. Use Replit's rollback feature if available\n\n---\n\n**Last Updated**: October 2025\n**Deployment Status**: Ready for Production ✅\n","size_bytes":6840},"client/src/pages/CookiePolicy.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Navigation from \"@/components/Navigation\";\n\nexport default function CookiePolicy() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Header */}\n      <header className=\"border-b border-border pt-40\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-4xl font-bold\">Cookie Policy</h1>\n          <p className=\"text-muted-foreground mt-2\">Last updated: January 1, 2025</p>\n        </div>\n      </header>\n\n      {/* Content */}\n      <motion.main\n        className=\"container mx-auto px-4 py-12 max-w-4xl\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"prose prose-lg dark:prose-invert max-w-none\">\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">1. What Are Cookies?</h2>\n            <p>\n              Cookies are small text files that are placed on your device (computer, smartphone, or tablet) when you visit a website. They are widely used to make websites work more efficiently and provide information to website owners.\n            </p>\n            <p>\n              This Cookie Policy explains how KPI Digital (\"we,\" \"our,\" or \"us\") uses cookies and similar technologies on our website kpidigital.com.au.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">2. How We Use Cookies</h2>\n            <p>We use cookies and similar technologies for the following purposes:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li><strong>Essential Operation:</strong> To enable basic website functionality</li>\n              <li><strong>Security:</strong> To protect your account and prevent fraudulent activity</li>\n              <li><strong>Preferences:</strong> To remember your settings and preferences</li>\n              <li><strong>Analytics:</strong> To understand how visitors use our website</li>\n              <li><strong>Performance:</strong> To improve website speed and functionality</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">3. Types of Cookies We Use</h2>\n\n            <h3 className=\"text-xl font-semibold mb-3\">3.1 Strictly Necessary Cookies</h3>\n            <p>\n              These cookies are essential for the website to function properly. They enable core functionality such as security, network management, and accessibility. You cannot opt out of these cookies.\n            </p>\n            <div className=\"bg-muted p-4 rounded-lg my-4\">\n              <p className=\"font-semibold mb-2\">Examples include:</p>\n              <ul className=\"list-disc pl-6\">\n                <li>Session cookies for maintaining your logged-in state</li>\n                <li>Security cookies for authentication and fraud prevention</li>\n                <li>Load balancing cookies for distributing server load</li>\n              </ul>\n            </div>\n\n            <h3 className=\"text-xl font-semibold mb-3\">3.2 Functional Cookies</h3>\n            <p>\n              These cookies enable enhanced functionality and personalization, such as remembering your preferences, language settings, or region.\n            </p>\n            <div className=\"bg-muted p-4 rounded-lg my-4\">\n              <p className=\"font-semibold mb-2\">Examples include:</p>\n              <ul className=\"list-disc pl-6\">\n                <li>Preference cookies for saving your settings</li>\n                <li>Language cookies for displaying content in your preferred language</li>\n                <li>UI customization cookies for remembering your layout preferences</li>\n              </ul>\n            </div>\n\n            <h3 className=\"text-xl font-semibold mb-3\">3.3 Analytics and Performance Cookies</h3>\n            <p>\n              These cookies help us understand how visitors interact with our website by collecting and reporting information anonymously. We use this data to improve our website's performance and user experience.\n            </p>\n            <div className=\"bg-muted p-4 rounded-lg my-4\">\n              <p className=\"font-semibold mb-2\">Examples include:</p>\n              <ul className=\"list-disc pl-6\">\n                <li>Google Analytics cookies for tracking page views and user behavior</li>\n                <li>Performance monitoring cookies for identifying technical issues</li>\n                <li>Heatmap cookies for understanding user interaction patterns</li>\n              </ul>\n            </div>\n\n            <h3 className=\"text-xl font-semibold mb-3\">3.4 Marketing and Advertising Cookies</h3>\n            <p>\n              These cookies track your browsing habits to enable us to show advertising that is more likely to be of interest to you. They may also be used to limit the number of times you see an advertisement and measure the effectiveness of advertising campaigns.\n            </p>\n            <div className=\"bg-muted p-4 rounded-lg my-4\">\n              <p className=\"font-semibold mb-2\">Examples include:</p>\n              <ul className=\"list-disc pl-6\">\n                <li>Retargeting cookies for showing relevant ads on other websites</li>\n                <li>Conversion tracking cookies for measuring campaign success</li>\n                <li>Social media cookies for enabling social sharing features</li>\n              </ul>\n            </div>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">4. Third-Party Cookies</h2>\n            <p>\n              In addition to our own cookies, we may also use third-party cookies to report usage statistics, deliver advertisements, and provide enhanced functionality.\n            </p>\n            <p className=\"mt-4\">Third-party services we use may include:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li><strong>Google Analytics:</strong> For website analytics and reporting</li>\n              <li><strong>Resend:</strong> For email delivery services</li>\n              <li><strong>Social Media Platforms:</strong> For social sharing and integration (Facebook, LinkedIn, Twitter, Instagram)</li>\n            </ul>\n            <p>\n              These third parties have their own privacy policies and cookie policies. We recommend reviewing them:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Google Analytics Privacy Policy: policies.google.com/privacy</li>\n              <li>Facebook Cookie Policy: www.facebook.com/policies/cookies</li>\n              <li>LinkedIn Cookie Policy: www.linkedin.com/legal/cookie-policy</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">5. Session vs. Persistent Cookies</h2>\n            \n            <h3 className=\"text-xl font-semibold mb-3\">5.1 Session Cookies</h3>\n            <p>\n              Session cookies are temporary cookies that expire when you close your browser. They help us remember your actions during a single browsing session.\n            </p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">5.2 Persistent Cookies</h3>\n            <p>\n              Persistent cookies remain on your device for a set period or until you manually delete them. They help us remember your preferences and settings across multiple visits.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">6. How to Control Cookies</h2>\n            <p>\n              You have the right to decide whether to accept or reject cookies. You can exercise your cookie preferences in the following ways:\n            </p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">6.1 Browser Settings</h3>\n            <p>\n              Most web browsers allow you to control cookies through their settings. You can set your browser to:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Block all cookies</li>\n              <li>Block third-party cookies only</li>\n              <li>Clear all cookies when you close the browser</li>\n              <li>Notify you when a cookie is set</li>\n            </ul>\n            <p>Here's how to manage cookies in popular browsers:</p>\n            <div className=\"bg-muted p-4 rounded-lg my-4\">\n              <ul className=\"space-y-2\">\n                <li><strong>Chrome:</strong> Settings → Privacy and security → Cookies and other site data</li>\n                <li><strong>Firefox:</strong> Options → Privacy & Security → Cookies and Site Data</li>\n                <li><strong>Safari:</strong> Preferences → Privacy → Cookies and website data</li>\n                <li><strong>Edge:</strong> Settings → Cookies and site permissions → Cookies and site data</li>\n              </ul>\n            </div>\n\n            <h3 className=\"text-xl font-semibold mb-3\">6.2 Opt-Out Tools</h3>\n            <p>You can also opt out of specific types of cookies using these tools:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li><strong>Google Analytics Opt-out:</strong> tools.google.com/dlpage/gaoptout</li>\n              <li><strong>Network Advertising Initiative:</strong> optout.networkadvertising.org</li>\n              <li><strong>Digital Advertising Alliance:</strong> optout.aboutads.info</li>\n            </ul>\n\n            <h3 className=\"text-xl font-semibold mb-3\">6.3 Important Note</h3>\n            <p>\n              Please note that blocking or deleting cookies may impact your experience on our website. Some features may not function properly without cookies, and you may need to manually adjust some preferences every time you visit.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">7. Do Not Track Signals</h2>\n            <p>\n              Some browsers include a \"Do Not Track\" (DNT) feature that signals to websites that you do not want to have your online activity tracked. Our website currently does not respond to DNT signals, as there is no industry-wide standard for how to interpret these signals.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">8. Cookies and Mobile Devices</h2>\n            <p>\n              When you access our website through a mobile device, cookies and similar technologies work in a similar way to desktop browsers. You can manage mobile cookies through your device's browser settings.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">9. Cookie Lifespan</h2>\n            <p>The lifespan of cookies varies depending on their purpose:</p>\n            <div className=\"bg-muted p-4 rounded-lg my-4\">\n              <ul className=\"space-y-2\">\n                <li><strong>Session Cookies:</strong> Expire when you close your browser</li>\n                <li><strong>Functional Cookies:</strong> Typically last 1-12 months</li>\n                <li><strong>Analytics Cookies:</strong> Usually last 1-24 months</li>\n                <li><strong>Marketing Cookies:</strong> Can last up to 24 months</li>\n              </ul>\n            </div>\n            <p>\n              You can view and delete cookies stored on your device at any time through your browser settings.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">10. Updates to This Cookie Policy</h2>\n            <p>\n              We may update this Cookie Policy from time to time to reflect changes in technology, legislation, or our business operations. We will notify you of any material changes by:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Posting the updated policy on this page</li>\n              <li>Updating the \"Last updated\" date at the top of this policy</li>\n              <li>Sending an email notification for significant changes (if you have an account)</li>\n            </ul>\n            <p>\n              We encourage you to review this Cookie Policy periodically to stay informed about how we use cookies.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">11. Cookie Consent</h2>\n            <p>\n              By continuing to use our website without changing your cookie settings, you consent to our use of cookies as described in this policy. If you do not agree to our use of cookies, you should adjust your browser settings or discontinue using our website.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">12. More Information</h2>\n            <p>\n              For more information about how we process your personal data, please see our <Link href=\"/privacy-policy\" className=\"text-primary hover:underline\">Privacy Policy</Link>.\n            </p>\n            <p className=\"mt-4\">\n              If you have questions about cookies or would like more information about specific cookies we use, please contact us:\n            </p>\n            <div className=\"bg-muted p-6 rounded-lg mt-4\">\n              <p className=\"font-semibold\">KPI Digital</p>\n              <p>Email: louis@kpidigital.com.au</p>\n              <p>Website: kpidigital.com.au</p>\n            </div>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">13. Australian Privacy Laws</h2>\n            <p>\n              KPI Digital complies with the Australian Privacy Principles (APPs) under the Privacy Act 1988 (Cth). While the Privacy Act does not specifically regulate cookies, we are committed to transparency about how we collect and use your information, including through cookies and similar technologies.\n            </p>\n          </section>\n        </div>\n      </motion.main>\n    </div>\n  );\n}\n","size_bytes":14212},"client/src/pages/PrivacyPolicy.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Navigation from \"@/components/Navigation\";\n\nexport default function PrivacyPolicy() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Header */}\n      <header className=\"border-b border-border pt-40\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-4xl font-bold\">Privacy Policy</h1>\n          <p className=\"text-muted-foreground mt-2\">Last updated: January 1, 2025</p>\n        </div>\n      </header>\n\n      {/* Content */}\n      <motion.main\n        className=\"container mx-auto px-4 py-12 max-w-4xl\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"prose prose-lg dark:prose-invert max-w-none\">\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">1. Introduction</h2>\n            <p>\n              KPI Digital (\"we,\" \"our,\" or \"us\") is committed to protecting your privacy. This Privacy Policy explains how we collect, use, disclose, and safeguard your information when you visit our website kpidigital.com.au and use our services.\n            </p>\n            <p>\n              Please read this privacy policy carefully. If you do not agree with the terms of this privacy policy, please do not access the site or use our services.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">2. Information We Collect</h2>\n            \n            <h3 className=\"text-xl font-semibold mb-3\">2.1 Personal Information</h3>\n            <p>We may collect personal information that you voluntarily provide to us when you:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Fill out our quote request form</li>\n              <li>Complete our assessment calculators (Clarity, Systems, Growth)</li>\n              <li>Subscribe to our newsletter or marketing communications</li>\n              <li>Contact us directly via email or phone</li>\n            </ul>\n            <p>This information may include:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Name (first and last)</li>\n              <li>Email address</li>\n              <li>Company name</li>\n              <li>Phone number</li>\n              <li>Business information and project details</li>\n              <li>Assessment responses and scores</li>\n            </ul>\n\n            <h3 className=\"text-xl font-semibold mb-3\">2.2 Automatically Collected Information</h3>\n            <p>When you visit our website, we may automatically collect certain information about your device and usage patterns, including:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>IP address</li>\n              <li>Browser type and version</li>\n              <li>Operating system</li>\n              <li>Pages visited and time spent on pages</li>\n              <li>Referring website</li>\n              <li>Device information</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">3. How We Use Your Information</h2>\n            <p>We use the information we collect for the following purposes:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li><strong>Service Delivery:</strong> To provide, operate, and maintain our services</li>\n              <li><strong>Communication:</strong> To respond to your inquiries and send you information about our services</li>\n              <li><strong>Assessment Reports:</strong> To generate and deliver your personalized business assessment reports</li>\n              <li><strong>Marketing:</strong> To send you promotional materials, newsletters, and updates (with your consent)</li>\n              <li><strong>Analytics:</strong> To analyze usage patterns and improve our website and services</li>\n              <li><strong>Legal Compliance:</strong> To comply with applicable laws and regulations</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">4. Information Sharing and Disclosure</h2>\n            <p>We do not sell, trade, or rent your personal information to third parties. We may share your information in the following circumstances:</p>\n            \n            <h3 className=\"text-xl font-semibold mb-3\">4.1 Service Providers</h3>\n            <p>We may share your information with trusted third-party service providers who assist us in:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Email delivery (Resend)</li>\n              <li>Website hosting and maintenance</li>\n              <li>Analytics and reporting</li>\n              <li>Customer relationship management</li>\n            </ul>\n\n            <h3 className=\"text-xl font-semibold mb-3\">4.2 Legal Requirements</h3>\n            <p>We may disclose your information if required by law or in response to valid requests by public authorities.</p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">4.3 Business Transfers</h3>\n            <p>If KPI Digital is involved in a merger, acquisition, or sale of assets, your information may be transferred as part of that transaction.</p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">5. Data Security</h2>\n            <p>\n              We implement appropriate technical and organizational security measures to protect your personal information from unauthorized access, disclosure, alteration, or destruction. These measures include:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Encryption of data in transit using SSL/TLS</li>\n              <li>Secure server infrastructure</li>\n              <li>Regular security assessments</li>\n              <li>Access controls and authentication</li>\n            </ul>\n            <p>\n              However, no method of transmission over the internet or electronic storage is 100% secure. While we strive to protect your personal information, we cannot guarantee absolute security.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">6. Your Privacy Rights</h2>\n            <p>Depending on your location, you may have the following rights regarding your personal information:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li><strong>Access:</strong> Request access to your personal information</li>\n              <li><strong>Correction:</strong> Request correction of inaccurate or incomplete information</li>\n              <li><strong>Deletion:</strong> Request deletion of your personal information</li>\n              <li><strong>Opt-Out:</strong> Opt-out of marketing communications</li>\n              <li><strong>Data Portability:</strong> Request a copy of your data in a portable format</li>\n              <li><strong>Restriction:</strong> Request restriction of processing in certain circumstances</li>\n            </ul>\n            <p>To exercise these rights, please contact us at louis@kpidigital.com.au</p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">7. Cookies and Tracking Technologies</h2>\n            <p>\n              We use cookies and similar tracking technologies to enhance your experience on our website. For detailed information about our use of cookies, please see our <Link href=\"/cookie-policy\" className=\"text-primary hover:underline\">Cookie Policy</Link>.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">8. Third-Party Links</h2>\n            <p>\n              Our website may contain links to third-party websites. We are not responsible for the privacy practices or content of these external sites. We encourage you to review the privacy policies of any third-party sites you visit.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">9. Children's Privacy</h2>\n            <p>\n              Our services are not directed to individuals under the age of 18. We do not knowingly collect personal information from children. If you believe we have collected information from a child, please contact us immediately.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">10. International Data Transfers</h2>\n            <p>\n              Your information may be transferred to and processed in countries other than your country of residence. We ensure that appropriate safeguards are in place to protect your information in accordance with this Privacy Policy.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">11. Data Retention</h2>\n            <p>\n              We retain your personal information for as long as necessary to fulfill the purposes outlined in this Privacy Policy, unless a longer retention period is required or permitted by law. Assessment data and reports are retained for up to 3 years for business records purposes.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">12. Changes to This Privacy Policy</h2>\n            <p>\n              We may update this Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page and updating the \"Last updated\" date. We encourage you to review this Privacy Policy periodically for any changes.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">13. Contact Us</h2>\n            <p>If you have any questions or concerns about this Privacy Policy or our privacy practices, please contact us:</p>\n            <div className=\"bg-muted p-6 rounded-lg mt-4\">\n              <p className=\"font-semibold\">KPI Digital</p>\n              <p>Email: louis@kpidigital.com.au</p>\n              <p>Website: kpidigital.com.au</p>\n            </div>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">14. Australian Privacy Principles</h2>\n            <p>\n              KPI Digital complies with the Australian Privacy Principles (APPs) contained in the Privacy Act 1988 (Cth). If you are located in Australia, you have additional rights under Australian privacy law, including the right to make a complaint to the Office of the Australian Information Commissioner (OAIC).\n            </p>\n          </section>\n        </div>\n      </motion.main>\n    </div>\n  );\n}\n","size_bytes":10934},"client/src/pages/TermsOfService.tsx":{"content":"import { motion } from \"framer-motion\";\nimport Navigation from \"@/components/Navigation\";\n\nexport default function TermsOfService() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Header */}\n      <header className=\"border-b border-border pt-40\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <h1 className=\"text-4xl font-bold\">Terms of Service</h1>\n          <p className=\"text-muted-foreground mt-2\">Last updated: January 1, 2025</p>\n        </div>\n      </header>\n\n      {/* Content */}\n      <motion.main\n        className=\"container mx-auto px-4 py-12 max-w-4xl\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"prose prose-lg dark:prose-invert max-w-none\">\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">1. Agreement to Terms</h2>\n            <p>\n              Welcome to KPI Digital. By accessing or using our website (kpidigital.com.au) and services, you agree to be bound by these Terms of Service (\"Terms\"). If you do not agree to these Terms, please do not use our services.\n            </p>\n            <p>\n              These Terms constitute a legally binding agreement between you and KPI Digital (\"Company,\" \"we,\" \"us,\" or \"our\"). We reserve the right to update these Terms at any time, and your continued use of our services constitutes acceptance of any changes.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">2. Description of Services</h2>\n            <p>KPI Digital provides business consulting and digital transformation services for trades businesses, including but not limited to:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Business assessment calculators (Clarity, Systems, Growth)</li>\n              <li>Digital foundations setup and implementation</li>\n              <li>Pricing and profit audits</li>\n              <li>Sales system implementation</li>\n              <li>Control dashboard creation</li>\n              <li>Referral system setup</li>\n              <li>Complete business transformation consulting</li>\n            </ul>\n            <p>\n              Our services are designed specifically for Australian trades businesses seeking to improve operational clarity, implement effective systems, and achieve sustainable growth.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">3. User Accounts and Registration</h2>\n            <p>\n              While some areas of our website are accessible without registration, certain services may require you to create an account or provide personal information. When creating an account, you agree to:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Provide accurate, current, and complete information</li>\n              <li>Maintain and promptly update your account information</li>\n              <li>Maintain the security of your account credentials</li>\n              <li>Accept responsibility for all activities under your account</li>\n              <li>Notify us immediately of any unauthorized access or security breach</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">4. Acceptable Use</h2>\n            <p>You agree to use our services only for lawful purposes and in accordance with these Terms. You agree NOT to:</p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Use our services in any way that violates any applicable law or regulation</li>\n              <li>Transmit any harmful code, viruses, or malicious software</li>\n              <li>Attempt to gain unauthorized access to our systems or networks</li>\n              <li>Interfere with or disrupt the integrity or performance of our services</li>\n              <li>Impersonate any person or entity or falsely state your affiliation</li>\n              <li>Collect or harvest any information from our services using automated means</li>\n              <li>Use our services to spam, harass, or abuse others</li>\n              <li>Reverse engineer, decompile, or disassemble any part of our services</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">5. Intellectual Property Rights</h2>\n            \n            <h3 className=\"text-xl font-semibold mb-3\">5.1 Our Content</h3>\n            <p>\n              All content on our website, including but not limited to text, graphics, logos, images, software, calculators, assessment tools, and reports, is the property of KPI Digital or our licensors and is protected by Australian and international copyright, trademark, and other intellectual property laws.\n            </p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">5.2 Limited License</h3>\n            <p>\n              We grant you a limited, non-exclusive, non-transferable license to access and use our services for your personal or internal business purposes. This license does not include any right to:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Reproduce, distribute, or publicly display our content</li>\n              <li>Modify or create derivative works from our content</li>\n              <li>Use our content for commercial purposes without our written consent</li>\n            </ul>\n\n            <h3 className=\"text-xl font-semibold mb-3\">5.3 Your Content</h3>\n            <p>\n              When you submit information through our services (such as assessment responses or quote requests), you retain ownership of that content. However, you grant us a worldwide, royalty-free license to use, process, and store that content solely for the purpose of providing our services to you.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">6. Service Fees and Payment</h2>\n            <p>\n              Certain services may require payment of fees. All fees are quoted in Australian Dollars (AUD) unless otherwise specified. You agree to:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Pay all applicable fees as described in our service agreements</li>\n              <li>Provide current, complete, and accurate billing information</li>\n              <li>Promptly update account information if your payment details change</li>\n              <li>Pay any applicable taxes associated with our services</li>\n            </ul>\n            <p>\n              All fees are non-refundable except as expressly stated in a written service agreement. We reserve the right to change our fees with 30 days' notice.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">7. Assessment Tools and Reports</h2>\n            <p>\n              Our business assessment calculators (Clarity, Systems, and Growth) are provided for informational and educational purposes only. You acknowledge that:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Assessment results are based on self-reported information</li>\n              <li>Results should not be considered professional advice without consultation</li>\n              <li>We do not guarantee specific business outcomes from implementing recommendations</li>\n              <li>Reports are personalized to your responses and should be kept confidential</li>\n              <li>Assessment methodologies may be updated or modified without notice</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">8. Disclaimer of Warranties</h2>\n            <p>\n              OUR SERVICES ARE PROVIDED \"AS IS\" AND \"AS AVAILABLE\" WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED. TO THE FULLEST EXTENT PERMITTED BY LAW, WE DISCLAIM ALL WARRANTIES, INCLUDING BUT NOT LIMITED TO:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Warranties of merchantability and fitness for a particular purpose</li>\n              <li>Warranties that our services will be uninterrupted, error-free, or secure</li>\n              <li>Warranties regarding the accuracy, reliability, or completeness of content</li>\n              <li>Warranties that defects will be corrected</li>\n            </ul>\n            <p>\n              We do not warrant that our services will meet your requirements or that the results obtained will be accurate or reliable.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">9. Limitation of Liability</h2>\n            <p>\n              TO THE MAXIMUM EXTENT PERMITTED BY LAW, KPI DIGITAL SHALL NOT BE LIABLE FOR ANY INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, OR PUNITIVE DAMAGES, INCLUDING BUT NOT LIMITED TO:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Loss of profits, revenue, or business opportunities</li>\n              <li>Loss of data or information</li>\n              <li>Business interruption</li>\n              <li>Loss of goodwill</li>\n            </ul>\n            <p>\n              Our total liability for any claims arising from these Terms or our services shall not exceed the amount you paid us in the 12 months prior to the claim, or $100 AUD, whichever is greater.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">10. Indemnification</h2>\n            <p>\n              You agree to indemnify, defend, and hold harmless KPI Digital, its officers, directors, employees, and agents from any claims, damages, losses, liabilities, and expenses (including legal fees) arising from:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Your use of our services</li>\n              <li>Your violation of these Terms</li>\n              <li>Your violation of any rights of another party</li>\n              <li>Your violation of any applicable laws or regulations</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">11. Third-Party Services and Links</h2>\n            <p>\n              Our services may contain links to third-party websites or integrate with third-party services. We are not responsible for:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>The content, privacy policies, or practices of third-party sites</li>\n              <li>Any transactions you may have with third parties</li>\n              <li>The availability or functionality of third-party services</li>\n            </ul>\n            <p>\n              Your use of third-party services is at your own risk and subject to their terms and conditions.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">12. Termination</h2>\n            <p>\n              We reserve the right to suspend or terminate your access to our services at any time, with or without notice, for any reason, including but not limited to:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Violation of these Terms</li>\n              <li>Fraudulent or illegal activity</li>\n              <li>Extended periods of inactivity</li>\n              <li>Request by law enforcement or government agencies</li>\n            </ul>\n            <p>\n              Upon termination, your right to use our services will immediately cease. Provisions of these Terms that by their nature should survive termination will survive, including but not limited to intellectual property rights, disclaimers, and limitations of liability.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">13. Governing Law and Dispute Resolution</h2>\n            <p>\n              These Terms are governed by the laws of Australia, without regard to conflict of law principles. Any disputes arising from these Terms or our services shall be resolved through:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li><strong>Informal Resolution:</strong> We encourage you to contact us first to resolve any issues informally</li>\n              <li><strong>Mediation:</strong> If informal resolution fails, disputes may be submitted to mediation</li>\n              <li><strong>Courts:</strong> Legal proceedings must be brought in the courts of Australia</li>\n            </ul>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">14. Changes to Terms</h2>\n            <p>\n              We reserve the right to modify these Terms at any time. We will notify users of material changes by:\n            </p>\n            <ul className=\"list-disc pl-6 mb-4\">\n              <li>Posting the updated Terms on our website</li>\n              <li>Updating the \"Last updated\" date</li>\n              <li>Sending email notification for significant changes</li>\n            </ul>\n            <p>\n              Your continued use of our services after changes become effective constitutes acceptance of the modified Terms.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">15. General Provisions</h2>\n            \n            <h3 className=\"text-xl font-semibold mb-3\">15.1 Entire Agreement</h3>\n            <p>These Terms, along with our Privacy Policy and any service-specific agreements, constitute the entire agreement between you and KPI Digital.</p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">15.2 Severability</h3>\n            <p>If any provision of these Terms is found to be unenforceable, the remaining provisions will continue in full force and effect.</p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">15.3 Waiver</h3>\n            <p>Our failure to enforce any right or provision of these Terms will not be considered a waiver of those rights.</p>\n\n            <h3 className=\"text-xl font-semibold mb-3\">15.4 Assignment</h3>\n            <p>You may not assign or transfer these Terms without our written consent. We may assign these Terms to any affiliate or successor without restriction.</p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">16. Contact Information</h2>\n            <p>If you have any questions about these Terms, please contact us:</p>\n            <div className=\"bg-muted p-6 rounded-lg mt-4\">\n              <p className=\"font-semibold\">KPI Digital</p>\n              <p>Email: louis@kpidigital.com.au</p>\n              <p>Website: kpidigital.com.au</p>\n            </div>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">17. Australian Consumer Law</h2>\n            <p>\n              Nothing in these Terms excludes, restricts, or modifies any consumer rights under the Australian Consumer Law or other applicable laws that cannot be excluded, restricted, or modified by agreement. Where applicable, our liability is limited to re-supplying the services or paying the cost of having the services resupplied.\n            </p>\n          </section>\n        </div>\n      </motion.main>\n    </div>\n  );\n}\n","size_bytes":15749},"server/security.ts":{"content":"import validator from 'validator';\n\n// HTML escape to prevent XSS attacks in emails\nexport function escapeHtml(unsafe: string): string {\n  if (typeof unsafe !== 'string') return '';\n  \n  return unsafe\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\n// Sanitize and validate email\nexport function sanitizeEmail(email: string): string | null {\n  if (!email || typeof email !== 'string') return null;\n  \n  const trimmed = email.trim().toLowerCase();\n  \n  if (!validator.isEmail(trimmed)) {\n    return null;\n  }\n  \n  // Additional check for length\n  if (trimmed.length > 254) return null;\n  \n  return trimmed;\n}\n\n// Sanitize text input with length limit\nexport function sanitizeText(text: string, maxLength: number = 1000): string {\n  if (!text || typeof text !== 'string') return '';\n  \n  const trimmed = text.trim();\n  \n  // Limit length\n  if (trimmed.length > maxLength) {\n    return trimmed.substring(0, maxLength);\n  }\n  \n  return trimmed;\n}\n\n// Validate and sanitize name (letters, spaces, hyphens, apostrophes only)\nexport function sanitizeName(name: string, maxLength: number = 100): string | null {\n  if (!name || typeof name !== 'string') return null;\n  \n  const trimmed = name.trim();\n  \n  // Check length\n  if (trimmed.length < 1 || trimmed.length > maxLength) return null;\n  \n  // Allow only letters, spaces, hyphens, and apostrophes\n  const nameRegex = /^[a-zA-Z\\s'-]+$/;\n  if (!nameRegex.test(trimmed)) return null;\n  \n  return trimmed;\n}\n\n// Validate calculator type\nexport function validateCalculatorType(type: string): string | null {\n  const validTypes = ['Clarity Calculator', 'Systems Calculator', 'Growth Calculator'];\n  \n  if (!type || typeof type !== 'string') return null;\n  \n  const trimmed = type.trim();\n  \n  if (!validTypes.includes(trimmed)) return null;\n  \n  return trimmed;\n}\n\n// Sanitize numeric score\nexport function sanitizeScore(score: any): number | null {\n  const num = Number(score);\n  \n  if (isNaN(num) || !isFinite(num) || num < 0) return null;\n  \n  return Math.floor(num);\n}\n\n// Validate tier name\nexport function validateTierName(tierName: string): string | null {\n  if (!tierName || typeof tierName !== 'string') return null;\n  \n  const trimmed = tierName.trim();\n  \n  // Tier names should be reasonable length\n  if (trimmed.length < 1 || trimmed.length > 100) return null;\n  \n  return trimmed;\n}\n","size_bytes":2433}},"version":1}